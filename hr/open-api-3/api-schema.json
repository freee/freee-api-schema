{
  "openapi": "3.0.1",
  "info": {
    "title": "freee人事労務 API",
    "description": "\n<p>freee人事労務のAPI仕様です。</p>\n\n<hr />\n\n<h2 id=\"start_guide\">スタートガイド</h2>\n\n<p>freee API開発がはじめての方は<a href=\"https://developer.freee.co.jp/getting-started\">freee API スタートガイド</a>を参照してください。</p>\n\n<hr />\n<h2 id=\"specification\">仕様</h2>\n\n<h3 id=\"api_endpoint\">APIエンドポイント</h3>\n\n<p>https://api.freee.co.jp/hr</p>\n\n<h3 id=\"about_authorize\">認証について</h3>\n\n<p>OAuth2.0を利用します。<a href=\"https://developer.freee.co.jp/reference/#%e8%aa%8d%e8%a8%bc\" target=\"_blank\">詳細はリファレンスの認証に関する記載を参照してください。</a></p>\n\n<h3 id=\"data_format\">データフォーマット</h3>\n\n<p>リクエスト、レスポンスともにJSON形式をサポートしていますが、詳細は、API毎の説明欄（application/jsonなど）を確認してください。</p>\n\n<h3 id=\"compatibility\">後方互換性ありの変更</h3>\n\n<p>freeeでは、APIを改善していくために以下のような変更は後方互換性ありとして通知なく変更を入れることがあります。アプリケーション実装者は以下を踏まえて開発を行ってください。</p>\n\n<ul>\n<li>新しいAPIリソース・エンドポイントの追加</li>\n<li>既存のAPIに対して必須ではない新しいリクエストパラメータの追加</li>\n<li>既存のAPIレスポンスに対する新しいプロパティの追加</li>\n<li>既存のAPIレスポンスに対するプロパティの順番の入れ変え</li>\n<li>keyとなっているidやcodeの長さの変更（長くする）</li>\n<li>エラーメッセージの変更</li>\n</ul>\n\n<h3 id=\"common_response_header\">共通レスポンスヘッダー</h3>\n\n<p>すべてのAPIのレスポンスには以下のHTTPヘッダーが含まれます。</p>\n\n<ul>\n<li>\n<p>X-Request-Id</p>\n<ul>\n<li>各リクエスト毎に発行されるID</li>\n</ul>\n</li>\n</ul>\n\n<h3 id=\"error_response\">共通エラーレスポンス</h3>\n\n<p>APIリクエストでエラーが発生した場合は、エラー原因に応じたステータスコードおよびメッセージを返します。</p>\n\n  <table border=\"1\">\n  <tbody>\n    <tr>\n      <th style=\"padding: 10px\"><strong>ステータスコード</strong></th>\n      <th style=\"padding: 10px\"><strong>原因</strong></th>\n    </tr>\n    <tr><td style=\"padding: 10px\">400</td><td style=\"padding: 10px\">リクエストパラメータが不正</td></tr>\n    <tr><td style=\"padding: 10px\">401</td><td style=\"padding: 10px\">アクセストークンが無効</td></tr>\n    <tr><td style=\"padding: 10px\">403</td><td style=\"padding: 10px\">アクセス権限がない</td></tr>\n    <tr><td style=\"padding: 10px\">404</td><td style=\"padding: 10px\">リソースが存在しない</td></tr>\n    <tr><td style=\"padding: 10px\">429</td><td style=\"padding: 10px\">リクエスト回数制限を超えた</td></tr>\n    <tr><td style=\"padding: 10px\">503</td><td style=\"padding: 10px\">システム内で予期しないエラーが発生</td></tr>\n  </tbody>\n</table>\n\n<p>メッセージボディ内の <code>messages</code> にはエラー内容を説明する文字列が入ります。</p>\n<pre><code>  {\n    &quot;status_code&quot; : 400,\n    &quot;errors&quot; : [\n      {\n        &quot;type&quot; : &quot;bad_request&quot;,\n        &quot;messages&quot; : [\n          &quot;リクエストの形式が不正です。&quot;\n        ]\n      }\n    ]\n  }  </code></pre>\n\n</br>\n\n<h3 id=\"api_rate_limit\">API使用制限</h3> \n<p>APIリクエストは1時間で5000回を上限としています。API使用ステータスはレスポンスヘッダに付与されます。</p>\n<pre><code>X-Ratelimit-Limit:5000\nX-Ratelimit-Remaining:4998\nX-Ratelimit-Reset:2018-01-01T12:00:00.000000Z\n</code></pre>\n\n<br> 各ヘッダの意味は次のとおりです。</p>\n\n <table border=\"1\">\n  <tbody>\n    <tr>\n      <th style=\"padding: 10px\"><strong>ヘッダ名</strong></th>\n      <th style=\"padding: 10px\"><strong>説明</strong></th>\n    </tr>\n    <tr><td style=\"padding: 10px\">X-RateLimit-Limit</td><td style=\"padding: 10px\">使用回数の上限</td></tr>\n    <tr><td style=\"padding: 10px\">X-RateLimit-Remaining</td><td style=\"padding: 10px\">残り使用回数</td></tr>\n    <tr><td style=\"padding: 10px\">X-RateLimit-Reset</td><td style=\"padding: 10px\">使用回数がリセットされる時刻</td></tr>\n  </tbody>\n</table>\n\n<p>上記に加え、freeeは一定期間に過度のアクセスを検知した場合、APIアクセスをコントロールする場合があります。<br> その際のhttp status codeは403となります。制限がかかってから10分程度が過ぎると再度使用することができるようになります。</p>\n\n</br>\n\n<h3 id=\"api_rate_limit\">プランごとの利用可能API</h3> \n\n<p>契約プランごとに利用可能なfreee人事労務APIはfreee人事労務のWeb版でご利用できる機能と同様です。例えば、スタンダードプラン（または旧ベーシックプラン）を契約している場合、Web版では打刻機能をご利用いただけますので、APIでもタイムレコーダー(打刻)APIが利用可能です。<a href=\"https://support.freee.co.jp/hc/ja/articles/203309710\" target=\"_blank\">freee人事労務のWeb版のプラン別機能比較はfreee人事労務のプラン・料金についてのヘルプを参照してください。</a></p>\n\n</br>\n\n<hr />",
    "termsOfService": "https://app.secure.freee.co.jp/terms-freee-api.html",
    "contact": {
      "name": "サポートデスクへのお問い合わせ",
      "url": "https://accounts.secure.freee.co.jp/contacts?from=payroll"
    },
    "license": {
      "name": "© Since 2013 freee K.K."
    },
    "version": "2022-02-01"
  },
  "servers": [
    {
      "url": "https://api.freee.co.jp/hr"
    }
  ],
  "security": [
    {
      "bearer": [

      ]
    }
  ],
  "tags": [
    {
      "name": "ログインユーザー",
      "description": "ログインユーザーの取得"
    },
    {
      "name": "従業員",
      "description": "従業員の操作"
    },
    {
      "name": "従業員の姓名・住所など",
      "description": "従業員の姓名・住所などの操作"
    },
    {
      "name": "従業員の健康保険",
      "description": "従業員の健康保険の操作"
    },
    {
      "name": "従業員の厚生年金保険",
      "description": "従業員の厚生年金保険の操作"
    },
    {
      "name": "従業員の家族情報",
      "description": "従業員の家族情報の操作"
    },
    {
      "name": "従業員の銀行口座",
      "description": "従業員の銀行口座の操作"
    },
    {
      "name": "従業員の基本給",
      "description": "従業員の基本給の操作"
    },
    {
      "name": "従業員のカスタム項目",
      "description": "従業員のカスタム項目の操作"
    },
    {
      "name": "勤怠",
      "description": "勤怠の操作"
    },
    {
      "name": "勤怠情報サマリ",
      "description": "勤怠情報の月次サマリの操作"
    },
    {
      "name": "タイムレコーダー(打刻)",
      "description": "タイムレコーダー(打刻)機能の操作"
    },
    {
      "name": "給与明細",
      "description": "給与明細の操作"
    },
    {
      "name": "賞与明細",
      "description": "賞与明細の操作"
    },
    {
      "name": "所属",
      "description": "所属の操作"
    }
  ],
  "paths": {
    "/api/v1/users/me": {
      "get": {
        "tags": [
          "ログインユーザー"
        ],
        "summary": "ログインユーザーの取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>このリクエストの認可セッションにおけるログインユーザーの情報を返します。</p>\n<p>freee人事労務では一人のログインユーザーを複数の事業所に関連付けられるため、このユーザーと関連のあるすべての事業所の情報をリストで返します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>他のAPIのパラメータとしてcompany_idが求められる場合は、このAPIで取得したcompany_idを使用します。</li>\n  <li>給与計算対象外の従業員のemployee_idとdisplay_nameは取得できません。</li>\n</ul>",
        "operationId": "get_users_me",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1UsersMeSerializer"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/companies/{company_id}/employees": {
      "get": {
        "tags": [
          "従業員"
        ],
        "summary": "全期間の従業員一覧の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所に所属する従業員をリストで返します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n  <li>退職ユーザーも含めて取得可能です。</li>\n</ul>",
        "operationId": "get_company_employees",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "取得レコードの件数 (デフォルト: 50, 最小: 1, 最大: 100)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "example": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "取得レコードのオフセット (デフォルト: 0)",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 2147483647,
              "example": 0
            }
          },
          {
            "name": "company_id",
            "in": "path",
            "description": "事業所ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "with_no_payroll_calculation",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "trueを指定すると給与計算対象外の従業員情報をレスポンスに含めます。",
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiV1CompaniesEmployeeSerializer"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees": {
      "get": {
        "tags": [
          "従業員"
        ],
        "summary": "従業員一覧の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した対象年月に事業所に所属する従業員をリストで返します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n  <li>指定した年月に退職済みユーザーは取得できません。</li>\n  <li>保険料計算方法が自動計算の場合、対応する保険料の直接指定金額は無視されnullが返されます。(例: 給与計算時の健康保険料の計算方法が自動計算の場合、給与計算時の健康保険料の直接指定金額はnullが返されます)</li>\n  <li>事業所が定額制の健康保険組合に加入している場合、保険料の直接指定金額は無視されnullが返されます。</li>\n</ul>",
        "operationId": "get_employees",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "description": "事業所ID",
            "example": 1
          },
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100
            },
            "description": "従業員情報を取得したい年",
            "example": 2021
          },
          {
            "name": "month",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12
            },
            "example": 1,
            "description": "従業員情報を取得したい月<br>\n締日支払日設定が翌月払いの従業員情報の場合は、 指定したmonth + 1の値が検索結果として返します。<br>\n翌月払いの従業員の2022/01の従業員情報を取得する場合は、year=2021,month=12を指定してください。<br>"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "取得レコードの件数 (デフォルト: 50, 最小: 1, 最大: 100)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "example": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "取得レコードのオフセット (デフォルト: 0)",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 2147483647,
              "example": 0
            }
          },
          {
            "name": "with_no_payroll_calculation",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "trueを指定すると給与計算対象外の従業員情報をレスポンスに含めます。",
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesIndexSerializer"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "従業員"
        ],
        "summary": "従業員の作成",
        "description": "<h2 id=\"\">概要</h2>\n<p>従業員を新規作成します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n</ul>",
        "operationId": "create_employee",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1EmployeesController.create_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesController.create_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/employees/{id}": {
      "get": {
        "tags": [
          "従業員"
        ],
        "summary": "従業員の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定したIDの従業員を返します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n  <li>指定した年月に退職済みユーザーは取得できません。</li>\n  <li>保険料計算方法が自動計算の場合、対応する保険料の直接指定金額は無視されnullが返されます。(例: 給与計算時の健康保険料の計算方法が自動計算の場合、給与計算時の健康保険料の直接指定金額はnullが返されます)</li>\n  <li>事業所が定額制の健康保険組合に加入している場合、保険料の直接指定金額は無視されnullが返されます。</li>\n</ul>",
        "operationId": "get_employee",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "description": "事業所ID",
            "example": 1
          },
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100
            },
            "description": "従業員情報を取得したい年",
            "example": 2021
          },
          {
            "name": "month",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12
            },
            "example": 1,
            "description": "従業員情報を取得したい月<br>\n締日支払日設定が翌月払いの従業員情報の場合は、 指定したmonth + 1の値が検索結果として返します。<br>\n翌月払いの従業員の2022/01の従業員情報を取得する場合は、year=2021,month=12を指定してください。<br>"
          },
          {
            "name": "id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesController.show_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "従業員"
        ],
        "summary": "従業員の更新",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員の情報を更新します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n</ul>",
        "operationId": "update_employee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1EmployeesController.update_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesController.update_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "従業員"
        ],
        "summary": "従業員の削除",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定したIDの従業員を削除します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n</ul>",
        "operationId": "destroy_employee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "company_id",
            "in": "query",
            "description": "事業所ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/employees/{employee_id}/profile_rule": {
      "get": {
        "tags": [
          "従業員の姓名・住所など"
        ],
        "summary": "従業員の姓名・住所などの取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員・日付の姓名などの情報を返します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>本APIは、給与計算対象外の従業員には非対応です。employee_idに給与計算対象外の従業員IDを指定した場合、本APIを利用できません。</li>\n</ul>",
        "operationId": "get_employee_profile_rule",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "事業所ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "従業員情報を取得したい年",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100
            }
          },
          {
            "name": "month",
            "in": "query",
            "description": "従業員情報を取得したい月<br>\n締日支払日設定が翌月払いの従業員情報の場合は、指定したmonth + 1の値が検索結果として返します。<br>\n翌月払いの従業員の2022/01の従業員情報を取得する場合は、year=2021,month=12を指定してください。<br>",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesProfileRulesController.show_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "従業員の姓名・住所など"
        ],
        "summary": "従業員の姓名・住所などの更新",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員の姓名・住所などを更新します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>本APIは、給与計算対象外の従業員には非対応です。employee_idに給与計算対象外の従業員IDを指定した場合、本APIを利用できません。</li>\n</ul>",
        "operationId": "update_employee_profile_rule",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1EmployeesProfileRulesController.update_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesProfileRulesController.update_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/employees/{employee_id}/health_insurance_rule": {
      "get": {
        "tags": [
          "従業員の健康保険"
        ],
        "summary": "従業員の健康保険の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員・日付の健康保険情報を返します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n  <li>保険料計算方法が自動計算の場合、対応する保険料の直接指定金額は無視されnullが返されます。(例: 給与計算時の健康保険料の計算方法が自動計算の場合、給与計算時の健康保険料の直接指定金額はnullが返されます)</li>\n</ul>",
        "operationId": "get_employee_health_insurance_rule",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "事業所ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647,
              "example": 1
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "従業員情報を取得したい年",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100,
              "example": 2021
            }
          },
          {
            "name": "month",
            "in": "query",
            "description": "従業員情報を取得したい月<br>\n締日支払日設定が翌月払いの従業員情報の場合は、 指定したmonth + 1の値が検索結果として返します。<br>\n翌月払いの従業員の2022/01の従業員情報を取得する場合は、year=2021,month=12を指定してください。<br>",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12,
              "example": 1
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647,
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesHealthInsuranceRulesController.show_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "従業員の健康保険"
        ],
        "summary": "従業員の健康保険の更新",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員の健康保険情報を更新します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n  <li>保険料計算方法が自動計算の場合、対応する保険料の直接指定金額は無視されnullが返されます。(例: 給与計算時の健康保険料の計算方法が自動計算の場合、給与計算時の健康保険料の直接指定金額はnullが返されます)</li>\n  <li>事業所が定額制の健康保険組合に加入している場合、保険料の直接指定金額は無視されnullが返されます。</li>\n  <li>事業所が定額制の健康保険組合に加入している場合、保険料の計算方法と保険料の更新はできません。</li>\n</ul>",
        "operationId": "update_employee_health_insurance_rule",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647,
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1EmployeesHealthInsuranceRulesController.update_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesHealthInsuranceRulesController.update_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/employees/{employee_id}/welfare_pension_insurance_rule": {
      "get": {
        "tags": [
          "従業員の厚生年金保険"
        ],
        "summary": "従業員の厚生年金保険の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員・日付の厚生年金保険情報を返します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n  <li>保険料計算方法が自動計算の場合、対応する保険料の直接指定金額は無視されnullが返されます。(例: 給与計算時の厚生年金保険料の計算方法が自動計算の場合、給与計算時の厚生年金保険料の直接指定金額はnullが返されます)</li>\n</ul>",
        "operationId": "get_employee_welfare_pension_insurance_rule",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "事業所ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "従業員情報を取得したい年",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100
            }
          },
          {
            "name": "month",
            "in": "query",
            "description": "従業員情報を取得したい月<br>\n締日支払日設定が翌月払いの従業員情報の場合は、 指定したmonth + 1の値が検索結果として返します。<br>\n翌月払いの従業員の2022/01の従業員情報を取得する場合は、year=2021,month=12を指定してください。<br>",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesWelfarePensionInsuranceRulesController.show_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "従業員の厚生年金保険"
        ],
        "summary": "従業員の厚生年金保険の更新",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員の厚生年金保険情報を更新します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n  <li>保険料計算方法が自動計算の場合、対応する保険料の直接指定金額は無視されnullが返されます。(例: 給与計算時の厚生年金保険料の計算方法が自動計算の場合、給与計算時の厚生年金保険料の直接指定金額はnullが返されます)</li>\n</ul>",
        "operationId": "update_employee_welfare_pension_insurance_rule",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1EmployeesWelfarePensionInsuranceRulesController.update_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesWelfarePensionInsuranceRulesController.update_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/employees/{employee_id}/dependent_rules": {
      "get": {
        "tags": [
          "従業員の家族情報"
        ],
        "summary": "従業員の家族情報の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員・日付の家族情報を返します。</p>",
        "operationId": "get_employee_dependent_rules",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "事業所ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "従業員情報を取得したい年",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100
            }
          },
          {
            "name": "month",
            "in": "query",
            "description": "従業員情報を取得したい月<br>\n締日支払日設定が翌月払いの従業員情報の場合は、 指定したmonth + 1の値が検索結果として返します。<br>\n翌月払いの従業員の2022/01の従業員情報を取得する場合は、year=2021,month=12を指定してください。<br>",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesDependentRulesController.index_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{employee_id}/dependent_rules/bulk_update": {
      "put": {
        "tags": [
          "従業員の家族情報"
        ],
        "summary": "従業員の家族情報の更新",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員の家族情報を更新します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>idがない場合は新規作成、destroyがtrueの場合は削除になります。</li>\n  <li>residence_type=live_in: 同居の場合、以下のパラメータに指定した値はWebに反映されません。</li>\n  <ul>\n    <li>zipcode1</li>\n    <li>zipcode2</li>\n    <li>prefecture_code</li>\n    <li>address</li>\n    <li>address_kana</li>\n    <li>annual_remittance_amount</li>\n  </ul>\n  <li>residence_type=non_resident: 別居(国外)の場合、以下のパラメータに指定した値はWebに反映されません。</li>\n  <ul>\n    <li>prefecture_code</li>\n  </ul>\n</ul>",
        "operationId": "bulk_update_employee_dependent_rules",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1EmployeesDependentRulesController.bulk_update_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesDependentRulesController.bulk_update_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/employees/{employee_id}/bank_account_rule": {
      "get": {
        "tags": [
          "従業員の銀行口座"
        ],
        "summary": "従業員の銀行口座の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員・日付の銀行口座情報を返します。</p>",
        "operationId": "get_employee_bank_account_rule",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "事業所ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "従業員情報を取得したい年",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100
            }
          },
          {
            "name": "month",
            "in": "query",
            "description": "従業員情報を取得したい月<br>\n締日支払日設定が翌月払いの従業員情報の場合は、 指定したmonth + 1の値が検索結果として返します。<br>\n翌月払いの従業員の2022/01の従業員情報を取得する場合は、year=2021,month=12を指定してください。<br>",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesBankAccountRulesController.show_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "従業員の銀行口座"
        ],
        "summary": "従業員の銀行口座の更新",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員の銀行口座1の情報を更新します。</p>",
        "operationId": "update_employee_bank_account_rule",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1EmployeesBankAccountRulesController.update_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesBankAccountRulesController.update_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/employees/{employee_id}/basic_pay_rule": {
      "get": {
        "tags": [
          "従業員の基本給"
        ],
        "summary": "従業員の基本給の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員・日付の基本給情報を返します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n</ul>",
        "operationId": "get_employee_basic_pay_rule",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "事業所ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647,
              "example": 1
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "従業員情報を取得したい年",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100,
              "example": 2021
            }
          },
          {
            "name": "month",
            "in": "query",
            "description": "従業員情報を取得したい月<br>\n締日支払日設定が翌月払いの従業員情報の場合は、 指定したmonth + 1の値が検索結果として返します。<br>\n翌月払いの従業員の2022/01の従業員情報を取得する場合は、year=2021,month=12を指定してください。<br>",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12,
              "example": 1
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647,
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesBasicPayRulesController.show_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "従業員の基本給"
        ],
        "summary": "従業員の基本給の更新",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員の基本給情報を更新します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n</ul>",
        "operationId": "update_employee_basic_pay_rule",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647,
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1EmployeesBasicPayRulesController.update_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesBasicPayRulesController.update_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/employees/{employee_id}/profile_custom_fields": {
      "get": {
        "tags": [
          "従業員のカスタム項目"
        ],
        "summary": "従業員のカスタム項目の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員・日付のカスタム項目情報を返します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n  <li>指定年月に在籍していない従業員および給与計算対象外の従業員ではデータが存在しないため、空の配列が返ります。</li>\n</ul>",
        "operationId": "get_employee_profile_custom_fields_rule",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "事業所ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647,
              "example": 1
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "従業員情報を取得したい年",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100,
              "example": 2021
            }
          },
          {
            "name": "month",
            "in": "query",
            "description": "従業員情報を取得したい月<br>\n締日支払日設定が翌月払いの従業員情報の場合は、 指定したmonth + 1の値が検索結果として返します。<br>\n翌月払いの従業員の2022/01の従業員情報を取得する場合は、year=2021,month=12を指定してください。<br>",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12,
              "example": 1
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647,
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesProfileCustomFieldRulesController.index_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{employee_id}/work_records/{date}": {
      "get": {
        "tags": [
          "勤怠"
        ],
        "summary": "勤怠の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員・日付の勤怠情報を返します。</p>\n<a href=\"https://developer.freee.co.jp/news/6774\" target=\"_blank\">API仕様の変更について</a>",
        "operationId": "get_employee_work_record",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "事業所ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          },
          {
            "name": "date",
            "in": "path",
            "description": "従業員情報を取得したい年月日(YYYY-MM-DD)(例:2018-08-01)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesWorkRecordSerializer"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "勤怠"
        ],
        "summary": "勤怠の更新",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員の勤怠情報を更新します。</p>\n<a href=\"https://developer.freee.co.jp/news/6774\" target=\"_blank\">API仕様の変更について</a>\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>振替出勤・振替休日・代休出勤・代休の登録はAPIでは行うことができません。</li>\n</ul>\n\n<h2 id=\"_2\">examples</h2>\n<ul>\n  <li>出勤日について出退勤時刻および休憩時間を更新する場合は以下のようなパラメータをリクエストします。\n    <pre>\n      <code>\n      {\n        \"company_id\": 1,\n        \"break_records\": [\n          {\n            \"clock_in_at\": \"2017-05-25 12:00:00\",\n            \"clock_out_at\": \"2017-05-25 13:00:00\"\n          }\n        ],\n        \"clock_in_at\": \"2017-05-25 09:10:00\",\n        \"clock_out_at\": \"2017-05-25 18:20:00\"\n      }\n      </code>\n    </pre>\n  </li>\n\n  <li>勤務パターンや既定の所定労働時間を変更する場合は use_default_work_pattern に false を指定するとともに、各設定を上書きするパラメータをリクエストします。\n    <pre>\n      <code>\n      {\n        \"company_id\": 1,\n        \"break_records\": [\n          {\n            \"clock_in_at\": \"2017-05-25 12:00:00\",\n            \"clock_out_at\": \"2017-05-25 13:00:00\"\n          }\n        ],\n        \"clock_in_at\": \"2017-05-25 09:10:00\",\n        \"clock_out_at\": \"2017-05-25 18:20:00\",\n        \"day_pattern\": \"normal_day\",\n        \"normal_work_clock_in_at\": \"2017-05-25 11:00:00\",\n        \"normal_work_clock_out_at\": \"2017-12-20 20:00:00\",\n        \"normal_work_mins\": 0,\n        \"use_default_work_pattern\": false\n      }\n      </code>\n    </pre>\n  </li>\n\n  <li>有給取得時の連携について半休の場合は通常勤務のように勤務開始・終了時間を指定しつつ、加えて以下の要素を指定することで API での勤怠をつけることができます。\n    <ul>\n      <li>half_paid_holiday_mins (半休により計上される所定労働時間を分で指定します)</li>\n    </ul>\n    <pre>\n      <code>\n      {\n        \"company_id\": 1,\n        \"break_records\": [\n          {\n            \"clock_in_at\": \"2023-12-22 12:00:00\",\n            \"clock_out_at\": \"2023-12-22 13:00:00\"\n          }\n        ],\n        \"clock_in_at\": \"2023-12-22 09:10:00\",\n        \"clock_out_at\": \"2023-12-22 14:20:00\",\n        \"half_paid_holiday_mins\": 240\n      }\n      </code>\n    </pre>\n  </li>\n\n  <li>特別休暇取得時の連携について全休の場合は以下の要素を指定することで API での勤怠をつけることができます。\n    <ul>\n      <li>special_holiday (全休の場合1.0を指定します)</li>\n      <li>special_holiday_setting_id (特別休暇設定IDを指定します)</li>\n    </ul>\n    <pre>\n      <code>\n      {\n        \"company_id\": 1,\n        \"special_holiday\": 1.0\n        \"special_holiday_setting_id\": 1\n      }\n      </code>\n    </pre>\n  </li>\n\n  <li>特別休暇取得時の連携について時間休の場合は通常勤務のように勤務開始・終了時間を指定しつつ、加えて以下の要素を指定することで API での勤怠をつけることができます。\n    <ul>\n      <li>special_holiday_setting_id (特別休暇設定IDを指定します)</li>\n      <li>hourly_special_holiday_mins (時間休により計上される所定労働時間を分で指定します)</li>\n    </ul>\n    <pre>\n      <code>\n      {\n        \"company_id\": 1,\n        \"break_records\": [\n          {\n            \"clock_in_at\": \"2023-12-22 12:00:00\",\n            \"clock_out_at\": \"2023-12-22 13:00:00\"\n          }\n        ],\n        \"clock_in_at\": \"2023-12-22 09:00:00\",\n        \"clock_out_at\": \"2023-12-22 16:00:00\",\n        \"special_holiday_setting_id\": 1,\n        \"hourly_special_holiday_mins\": 120\n      }\n      </code>\n    </pre>\n  </li>\n\n  <li>欠勤を付ける場合は company_idとis_absence 以外のパラメータは必要ありません。\n    <pre>\n      <code>\n      {\n        \"company_id\": 1,\n        \"is_absence\": true\n      }\n      </code>\n    </pre>\n  </li>\n\n</ul>",
        "operationId": "update_employee_work_record",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          },
          {
            "name": "date",
            "in": "path",
            "description": "更新対象年月日(YYYY-MM-DD)(例:2018-08-01)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1EmployeesWorkRecordsController.update_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesWorkRecordSerializer"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "勤怠"
        ],
        "summary": "勤怠の削除",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員の勤怠情報を削除します。</p>",
        "operationId": "destroy_employee_work_record",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          },
          {
            "name": "date",
            "in": "path",
            "description": "削除対象年月日(YYYY-MM-DD)(例:2018-08-01)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            }
          },
          {
            "name": "company_id",
            "in": "query",
            "description": "事業所ID",
            "required": true,
            "schema": {
              "minimum": 1,
              "maximum": 2147483647,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/employees/{employee_id}/work_record_summaries/{year}/{month}": {
      "get": {
        "tags": [
          "勤怠情報サマリ"
        ],
        "summary": "勤怠情報月次サマリの取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員、月の勤怠情報のサマリを返します。</p>\n<a href=\"https://developer.freee.co.jp/news/6774\" target=\"_blank\">API仕様の変更について</a>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>work_recordsオプションにtrueを指定することで、明細となる日次の勤怠情報もあわせて返却します。</li>\n</ul>",
        "operationId": "get_employee_work_record_summary",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "事業所ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          },
          {
            "name": "work_records",
            "in": "query",
            "description": "サマリ情報に日次の勤怠情報を含める(true/false)(デフォルト: false)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647,
              "example": 1
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "従業員情報を取得したい年",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100,
              "example": 2021
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "従業員情報を取得したい月",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12,
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesWorkRecordSummarySerializer"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "勤怠情報サマリ"
        ],
        "summary": "勤怠情報月次サマリの更新",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員、月の勤怠情報のサマリを更新します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n  <li>日毎の勤怠の更新はこのAPIではできません。日毎の勤怠の操作には勤怠APIを使用して下さい。</li>\n  <li>勤怠データが存在しない場合は新規作成、既に存在する場合は上書き更新されます。</li>\n  <li>値が設定された項目のみ更新されます。値が設定されなかった場合は自動的に0が設定されます。</li>\n</ul>",
        "operationId": "update_employee_work_record_summary",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647,
              "example": 1
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "更新対象年",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100,
              "example": 2021
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "更新対象月",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12,
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1EmployeesWorkRecordSummaryController.update_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesWorkRecordSummarySerializer"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{employee_id}/time_clocks": {
      "get": {
        "tags": [
          "タイムレコーダー(打刻)"
        ],
        "summary": "打刻一覧の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員・期間の打刻情報を返します。</p>",
        "operationId": "get_employee_time_clocks",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "事業所ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "取得する打刻期間の開始日(YYYY-MM-DD)(例:2018-08-01)(デフォルト: 当月の打刻開始日)",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "取得する打刻期間の終了日(YYYY-MM-DD)(例:2018-08-31)(デフォルト: 当日)",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "取得レコードの件数 (デフォルト: 50, 最小: 1, 最大: 100)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "取得レコードのオフセット (デフォルト: 0)",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 2147483647
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesTimeClocksController.index_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "タイムレコーダー(打刻)"
        ],
        "summary": "打刻の登録",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員の打刻情報を登録します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>休憩開始の連続や退勤のみなど、整合性の取れていない打刻は登録できません。\n打刻可能種別の取得APIを呼ぶことで、その従業員がその時点で登録可能な打刻種別が取得できます。</li>\n\n  <li>出勤の打刻は</li>\n  <ul>\n    <li>前日の出勤時刻から24時間以内の場合、前日の退勤打刻が必須です。</li>\n    <li> 前日の出勤時刻から24時間経過している場合は、前日の退勤打刻がなくとも出勤打刻を登録することができます。</li>\n  </ul>\n\n  <li>退勤の打刻は</li>\n  <ul>\n    <li><a href=\\\"https://support.freee.co.jp/hc/ja/articles/900004490226-%E5%8B%A4%E6%80%A0%E5%9F%BA%E6%9C%AC%E8%A8%AD%E5%AE%9A%E3%82%92%E8%A1%8C%E3%81%86#h_01EYPYTR9HZ7YB8V5F18VMD1BT\"target=\\\"_blank\\\">『退勤を自動打刻する』</a>の設定を使用している場合は、出勤打刻から24時間経過しても退勤打刻がない場合に、退勤打刻が自動で登録されます。</li>\n    <li>すでに登録されている退勤打刻よりも後の時刻であれば上書き登録することができます。</li>\n  </ul>\n\n  <li>打刻が日をまたぐ場合は、base_date(打刻日)に前日の日付を指定してください。</li>\n\n  <li>datetime(打刻日時)を指定できるのは管理者か事務担当者の権限を持ったユーザーのみです。</li>\n</ul>",
        "operationId": "create_employee_time_clock",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1EmployeesTimeClocksController.create_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesTimeClocksController.create_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/employees/{employee_id}/time_clocks/{id}": {
      "get": {
        "tags": [
          "タイムレコーダー(打刻)"
        ],
        "summary": "打刻の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員・指定した打刻の詳細情報を返します。</p>",
        "operationId": "get_employee_time_clock",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "事業所ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "打刻ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesTimeClocksController.show_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{employee_id}/time_clocks/available_types": {
      "get": {
        "tags": [
          "タイムレコーダー(打刻)"
        ],
        "summary": "打刻可能種別の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員・日付の打刻可能種別と打刻基準日を返します。</p>\n<p>例: すでに出勤した状態だと、休憩開始、退勤が配列で返ります。</p>",
        "operationId": "get_employee_time_clocks_available_types",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "事業所ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "従業員情報を取得したい年月日(YYYY-MM-DD)(例:2018-08-01)(デフォルト：当日)",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeesTimeClocksController.available_types_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{employee_id}/special_holidays": {
      "get": {
        "tags": [
          "従業員の特別休暇"
        ],
        "summary": "従業員の特別休暇一覧の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員に付与された特別休暇情報をリストで返します。</p>",
        "operationId": "get_employees_special_holidays",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "description": "事業所ID",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647,
              "example": 1
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "対象日",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "example": "2023-04-01"
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "対象開始日",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "example": "2023-04-01"
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "対象終了日",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "example": "2023-04-01"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "employee_special_holidays": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "特別休暇付与ID",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 2147483647,
                            "example": 1
                          },
                          "company_id": {
                            "type": "integer",
                            "description": "事業所ID",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 2147483647,
                            "example": 1
                          },
                          "employee_id": {
                            "type": "integer",
                            "description": "従業員ID",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 2147483647,
                            "example": 1
                          },
                          "special_holiday_setting_id": {
                            "type": "integer",
                            "description": "特別休暇設定ID",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 2147483647,
                            "example": 1
                          },
                          "name": {
                            "type": "string",
                            "description": "特別休暇名称",
                            "example": "育休"
                          },
                          "type_name": {
                            "type": "string",
                            "description": "特別休暇・休業休職種別名",
                            "example": "育児休業日"
                          },
                          "paid_type": {
                            "type": "string",
                            "description": "有給・無給区分（paid: 有給、unpaid: 無休）",
                            "enum": [
                              "paid",
                              "unpaid"
                            ],
                            "example": "paid"
                          },
                          "attendance_rate_calc_type": {
                            "type": "string",
                            "description": "出勤率計算方法（in_workdays: 出勤日数に含める、not_in_workdays: 出勤日数に含めない、not_in_total_workdays: 全労働日に含めない）",
                            "enum": [
                              "in_workdays",
                              "not_in_workdays",
                              "not_in_total_workdays"
                            ],
                            "example": "in_workdays"
                          },
                          "usage_day": {
                            "type": "string",
                            "description": "最小消化単位（full: 全休、half: 半休、hour: 時間休）",
                            "enum": [
                              "full",
                              "half",
                              "hour"
                            ],
                            "example": "half"
                          },
                          "valid_date_from": {
                            "type": "string",
                            "description": "有効期間開始日(YYYY-MM-DD)(例:2023-01-01)",
                            "format": "date"
                          },
                          "valid_date_to": {
                            "type": "string",
                            "description": "有効期間終了日(YYYY-MM-DD)(例:2023-01-31)",
                            "format": "date"
                          },
                          "days": {
                            "type": "integer",
                            "description": "付与日数",
                            "format": "int32",
                            "minimum": 0,
                            "maximum": 2147483647,
                            "example": 2
                          },
                          "used": {
                            "type": "number",
                            "description": "使用数",
                            "format": "float",
                            "minimum": 0,
                            "maximum": 999999999.9999,
                            "example": 0.5
                          },
                          "num_days_and_hours_used": {
                            "type": "object",
                            "description": "使用日数・時間数",
                            "properties": {
                              "days": {
                                "type": "number",
                                "description": "日数",
                                "format": "float",
                                "example": 0.5
                              },
                              "hours": {
                                "type": "integer",
                                "description": "時間数",
                                "format": "int32",
                                "example": 0
                              }
                            }
                          },
                          "left": {
                            "type": "number",
                            "description": "残数",
                            "format": "float",
                            "minimum": 0,
                            "maximum": 999999999.9999,
                            "example": 1.5
                          },
                          "num_days_and_hours_left": {
                            "type": "object",
                            "description": "残日数・時間数",
                            "properties": {
                              "days": {
                                "type": "number",
                                "description": "日数",
                                "format": "float",
                                "example": 1.5
                              },
                              "hours": {
                                "type": "integer",
                                "description": "時間数",
                                "format": "int32",
                                "example": 0
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/salaries/employee_payroll_statements": {
      "get": {
        "tags": [
          "給与明細"
        ],
        "summary": "給与明細一覧の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所に所属する従業員の給与明細をリストで返します。</p>\n<p>指定した年月に支払いのある給与明細が返されます。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>複数時給を設定している場合はpaymentsに内訳が返されます。</li>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n  <li>給与計算中の場合は、各パラメータはnullおよび空配列が返ります。</li>\n</ul>",
        "operationId": "get_salaries_employee_payroll_statements",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "description": "事業所ID"
          },
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100
            },
            "description": "従業員情報を取得したい年"
          },
          {
            "name": "month",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12
            },
            "description": "従業員情報を取得したい月"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "取得レコードの件数 (デフォルト: 50, 最小: 1, 最大: 100)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "取得レコードのオフセット (デフォルト: 0)",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 2147483647
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1SalariesEmployeePayrollStatementsController.index_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/salaries/employee_payroll_statements/{employee_id}": {
      "get": {
        "tags": [
          "給与明細"
        ],
        "summary": "給与明細の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員ID、年月の給与明細を返します。</p>\n<p>指定した年月に支払いのある給与明細が返されます。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>複数時給を設定している場合はpaymentsに内訳が返されます。</li>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n  <li>給与計算中の場合は、各パラメータはnullおよび空配列が返ります。</li>\n</ul>\n\n<h2 id=\"_2\">examples</h2>\n<pre>\n  <code>\n  {\n  \"employee_payroll_statement\": {\n    \"id\": 1,\n    \"company_id\": 1,\n    \"employee_id\": 1,\n    \"employee_name\": \"給与 太郎\",\n    \"employee_display_name\": \"給与 太郎\",\n    \"employee_num\": \"001\",\n    \"pay_date\": \"2018-02-25\",\n    \"start_date\": \"2018-02-01\",\n    \"closing_date\": \"2018-02-28\",\n    \"variable_pay_start_date\": \"2018-01-01\",\n    \"variable_pay_closing_date\": \"2018-01-31\",\n    \"fixed\": true,\n    \"calc_status\": \"calculated\",\n    \"calculated_at\": \"2018-09-27T05:06:45.315Z\",\n    \"pay_calc_type\": \"monthly\",\n    \"board_member_remuneration_amount\": \"400000.0\",\n    \"basic_pay_amount\": \"300000.0\",\n    \"work_days\": \"21.0\",\n    \"normal_work_time\": \"8.0\",\n    \"normal_work_days\": \"21.0\",\n    \"work_mins_by_paid_holiday\": \"480.0\",\n    \"num_paid_holidays\": \"1.0\",\n    \"is_board_member\": true,\n    \"total_attendance_deduction_amount\": \"0.0\",\n    \"total_allowance_amount\": \"0.0\",\n    \"total_deduction_amount\": \"23830.0\",\n    \"net_payment_amount\": \"277170.0\",\n    \"gross_payment_amount\": \"301000.0\",\n    \"total_worked_days_count\": \"21.0\",\n    \"total_taxable_payment_amount\": \"301000.0\",\n    \"total_expense_amount\": \"0.0\",\n    \"total_transfer_amount\": \"277170.0\",\n    \"total_annual_payment_amount\": \"600000.0\",\n    \"payments\": [{ \"name\": \"基本給\", \"amount\": \"300000.0\"},{ \"name\": \"残業代\", \"amount\": \"1000.0\"}],\n    \"deductions\": [{\"name\": \"所得税\", \"amount\": \"7000.0\"}, {\"name\": \"健康保険料\", \"amount\": \"16830.0\"}],\n    \"attendances\": [{\"name\": \"遅刻・早退\", \"time\": \"0.0\", \"amount\": \"0.0\"}],\n    \"overtime_pays\": [{ \"name\": \"時間外労働\", \"time\": \"60.0\", \"amount\": \"1000.0\", \"code\": null }, { \"name\": \"カスタム固定残業代\", \"time\": null, \"amount\": \"10000.0\", \"code\": \"a001\" }],\n    \"remark\": \"備考\"\n    }\n  }\n  </code>\n</pre>",
        "operationId": "get_salaries_employee_payroll_statement",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "description": "事業所ID"
          },
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100
            },
            "description": "従業員情報を取得したい年"
          },
          {
            "name": "month",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12
            },
            "description": "従業員情報を取得したい月"
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1SalariesEmployeePayrollStatementsController.show_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bonuses/employee_payroll_statements": {
      "get": {
        "tags": [
          "賞与明細"
        ],
        "summary": "賞与明細一覧の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所に所属する従業員の賞与明細をリストで返します。</p>\n<p>指定した年月に支払いのある賞与明細が返されます。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n</ul>",
        "operationId": "get_bonuses_employee_payroll_statements",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "description": "事業所ID"
          },
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100
            },
            "description": "従業員情報を取得したい年"
          },
          {
            "name": "month",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12
            },
            "description": "従業員情報を取得したい月"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "取得レコードの件数 (デフォルト: 50, 最小: 1, 最大: 100)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "example": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "取得レコードのオフセット (デフォルト: 0)",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 2147483647,
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1BonusesEmployeePayrollStatementsIndexSerializer"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bonuses/employee_payroll_statements/{employee_id}": {
      "get": {
        "tags": [
          "賞与明細"
        ],
        "summary": "賞与明細の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員ID、年月の賞与明細を返します。</p>\n<p>指定した年月に支払いのある賞与明細が返されます。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n</ul>\n\n<h2 id=\"_2\">examples</h2>\n<pre>\n  <code>\n    {\n    \"employee_payroll_statement\": {\n      \"id\": 1,\n      \"company_id\": 1,\n      \"employee_id\": 1,\n      \"employee_name\": \"給与 太郎\",\n      \"employee_display_name\": \"給与 太郎\",\n      \"employee_num\": \"001\",\n      \"closing_date\": \"2018-03-31\",\n      \"pay_date\": \"2018-03-31\",\n      \"fixed\": true,\n      \"calc_status\": \"calculated\",\n      \"calculated_at\": \"2018-09-27T05:06:45.315Z\",\n      \"bonus_amount\": \"300000.0\",\n      \"total_allowance_amount\": \"0.0\",\n      \"total_deduction_amount\": \"23830.0\",\n      \"net_payment_amount\": \"268000.0\",\n      \"gross_payment_amount\": \"330000.0\",\n      \"total_taxable_payment_amount\": \"330000.0\",\n      \"allowances\": [{\"name\": \"地域手当\", \"amount\": \"30000.0\"}],\n      \"deductions\": [{\"name\": \"所得税\", \"amount\": \"46000.0\"}, {\"name\": \"健康保険料\", \"amount\": \"16000.0\"}],\n      \"remark\": \"備考\"\n    }\n    }\n  </code>\n</pre>",
        "operationId": "get_bonuses_employee_payroll_statement",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "description": "事業所ID"
          },
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100
            },
            "description": "従業員情報を取得したい年"
          },
          {
            "name": "month",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12
            },
            "description": "従業員情報を取得したい月"
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1BonusesEmployeePayrollStatementsController.show_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employee_group_memberships": {
      "get": {
        "tags": [
          "所属"
        ],
        "summary": "所属一覧の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の指定日付時点における所属情報をリストで返します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n</ul>",
        "operationId": "get_employee_group_memberships",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1,
            "description": "事業所ID"
          },
          {
            "name": "base_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "description": "指定日。指定日付時点における所属情報をリストで返します。(YYYY-MM-DD)(例:2018-07-31)",
            "example": "2018-07-31"
          },
          {
            "name": "with_no_payroll_calculation",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "trueを指定すると給与計算対象外の従業員情報をレスポンスに含めます。",
            "example": true
          },
          {
            "name": "employee_ids",
            "in": "query",
            "schema": {
              "type": "string",
              "maxLength": 8192
            },
            "description": "取得対象とする従業員IDを指定することができます。指定しない場合は全従業員が対象となります。\n(例:1,2,3,4,5)\n"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "取得レコードの件数 (デフォルト: 50, 最小: 1, 最大: 100)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "example": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "取得レコードのオフセット (デフォルト: 0)",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 2147483647,
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeeGroupMembershipsIndexSerializer"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/groups": {
      "get": {
        "tags": [
          "部門"
        ],
        "summary": "部門一覧の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の指定日付時点における部門情報をリストで返します。</p>\n<p>部門APIの使い方については、<a href=\"https://developer.freee.co.jp/tips/groups-api-hierarchy\" target=\"_blank\">部門APIを利用した組織図の取得について</a> をご参照ください。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n</ul>",
        "operationId": "get_groups",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "description": "事業所ID",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1GroupsIndexResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "部門"
        ],
        "summary": "部門の作成",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の部門を新規作成します。</p>\n<p>部門APIの使い方については、<a href=\"https://developer.freee.co.jp/tips/groups-api-hierarchy\" target=\"_blank\">部門APIを利用した組織図の取得について</a> をご参照ください。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n</ul>",
        "operationId": "create_group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1GroupCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1GroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{id}": {
      "put": {
        "tags": [
          "部門"
        ],
        "summary": "部門の更新",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の部門の情報を更新します。</p>\n<p>部門APIの使い方については、<a href=\"https://developer.freee.co.jp/tips/groups-api-hierarchy\" target=\"_blank\">部門APIを利用した組織図の取得について</a> をご参照ください。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n</ul>",
        "operationId": "update_group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "部門ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1GroupUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1GroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "部門"
        ],
        "summary": "部門の削除",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の部門の情報を削除します。</p>\n<p>部門APIの使い方については、<a href=\"https://developer.freee.co.jp/tips/groups-api-hierarchy\" target=\"_blank\">部門APIを利用した組織図の取得について</a> をご参照ください。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n</ul>",
        "operationId": "destroy_group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "部門ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "company_id",
            "in": "query",
            "description": "事業所ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/positions": {
      "get": {
        "tags": [
          "役職"
        ],
        "summary": "役職一覧の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の指定日付時点における役職情報をリストで返します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n</ul>",
        "operationId": "get_positions",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "description": "事業所ID",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1PositionIndexResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "役職"
        ],
        "summary": "役職の作成",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の役職を新規作成します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n</ul>",
        "operationId": "create_position",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1PositionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1PositionResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/positions/{id}": {
      "put": {
        "tags": [
          "役職"
        ],
        "summary": "役職の更新",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の役職の情報を更新します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n</ul>",
        "operationId": "update_position",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "役職ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1PositionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1PositionResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "役職"
        ],
        "summary": "役職の削除",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の役職の情報を削除します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>管理者権限を持ったユーザーのみ実行可能です。</li>\n  <li>従業員に役職が適用されている場合、従業員の役職情報も削除されます。</li>\n</ul>",
        "operationId": "destroy_position",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "役職ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "company_id",
            "in": "query",
            "description": "事業所ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/approval_requests/monthly_attendances": {
      "get": {
        "tags": [
          "月次勤怠締め申請"
        ],
        "summary": "月次勤怠締め申請一覧の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の指定日付時点における月次勤怠締め申請情報をリストで返します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n</ul>",
        "operationId": "get_approval_requests_monthly_attendances",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "description": "事業所ID",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "status",
            "in": "query",
            "description": "申請ステータス\n- `draft` - 下書き\n- `in_progress` - 申請中\n- `approved` - 承認済\n- `feedback` - 差戻し",
            "schema": {
              "type": "string",
              "enum": [
                "draft",
                "in_progress",
                "approved",
                "feedback"
              ],
              "example": "in_progress"
            }
          },
          {
            "name": "application_number",
            "in": "query",
            "description": "申請No",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "start_issue_date",
            "in": "query",
            "description": "申請開始日",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "example": "2022-02-01"
          },
          {
            "name": "end_issue_date",
            "in": "query",
            "description": "申請終了日",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "example": "2022-02-01"
          },
          {
            "name": "approver_id",
            "in": "query",
            "description": "現在承認ステップの承認者のユーザーID\n\napprover_idに値を指定する場合、指定なしの申請経路を利用した申請は返却されません\n",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "applicant_id",
            "in": "query",
            "description": "申請者のユーザーID",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "start_target_date",
            "in": "query",
            "description": "対象開始日",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "example": "2022-02-01"
          },
          {
            "name": "end_target_date",
            "in": "query",
            "description": "対象終了日",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "example": "2022-02-01"
          },
          {
            "name": "passed_auto_check",
            "in": "query",
            "description": "自動チェック結果\n- trueを指定した場合、自動チェック結果がtrueの申請のみ返却します。\n- falseを指定した場合、自動チェック結果がfalseの申請のみ返却します。\n- キーごと指定しない場合、すべての申請を返却します。",
            "schema": {
              "type": "boolean"
            },
            "example": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "取得レコードの件数 (デフォルト: 50, 最小: 1, 最大: 100)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "example": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "取得レコードのオフセット (デフォルト: 0)",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 2147483647,
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1MonthlyAttendanceIndexResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "月次勤怠締め申請"
        ],
        "summary": "月次勤怠締め申請の作成",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の月次勤怠締め申請を新規作成します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n  <li>申請者と承認者が同一ユーザーの場合、feedback(差戻し)をするとレスポンスは以下のようになります。</li>\n  <ul>\n    <li>status: draft</li>\n    <li>approval_flow_logs.action: cancel</li>\n  </ul>\n</ul>",
        "operationId": "create_approval_requests_monthly_attendance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1MonthlyAttendanceCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1MonthlyAttendanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/approval_requests/monthly_attendances/{id}": {
      "get": {
        "tags": [
          "月次勤怠締め申請"
        ],
        "summary": "月次勤怠締め申請の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の月次勤怠締め申請情報を取得します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n  <li>申請者と承認者が同一ユーザーの場合、feedback(差戻し)をするとレスポンスは以下のようになります。</li>\n  <ul>\n    <li>status: draft</li>\n    <li>approval_flow_logs.action: cancel</li>\n  </ul>\n</ul>",
        "operationId": "get_approval_requests_monthly_attendance",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "description": "事業所ID",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "id",
            "in": "path",
            "description": "月次勤怠締め申請ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1MonthlyAttendanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "月次勤怠締め申請"
        ],
        "summary": "月次勤怠締め申請の更新",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の月次勤怠締め申請情報を更新します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n  <li>申請者と承認者が同一ユーザーの場合、feedback(差戻し)をするとレスポンスは以下のようになります。</li>\n  <ul>\n    <li>status: draft</li>\n    <li>approval_flow_logs.action: cancel</li>\n  </ul>\n</ul>",
        "operationId": "update_approval_requests_monthly_attendance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "月次勤怠締め申請ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1MonthlyAttendanceUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1MonthlyAttendanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "月次勤怠締め申請"
        ],
        "summary": "月次勤怠締め申請の削除",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の月次勤怠締め申請情報を削除します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n</ul>",
        "operationId": "destroy_approval_requests_monthly_attendance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "月次勤怠締め申請ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "company_id",
            "in": "query",
            "description": "事業所ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/approval_requests/monthly_attendances/{id}/actions": {
      "post": {
        "tags": [
          "月次勤怠締め申請"
        ],
        "summary": "月次勤怠締め申請の承認操作",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の月次勤怠締め申請情報を承認操作します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n  <li>申請者と承認者が同一ユーザーの場合、feedback(差戻し)をするとレスポンスは以下のようになります。</li>\n  <ul>\n    <li>status: draft</li>\n    <li>approval_flow_logs.action: cancel</li>\n  </ul>\n</ul>",
        "operationId": "action_approval_requests_monthly_attendance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "月次勤怠締め申請ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1ApprovalActionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1MonthlyAttendanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/approval_requests/work_times": {
      "get": {
        "tags": [
          "勤務時間修正申請"
        ],
        "summary": "勤務時間修正申請一覧の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の指定日付時点における勤務時間修正申請情報をリストで返します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n</ul>",
        "operationId": "get_approval_requests_work_times",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "description": "事業所ID",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "status",
            "in": "query",
            "description": "申請ステータス\n- `draft` - 下書き\n- `in_progress` - 申請中\n- `approved` - 承認済\n- `feedback` - 差戻し",
            "schema": {
              "type": "string",
              "enum": [
                "draft",
                "in_progress",
                "approved",
                "feedback"
              ],
              "example": "in_progress"
            }
          },
          {
            "name": "application_number",
            "in": "query",
            "description": "申請No",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "start_issue_date",
            "in": "query",
            "description": "申請開始日",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "example": "2023-04-01"
          },
          {
            "name": "end_issue_date",
            "in": "query",
            "description": "申請終了日",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "example": "2023-04-01"
          },
          {
            "name": "approver_id",
            "in": "query",
            "description": "現在承認ステップの承認者のユーザーID\napprover_idに値を指定する場合、指定なしの申請経路を利用した申請は返却されません\n",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "applicant_id",
            "in": "query",
            "description": "申請者のユーザーID",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "start_target_date",
            "in": "query",
            "description": "対象開始日",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "example": "2023-04-01"
          },
          {
            "name": "end_target_date",
            "in": "query",
            "description": "対象終了日",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "example": "2023-04-01"
          },
          {
            "name": "passed_auto_check",
            "in": "query",
            "description": "自動チェック結果\n- trueを指定した場合、自動チェック結果がtrueの申請のみ返却します。\n- falseを指定した場合、自動チェック結果がfalseの申請のみ返却します。\n- キーごと指定しない場合、すべての申請を返却します。",
            "schema": {
              "type": "boolean"
            },
            "example": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "取得レコードの件数 (デフォルト: 50, 最小: 1, 最大: 100)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "example": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "取得レコードのオフセット (デフォルト: 0)",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 2147483647,
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "work_times",
                    "total_count"
                  ],
                  "properties": {
                    "work_times": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ApiV1WorkTimeIndexResponseParams"
                      }
                    },
                    "total_count": {
                      "type": "integer",
                      "description": "合計件数",
                      "format": "int32",
                      "minimum": 0,
                      "maximum": 2147483647,
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "勤務時間修正申請"
        ],
        "summary": "勤務時間修正申請の作成",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の勤務時間修正を新規作成します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n  <li>申請者と承認者が同一ユーザーの場合、feedback(差戻し)をするとレスポンスは以下のようになります。</li>\n  <ul>\n    <li>status: draft</li>\n    <li>approval_flow_logs.action: cancel</li>\n  </ul>\n</ul>",
        "operationId": "create_approval_requests_work_time",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "company_id",
                  "target_date",
                  "approval_flow_route_id"
                ],
                "properties": {
                  "company_id": {
                    "type": "integer",
                    "description": "事業所ID（必須）",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 2147483647,
                    "example": 1
                  },
                  "target_date": {
                    "type": "string",
                    "description": "対象日（必須）",
                    "format": "date",
                    "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
                  },
                  "clear_work_time": {
                    "type": "boolean",
                    "description": "false: 勤務時間を修正する  \ntrue: 勤務時間を削除する\n\n勤務時間を削除する場合は以下のパラメータは指定しないでください。\n- clock_in_at\n- clock_out_at\n- lateness_mins\n- early_leaving_mins\n- break_records",
                    "default": false
                  },
                  "clock_in_at": {
                    "type": "string",
                    "description": "勤務開始時間（条件付き必須）  \n勤務時間を修正する場合は必須",
                    "pattern": "^[0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
                    "example": "12:00"
                  },
                  "clock_out_at": {
                    "type": "string",
                    "description": "勤務終了時間（条件付き必須）  \n勤務時間を修正する場合は必須",
                    "pattern": "^[0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
                    "example": "23:59"
                  },
                  "lateness_mins": {
                    "type": "integer",
                    "description": "遅刻分の時間（分単位）",
                    "format": "int32"
                  },
                  "early_leaving_mins": {
                    "type": "integer",
                    "description": "早退分の時間（分単位）",
                    "format": "int32"
                  },
                  "break_records": {
                    "type": "array",
                    "description": "休憩時間のリスト",
                    "items": {
                      "$ref": "#/components/schemas/ApiV1WorkTimeIndexResponseParams/properties/break_records/items"
                    }
                  },
                  "comment": {
                    "type": "string",
                    "description": "申請理由",
                    "maxLength": 255,
                    "example": "申請理由"
                  },
                  "approval_flow_route_id": {
                    "type": "integer",
                    "description": "申請経路ID（必須）",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 2147483647,
                    "example": 1
                  },
                  "approver_id": {
                    "type": "integer",
                    "description": "承認者のユーザーID",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 2147483647,
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "work_time"
                  ],
                  "properties": {
                    "work_time": {
                      "$ref": "#/components/schemas/ApiV1WorkTimeResponseParams"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/approval_requests/work_times/{id}": {
      "get": {
        "tags": [
          "勤務時間修正申請"
        ],
        "summary": "勤務時間修正申請の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の勤務時間修正申請情報を取得します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n  <li>申請者と承認者が同一ユーザーの場合、feedback(差戻し)をするとレスポンスは以下のようになります。</li>\n  <ul>\n    <li>status: draft</li>\n    <li>approval_flow_logs.action: cancel</li>\n  </ul>\n</ul>",
        "operationId": "get_approval_requests_work_time",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "description": "事業所ID",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "id",
            "in": "path",
            "description": "勤務時間修正申請ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1api~1v1~1approval_requests~1work_times/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "勤務時間修正申請"
        ],
        "summary": "勤務時間修正申請の更新",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の勤務時間修正申請情報を更新します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n  <li>申請者と承認者が同一ユーザーの場合、feedback(差戻し)をするとレスポンスは以下のようになります。</li>\n  <ul>\n    <li>status: draft</li>\n    <li>approval_flow_logs.action: cancel</li>\n  </ul>\n</ul>",
        "operationId": "update_approval_requests_work_time",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "勤務時間修正申請ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/paths/~1api~1v1~1approval_requests~1work_times/post/requestBody/content/application~1json/schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1api~1v1~1approval_requests~1work_times/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "勤務時間修正申請"
        ],
        "summary": "勤務時間修正申請の削除",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の勤務時間修正申請情報を削除します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n</ul>",
        "operationId": "destroy_approval_requests_work_time",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "勤務時間修正申請ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "company_id",
            "in": "query",
            "description": "事業所ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/approval_requests/work_times/{id}/actions": {
      "post": {
        "tags": [
          "勤務時間修正申請"
        ],
        "summary": "勤務時間修正申請の承認操作",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の勤務時間修正申請情報を承認操作します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n  <li>申請者と承認者が同一ユーザーの場合、feedback(差戻し)をするとレスポンスは以下のようになります。</li>\n  <ul>\n    <li>status: draft</li>\n    <li>approval_flow_logs.action: cancel</li>\n  </ul>\n</ul>",
        "operationId": "action_approval_requests_work_time",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "勤務時間修正申請ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1ApprovalActionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1api~1v1~1approval_requests~1work_times/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/approval_requests/paid_holidays": {
      "get": {
        "tags": [
          "有給申請"
        ],
        "summary": "有給申請一覧の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の指定日付時点における有給申請情報をリストで返します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n  <li>申請者と承認者が同一ユーザーの場合、feedback(差戻し)をするとレスポンスは以下のようになります。</li>\n  <ul>\n    <li>status: draft</li>\n    <li>approval_flow_logs.action: cancel</li>\n  </ul>\n</ul>",
        "operationId": "get_approval_requests_paid_holidays",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "description": "事業所ID",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "status",
            "in": "query",
            "description": "申請ステータス\n- `draft` - 下書き\n- `in_progress` - 申請中\n- `approved` - 承認済\n- `feedback` - 差戻し",
            "schema": {
              "type": "string",
              "enum": [
                "draft",
                "in_progress",
                "approved",
                "feedback"
              ],
              "example": "in_progress"
            }
          },
          {
            "name": "application_number",
            "in": "query",
            "description": "申請No",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "start_issue_date",
            "in": "query",
            "description": "申請開始日",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "example": "2022-02-01"
          },
          {
            "name": "end_issue_date",
            "in": "query",
            "description": "申請終了日",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "example": "2022-02-01"
          },
          {
            "name": "approver_id",
            "in": "query",
            "description": "現在承認ステップの承認者のユーザーID\n\napprover_idに値を指定する場合、指定なしの申請経路を利用した申請は返却されません\n",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "applicant_id",
            "in": "query",
            "description": "申請者のユーザーID",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "start_target_date",
            "in": "query",
            "description": "対象開始日",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "example": "2022-02-01"
          },
          {
            "name": "end_target_date",
            "in": "query",
            "description": "対象終了日",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "example": "2022-02-01"
          },
          {
            "name": "passed_auto_check",
            "in": "query",
            "description": "自動チェック結果\n- trueを指定した場合、自動チェック結果がtrueの申請のみ返却します。\n- falseを指定した場合、自動チェック結果がfalseの申請のみ返却します。\n- キーごと指定しない場合、すべての申請を返却します。",
            "schema": {
              "type": "boolean"
            },
            "example": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "取得レコードの件数 (デフォルト: 50, 最小: 1, 最大: 100)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "example": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "取得レコードのオフセット (デフォルト: 0)",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 2147483647,
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1PaidHolidayIndexResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "有給申請"
        ],
        "summary": "有給申請の作成",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の有給申請を新規作成します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n  <li>申請者と承認者が同一ユーザーの場合、feedback(差戻し)をするとレスポンスは以下のようになります。</li>\n  <ul>\n    <li>status: draft</li>\n    <li>approval_flow_logs.action: cancel</li>\n  </ul>\n</ul>",
        "operationId": "create_approval_requests_paid_holiday",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1PaidHolidayRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1PaidHolidayResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/approval_requests/paid_holidays/{id}": {
      "get": {
        "tags": [
          "有給申請"
        ],
        "summary": "有給申請の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の有給申請情報を取得します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n  <li>申請者と承認者が同一ユーザーの場合、feedback(差戻し)をするとレスポンスは以下のようになります。</li>\n  <ul>\n    <li>status: draft</li>\n    <li>approval_flow_logs.action: cancel</li>\n  </ul>\n</ul>",
        "operationId": "get_approval_requests_paid_holiday",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "description": "事業所ID",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "id",
            "in": "path",
            "description": "有給申請ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1PaidHolidayResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "有給申請"
        ],
        "summary": "有給申請の更新",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の有給申請情報を更新します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n  <li>申請者と承認者が同一ユーザーの場合、feedback(差戻し)をするとレスポンスは以下のようになります。</li>\n  <ul>\n    <li>status: draft</li>\n    <li>approval_flow_logs.action: cancel</li>\n  </ul>\n</ul>",
        "operationId": "update_approval_requests_paid_holiday",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "有給申請ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1PaidHolidayRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1PaidHolidayResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "有給申請"
        ],
        "summary": "有給申請の削除",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の有給申請情報を削除します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n</ul>",
        "operationId": "destroy_approval_requests_paid_holiday",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "有給申請ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "company_id",
            "in": "query",
            "description": "事業所ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/approval_requests/paid_holidays/{id}/actions": {
      "post": {
        "tags": [
          "有給申請"
        ],
        "summary": "有給申請の承認操作",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の有給申請情報を承認操作します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n  <li>全休の有給申請は承認されると申請者の有給の残数が減ります。</li>\n  <li>半休と時間休の有給申請は承認されても申請者の有給の残数が減らない場合があります。以下の条件を満たす場合、申請者の有給の残数が減ります。</li>\n  <ul>\n    <li>申請承認後、申請者が申請の対象日に出勤打刻と退勤打刻をする。</li>\n    <li>申請承認前に、申請者が申請の対象日に勤怠を登録している。</li>\n  </ul>\n  <li>申請者と承認者が同一ユーザーの場合、feedback(差戻し)をするとレスポンスは以下のようになります。</li>\n  <ul>\n    <li>status: draft</li>\n    <li>approval_flow_logs.action: cancel</li>\n  </ul>\n</ul>",
        "operationId": "action_approval_requests_paid_holiday",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "有給申請ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1ApprovalActionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1PaidHolidayResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/approval_requests/special_holidays": {
      "get": {
        "tags": [
          "特別休暇申請"
        ],
        "summary": "特別休暇申請一覧の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の指定日付時点における特別休暇申請情報をリストで返します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n  <li>申請者と承認者が同一ユーザーの場合、feedback(差戻し)をするとレスポンスは以下のようになります。</li>\n  <ul>\n    <li>status: draft</li>\n    <li>approval_flow_logs.action: cancel</li>\n  </ul>\n</ul>",
        "operationId": "get_approval_requests_special_holidays",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "description": "事業所ID",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "status",
            "in": "query",
            "description": "申請ステータス\n- `draft` - 下書き\n- `in_progress` - 申請中\n- `approved` - 承認済\n- `feedback` - 差戻し",
            "schema": {
              "type": "string",
              "enum": [
                "draft",
                "in_progress",
                "approved",
                "feedback"
              ],
              "example": "in_progress"
            }
          },
          {
            "name": "application_number",
            "in": "query",
            "description": "申請No",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "start_issue_date",
            "in": "query",
            "description": "申請開始日",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "example": "2022-02-01"
          },
          {
            "name": "end_issue_date",
            "in": "query",
            "description": "申請終了日",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "example": "2022-02-01"
          },
          {
            "name": "approver_id",
            "in": "query",
            "description": "現在承認ステップの承認者のユーザーID\n\napprover_idに値を指定する場合、指定なしの申請経路を利用した申請は返却されません\n",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "applicant_id",
            "in": "query",
            "description": "申請者のユーザーID",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "start_target_date",
            "in": "query",
            "description": "対象開始日",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "example": "2022-02-01"
          },
          {
            "name": "end_target_date",
            "in": "query",
            "description": "対象終了日",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "example": "2022-02-01"
          },
          {
            "name": "passed_auto_check",
            "in": "query",
            "description": "自動チェック結果\n- trueを指定した場合、自動チェック結果がtrueの申請のみ返却します。\n- falseを指定した場合、自動チェック結果がfalseの申請のみ返却します。\n- キーごと指定しない場合、すべての申請を返却します。",
            "schema": {
              "type": "boolean"
            },
            "example": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "取得レコードの件数 (デフォルト: 50, 最小: 1, 最大: 100)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "example": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "取得レコードのオフセット (デフォルト: 0)",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 2147483647,
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1specialHolidayIndexResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "特別休暇申請"
        ],
        "summary": "特別休暇申請の作成",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の特別休暇申請を新規作成します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n  <li>申請者と承認者が同一ユーザーの場合、feedback(差戻し)をするとレスポンスは以下のようになります。</li>\n  <ul>\n    <li>status: draft</li>\n    <li>approval_flow_logs.action: cancel</li>\n  </ul>\n</ul>",
        "operationId": "create_approval_requests_special_holiday",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1specialHolidayRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1specialHolidayResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/approval_requests/special_holidays/{id}": {
      "get": {
        "tags": [
          "特別休暇申請"
        ],
        "summary": "特別休暇申請の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の特別休暇申請情報を取得します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n  <li>申請者と承認者が同一ユーザーの場合、feedback(差戻し)をするとレスポンスは以下のようになります。</li>\n  <ul>\n    <li>status: draft</li>\n    <li>approval_flow_logs.action: cancel</li>\n  </ul>\n</ul>",
        "operationId": "get_approval_requests_special_holiday",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "description": "事業所ID",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "id",
            "in": "path",
            "description": "特別休暇申請ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1specialHolidayResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "特別休暇申請"
        ],
        "summary": "特別休暇申請の更新",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の特別休暇申請情報を更新します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n  <li>申請者と承認者が同一ユーザーの場合、feedback(差戻し)をするとレスポンスは以下のようになります。</li>\n  <ul>\n    <li>status: draft</li>\n    <li>approval_flow_logs.action: cancel</li>\n  </ul>\n</ul>",
        "operationId": "update_approval_requests_special_holiday",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "特別休暇申請ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1specialHolidayRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1specialHolidayResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "特別休暇申請"
        ],
        "summary": "特別休暇申請の削除",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の特別休暇申請情報を削除します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n</ul>",
        "operationId": "destroy_approval_requests_special_holiday",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "特別休暇申請ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "company_id",
            "in": "query",
            "description": "事業所ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/approval_requests/special_holidays/{id}/actions": {
      "post": {
        "tags": [
          "特別休暇申請"
        ],
        "summary": "特別休暇申請の承認操作",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の特別休暇申請情報を承認操作します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n  <li>全休の特別休暇申請は承認されると申請者の特別休暇の残数が減ります。</li>\n  <li>半休と時間休の特別休暇申請は承認されても申請者の特別休暇の残数が減らない場合があります。以下の条件を満たす場合、申請者の特別休暇の残数が減ります。</li>\n  <ul>\n    <li>申請承認後、申請者が申請の対象日に出勤打刻と退勤打刻をする。</li>\n    <li>申請承認前に、申請者が申請の対象日に勤怠を登録している。</li>\n  </ul>\n  <li>申請者と承認者が同一ユーザーの場合、feedback(差戻し)をするとレスポンスは以下のようになります。</li>\n  <ul>\n    <li>status: draft</li>\n    <li>approval_flow_logs.action: cancel</li>\n  </ul>\n</ul>",
        "operationId": "action_approval_requests_special_holiday",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "特別休暇申請ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1ApprovalActionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1specialHolidayResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/approval_requests/overtime_works": {
      "get": {
        "tags": [
          "残業申請"
        ],
        "summary": "残業申請一覧の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の指定日付時点における残業申請情報をリストで返します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n</ul>",
        "operationId": "get_approval_requests_overtime_works",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "description": "事業所ID",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "status",
            "in": "query",
            "description": "申請ステータス\n- `draft` - 下書き\n- `in_progress` - 申請中\n- `approved` - 承認済\n- `feedback` - 差戻し",
            "schema": {
              "type": "string",
              "enum": [
                "draft",
                "in_progress",
                "approved",
                "feedback"
              ],
              "example": "in_progress"
            }
          },
          {
            "name": "application_number",
            "in": "query",
            "description": "申請No",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "start_issue_date",
            "in": "query",
            "description": "申請開始日",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "example": "2022-02-01"
          },
          {
            "name": "end_issue_date",
            "in": "query",
            "description": "申請終了日",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "example": "2022-02-01"
          },
          {
            "name": "approver_id",
            "in": "query",
            "description": "現在承認ステップの承認者のユーザーID\n\napprover_idに値を指定する場合、指定なしの申請経路を利用した申請は返却されません\n",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "applicant_id",
            "in": "query",
            "description": "申請者のユーザーID",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "start_target_date",
            "in": "query",
            "description": "対象開始日",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "example": "2022-02-01"
          },
          {
            "name": "end_target_date",
            "in": "query",
            "description": "対象終了日",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "example": "2022-02-01"
          },
          {
            "name": "passed_auto_check",
            "in": "query",
            "description": "自動チェック結果\n- trueを指定した場合、自動チェック結果がtrueの申請のみ返却します。\n- falseを指定した場合、自動チェック結果がfalseの申請のみ返却します。\n- キーごと指定しない場合、すべての申請を返却します。",
            "schema": {
              "type": "boolean"
            },
            "example": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "取得レコードの件数 (デフォルト: 50, 最小: 1, 最大: 100)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "example": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "取得レコードのオフセット (デフォルト: 0)",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 2147483647,
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1OvertimeWorkIndexResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "残業申請"
        ],
        "summary": "残業申請の作成",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の残業申請を新規作成します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n  <li>申請者と承認者が同一ユーザーの場合、feedback(差戻し)をするとレスポンスは以下のようになります。</li>\n  <ul>\n    <li>status: draft</li>\n    <li>approval_flow_logs.action: cancel</li>\n  </ul>\n</ul>",
        "operationId": "create_approval_requests_overtime_work",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1OvertimeWorkRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1OvertimeWorkResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/approval_requests/overtime_works/{id}": {
      "get": {
        "tags": [
          "残業申請"
        ],
        "summary": "残業申請の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の残業申請情報を取得します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n  <li>申請者と承認者が同一ユーザーの場合、feedback(差戻し)をするとレスポンスは以下のようになります。</li>\n  <ul>\n    <li>status: draft</li>\n    <li>approval_flow_logs.action: cancel</li>\n  </ul>\n</ul>",
        "operationId": "get_approval_requests_overtime_work",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "description": "事業所ID",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "id",
            "in": "path",
            "description": "残業申請ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1OvertimeWorkResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "残業申請"
        ],
        "summary": "残業申請の更新",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の残業申請情報を更新します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n  <li>申請者と承認者が同一ユーザーの場合、feedback(差戻し)をするとレスポンスは以下のようになります。</li>\n  <ul>\n    <li>status: draft</li>\n    <li>approval_flow_logs.action: cancel</li>\n  </ul>\n</ul>",
        "operationId": "update_approval_requests_overtime_work",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "残業申請ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1OvertimeWorkRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1OvertimeWorkResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "残業申請"
        ],
        "summary": "残業申請の削除",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の残業申請情報を削除します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n</ul>",
        "operationId": "destroy_approval_requests_overtime_work",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "残業申請ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          },
          {
            "name": "company_id",
            "in": "query",
            "description": "事業所ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/approval_requests/overtime_works/{id}/actions": {
      "post": {
        "tags": [
          "残業申請"
        ],
        "summary": "残業申請の承認操作",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の残業申請情報を承認操作します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n  <li>申請者と承認者が同一ユーザーの場合、feedback(差戻し)をするとレスポンスは以下のようになります。</li>\n  <ul>\n    <li>status: draft</li>\n    <li>approval_flow_logs.action: cancel</li>\n  </ul>\n</ul>",
        "operationId": "action_approval_requests_overtime_work",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "残業申請ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1ApprovalActionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1OvertimeWorkResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/approval_flow_routes": {
      "get": {
        "tags": [
          "申請経路"
        ],
        "summary": "申請経路一覧の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の申請経路一覧を取得する。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>指定した事業所の従業員に紐づくユーザーのみ実行可能です。</li>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n</ul>",
        "operationId": "get_approval_flow_routes",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "事業所ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          },
          {
            "name": "included_user_id",
            "in": "query",
            "description": "経路に含まれるユーザーのユーザーID",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          },
          {
            "name": "usage",
            "in": "query",
            "description": "申請種別（申請経路を使用できる申請種別を示します。例えば、AttendanceWorkflow の場合は、勤怠申請で使用できる申請経路です。）\n- `AttendanceWorkflow` - 勤怠申請\n- `PersonalDataWorkflow` - 身上変更申請",
            "schema": {
              "type": "string",
              "enum": [
                "AttendanceWorkflow",
                "PersonalDataWorkflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1ApprovalFlowRoutesIndexResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/approval_flow_routes/{id}": {
      "get": {
        "tags": [
          "申請経路"
        ],
        "summary": "申請経路の取得",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した事業所の申請経路を取得する。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>指定した事業所の従業員に紐づくユーザーのみ実行可能です。</li>\n  <li>申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。</li>\n  <ul>\n    <li>役職指定（申請者の所属部門）</li>\n    <li>役職指定（申請時に部門指定）</li>\n    <li>部門および役職指定</li>\n  </ul>\n</ul>",
        "operationId": "get_approval_flow_route",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "申請経路ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          },
          {
            "name": "company_id",
            "in": "query",
            "description": "事業所ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1ApprovalFlowRouteResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/yearend_adjustments/{year}/employees": {
      "get": {
        "tags": [
          "年末調整"
        ],
        "summary": "年末調整対象一覧の取得",
        "description": "\n指定した年の年末調整対象のリスト返します。",
        "operationId": "get_yearend_adjustment_employees",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "description": "事業所ID"
          },
          {
            "name": "year",
            "in": "path",
            "description": "年末調整対象を取得したい年",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "取得レコードの件数 (デフォルト: 50, 最小: 1, 最大: 100)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "取得レコードのオフセット (デフォルト: 0)",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 2147483647
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentController.index_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/yearend_adjustments/{year}/employees/{employee_id}": {
      "get": {
        "tags": [
          "年末調整"
        ],
        "summary": "年末調整の取得",
        "description": "指定した年、従業員IDの年末調整の詳細内容を返します。<br>\n年末調整対象外の従業員は、本人情報、給与・賞与、前職情報のみが取得できます。",
        "operationId": "get_yearend_adjustment_employee",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "description": "事業所ID"
          },
          {
            "name": "year",
            "in": "path",
            "description": "年末調整を取得したい年",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentController.show_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "年末調整"
        ],
        "summary": "年末調整従業員情報の更新",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員の姓名・住所などを更新します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>本APIは、年末調整が確定済みの従業員には非対応です。</li>\n</ul>",
        "operationId": "put_yearend_adjustment_employee",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "更新対象年",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentController.update_employee_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentController.update_employee_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/yearend_adjustments/{year}/payroll_and_bonus/{employee_id}": {
      "put": {
        "tags": [
          "年末調整"
        ],
        "summary": "年末調整従業員給与・賞与の更新",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員の給与・賞与を更新します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>本APIは、年末調整が確定済みの従業員には非対応です。</li>\n</ul>",
        "operationId": "put_yearend_adjustment_payroll_and_bonus",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "更新対象年",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentController.update_payroll_and_bonus_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentController.update_payroll_and_bonus_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/yearend_adjustments/{year}/dependents/{employee_id}": {
      "put": {
        "tags": [
          "年末調整"
        ],
        "summary": "年末調整家族情報の更新",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した年末調整の家族情報を更新します。</p>\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>本APIは、年末調整が確定済みの従業員には非対応です。</li>\n  <li>idがない場合は新規作成、destroyがtrueの場合は削除になります。</li>\n</ul>",
        "operationId": "put_yearend_adjustment_dependents",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "更新対象年",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentController.update_dependents_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentController.update_dependents_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/yearend_adjustments/{year}/previous_jobs/{employee_id}": {
      "put": {
        "tags": [
          "年末調整"
        ],
        "summary": "年末調整従業員前職情報の更新",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員の前職情報を更新します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>本APIは、年末調整が確定済みの従業員には非対応です。</li>\n</ul>",
        "operationId": "put_yearend_adjustment_previous_job",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "更新対象年",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentController.update_previous_job_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentController.update_previous_job_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "年末調整"
        ],
        "summary": "年末調整従業員前職情報の削除",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員の前職情報を削除します。</p>\n\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>本APIは、年末調整が確定済みの従業員には非対応です。</li>\n</ul>",
        "operationId": "destroy_yearend_adjustment_previous_job",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "description": "事業所ID"
          },
          {
            "name": "year",
            "in": "path",
            "description": "更新対象年",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/yearend_adjustments/{year}/insurances/{employee_id}": {
      "post": {
        "tags": [
          "年末調整"
        ],
        "summary": "年末調整従業員保険料情報の作成",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員の保険料情報を作成します。</p>\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>本APIは、年末調整が確定済みの従業員には非対応です。</li>\n</ul>",
        "operationId": "post_yearend_adjustment_insurances",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "作成対象年",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentController.update_insurance_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentController.update_insurance_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/yearend_adjustments/{year}/insurances/{employee_id}/{id}": {
      "put": {
        "tags": [
          "年末調整"
        ],
        "summary": "年末調整従業員保険料情報の更新",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員の保険料情報を更新します。</p>\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>本APIは、年末調整が確定済みの従業員には非対応です。</li>\n</ul>",
        "operationId": "put_yearend_adjustment_insurances",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "更新対象年",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "保険料ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentController.update_insurance_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentController.update_insurance_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "年末調整"
        ],
        "summary": "年末調整従業員保険料情報の削除",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員の保険料情報を削除します。</p>\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>本APIは、年末調整が確定済みの従業員には非対応です。</li>\n</ul>",
        "operationId": "destroy_yearend_adjustment_insurances",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "description": "事業所ID"
          },
          {
            "name": "year",
            "in": "path",
            "description": "更新対象年",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "保険料ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/yearend_adjustments/{year}/housing_loan_deductions/{employee_id}": {
      "put": {
        "tags": [
          "年末調整"
        ],
        "summary": "年末調整従業員住宅ローン控除額の更新",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員の住宅ローン控除額を更新します。</p>\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>本APIは、年末調整が確定済みの従業員には非対応です。</li>\n</ul>",
        "operationId": "put_yearend_adjustment_housing_loan_deduction",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "更新対象年",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "company_id",
                  "housing_loan_deduction"
                ],
                "properties": {
                  "company_id": {
                    "type": "integer",
                    "description": "更新対象事業所ID（必須）",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 2147483647,
                    "example": 1
                  },
                  "housing_loan_deduction": {
                    "type": "integer",
                    "description": "住宅借入金等特別控除（必須）",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 999999999,
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "housing_loan_deduction": {
                      "type": "integer",
                      "description": "住宅借入金等特別控除",
                      "format": "int32",
                      "minimum": 0,
                      "maximum": 999999999,
                      "example": 1
                    },
                    "housing_loans": {
                      "type": "array",
                      "description": "住宅ローン",
                      "items": {
                        "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentHousingLoanSerializer"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/yearend_adjustments/{year}/housing_loans/{employee_id}": {
      "post": {
        "tags": [
          "年末調整"
        ],
        "summary": "年末調整従業員住宅ローンの作成",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員の住宅ローンを作成します。</p>\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>本APIは、年末調整が確定済みの従業員には非対応です。</li>\n</ul>",
        "operationId": "post_yearend_adjustment_housing_loan",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "作成対象年",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentController.update_housing_loan_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentController.update_housing_loan_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/yearend_adjustments/{year}/housing_loans/{employee_id}/{id}": {
      "put": {
        "tags": [
          "年末調整"
        ],
        "summary": "年末調整従業員住宅ローンの更新",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員の住宅ローンを更新します。</p>\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>本APIは、年末調整が確定済みの従業員には非対応です。</li>\n</ul>",
        "operationId": "put_yearend_adjustment_housing_loan",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "更新対象年",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "住宅ローンID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentController.update_housing_loan_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentController.update_housing_loan_response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "年末調整"
        ],
        "summary": "年末調整従業員住宅ローンの削除",
        "description": "<h2 id=\"\">概要</h2>\n<p>指定した従業員の住宅ローンを削除します。</p>\n<h2 id=\"_1\">注意点</h2>\n<ul>\n  <li>本APIは、年末調整が確定済みの従業員には非対応です。</li>\n</ul>",
        "operationId": "destroy_yearend_adjustment_housing_loan",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            "description": "事業所ID"
          },
          {
            "name": "year",
            "in": "path",
            "description": "更新対象年",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000,
              "maximum": 2100
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "従業員ID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "住宅ローンID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/notfoundError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    }
  },
  "components": {
    "schemas": {
      "ApiV1EmployeeUpdateRequestSerializer": {
        "type": "object",
        "required": [
          "entry_date",
          "birth_date"
        ],
        "properties": {
          "num": {
            "type": "string",
            "maxLength": 255,
            "description": "従業員番号<br>\n従業員を判別しやすいよう管理することができます。（例: 1人目の正社員を A-001 と入力）",
            "example": "A-001"
          },
          "display_name": {
            "type": "string",
            "description": "従業員名（freee人事労務上での表示にのみ使用される名前です。出力書類には姓名が使用されます。）\n- 給与計算対象外の従業員情報の場合は必須になります。",
            "maxLength": 255,
            "example": "山田 太郎"
          },
          "base_pension_num": {
            "type": "string",
            "description": "基礎年金番号 数値文字列10桁固定長 例: 1111111111",
            "maxLength": 10,
            "example": "1111111111"
          },
          "employment_insurance_reference_number": {
            "type": "string",
            "description": "被保険者番号（雇用保険） 数値文字列11桁固定長 例: 11111111111\n- 給与計算対象外の従業員情報の場合に指定するとエラーになります。",
            "maxLength": 11,
            "example": "11111111111"
          },
          "birth_date": {
            "type": "string",
            "description": "生年月日 null不可",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "example": "2000-01-01"
          },
          "entry_date": {
            "type": "string",
            "description": "入社日 null不可",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "example": "2021-04-01"
          },
          "retire_date": {
            "type": "string",
            "description": "退職日\n- 退職していない場合は指定不要です。\n- 指定する場合はentry_date以降の日付を指定してください。\n- retire_dateをクリアする場合、nullを指定してください。",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "nullable": true,
            "example": "2022-03-31"
          },
          "company_reference_date_rule_name": {
            "type": "string",
            "maxLength": 15,
            "description": "<a href=\"https://support.freee.co.jp/hc/ja/articles/360000666303-締め日支払い日を変更する方法は-\" target=\"_blank\">締め日支払い日グループ名</a>\nで設定した締め日支払い日を指定してください。\n- 未指定の際は、締め日支払い日は変わりません。\n- 指定した従業員が給与計算対象外の場合、指定するとエラーになります。",
            "example": "当月締め翌月払い"
          }
        }
      },
      "ApiV1EmployeePayrollStatementsEmployeeAttendanceItemSerializer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "項目名"
          },
          "time": {
            "type": "string",
            "description": "時間"
          },
          "amount": {
            "type": "string",
            "description": "控除額"
          }
        }
      },
      "ApiV1EmployeePayrollStatementsEmployeePayrollStatementItemSerializer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "項目名"
          },
          "amount": {
            "type": "string",
            "description": "金額"
          }
        }
      },
      "ApiV1EmployeePayrollStatementsEmployeeOvertimePayItemSerializer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "項目名",
            "example": "時間外労働"
          },
          "time": {
            "type": "string",
            "nullable": true,
            "description": "時間(単位: 分)。固定残業代の場合、nullになります。",
            "example": "60.0"
          },
          "amount": {
            "type": "string",
            "description": "手当金額",
            "example": "1000.0"
          },
          "code": {
            "type": "string",
            "nullable": true,
            "description": "コード（事業所毎に設定可能な小文字英数最大10桁のコード）",
            "example": "12345abcde"
          }
        }
      },
      "ApiV1EmployeeCreateRequestSerializer": {
        "type": "object",
        "required": [
          "last_name",
          "first_name",
          "last_name_kana",
          "first_name_kana",
          "entry_date",
          "birth_date"
        ],
        "properties": {
          "num": {
            "type": "string",
            "maxLength": 255,
            "description": "従業員番号<br>\n従業員を判別しやすいよう管理することができます。（例: 1人目の正社員を A-001 と入力）",
            "example": "A-001"
          },
          "working_hours_system_name": {
            "type": "string",
            "description": "<a href=\"https://support.freee.co.jp/hc/ja/articles/360000562403-労働時間制度と勤務-賃金設定について\" target=\"_blank\">勤務・賃金設定名</a>\nで設定した名称を指定してください。\n- 未指定の際は、最初に登録したデータが利用されます。\n- 入力パラメータのno_payroll_calculationがtrueの場合に指定するとエラーになります。",
            "maxLength": 30,
            "example": "固定"
          },
          "company_reference_date_rule_name": {
            "type": "string",
            "maxLength": 15,
            "description": "<a href=\"https://support.freee.co.jp/hc/ja/articles/360000666303-締め日支払い日を変更する方法は-\" target=\"_blank\">締め日支払い日グループ名</a>\nで設定した締め日支払い日を指定してください。\n- 未指定の際は、最初に登録したデータが利用されます。\n- 入力パラメータのno_payroll_calculationがtrueの場合に指定するとエラーになります。",
            "example": "15日締め（当月25日払い）"
          },
          "last_name": {
            "type": "string",
            "description": "姓（必須）<br>\nlast_nameとfirst_nameを空白文字で結合した文字列がdisplay_nameとして登録されます。\n- 例）last_name=田中、first_name＝太郎の場合、display_name＝田中 太郎\n- display_nameはput apiで更新可能です。",
            "maxLength": 255,
            "example": "山田"
          },
          "first_name": {
            "type": "string",
            "description": "名（必須）<br>\nlast_nameとfirst_nameを空白文字で結合した文字列がdisplay_nameとして登録されます。\n- 例）last_name=田中、first_name＝太郎の場合、display_name＝田中 太郎\n- display_nameはput apiで更新可能です。",
            "maxLength": 255,
            "example": "太郎"
          },
          "last_name_kana": {
            "type": "string",
            "description": "姓カナ（必須）",
            "maxLength": 255,
            "example": "ヤマダ"
          },
          "first_name_kana": {
            "type": "string",
            "description": "名カナ（必須）",
            "maxLength": 255,
            "example": "タロウ"
          },
          "birth_date": {
            "type": "string",
            "description": "生年月日（必須）",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "example": "2000-01-01"
          },
          "entry_date": {
            "type": "string",
            "description": "入社日（必須）",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "example": "2021-04-01"
          },
          "pay_calc_type": {
            "type": "string",
            "enum": [
              "monthly",
              "daily",
              "hourly"
            ],
            "description": "給与方式 monthly: 月給, daily: 日給, hourly: 時給\n- フレックスタイム制を使用している場合はmonthly以外指定できません。\n- 入力パラメータのno_payroll_calculationがfalseの場合は必須になります。\n- 入力パラメータのno_payroll_calculationがtrueの場合に指定するとエラーになります。",
            "example": "monthly"
          },
          "pay_amount": {
            "type": "integer",
            "description": "基本給\n- 入力パラメータのno_payroll_calculationがfalseの場合は必須になります。\n- 入力パラメータのno_payroll_calculationがtrueの場合に指定するとエラーになります。",
            "format": "int32",
            "minimum": 0,
            "maximum": 99999999,
            "example": 220000
          },
          "gender": {
            "type": "string",
            "description": "性別　unselected: 未選択, male: 男性, female: 女性（デフォルト: unselected: 未選択）",
            "enum": [
              "unselected",
              "male",
              "female"
            ],
            "example": "male"
          },
          "married": {
            "type": "boolean",
            "description": "配偶者の有無（デフォルト: false）"
          },
          "no_payroll_calculation": {
            "type": "boolean",
            "description": "給与計算対象外の従業員情報を作成する場合はtrueを指定します",
            "default": false,
            "example": true
          }
        }
      },
      "ApiV1GroupMembershipSerializer": {
        "type": "object",
        "properties": {
          "start_date": {
            "type": "string",
            "description": "開始日",
            "format": "date",
            "example": "2000-01-01"
          },
          "end_date": {
            "type": "string",
            "description": "終了日",
            "format": "date",
            "example": "2020-01-01"
          },
          "group_id": {
            "type": "integer",
            "description": "部門ID",
            "format": "int32",
            "example": 10
          },
          "group_code": {
            "type": "string",
            "description": "部門コード",
            "example": "group2"
          },
          "group_name": {
            "type": "string",
            "description": "部門名称",
            "example": "営業部"
          },
          "level": {
            "type": "integer",
            "description": "部門階層レベル",
            "format": "int32",
            "example": 2
          },
          "position_id": {
            "type": "integer",
            "description": "役職ID",
            "format": "int32",
            "nullable": true,
            "example": 1
          },
          "position_code": {
            "type": "string",
            "description": "役職コード",
            "nullable": true,
            "example": "position1"
          },
          "position_name": {
            "type": "string",
            "description": "役職名称",
            "nullable": true,
            "example": "部長"
          },
          "parent_group_id": {
            "type": "integer",
            "description": "親部門ID",
            "format": "int32",
            "nullable": true,
            "example": 1
          },
          "parent_group_code": {
            "type": "string",
            "description": "親部門コード",
            "nullable": true,
            "example": "group1"
          },
          "parent_group_name": {
            "type": "string",
            "description": "親部門名称",
            "example": "営業統括",
            "nullable": true
          }
        }
      },
      "ApiV1SalariesEmployeePayrollStatementSerializer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "給与明細ID",
            "format": "int32"
          },
          "company_id": {
            "type": "integer",
            "description": "事業所ID",
            "format": "int32"
          },
          "employee_id": {
            "type": "integer",
            "description": "従業員ID",
            "format": "int32"
          },
          "employee_name": {
            "type": "string",
            "description": "従業員の姓名"
          },
          "employee_display_name": {
            "type": "string",
            "description": "従業員の表示名"
          },
          "employee_num": {
            "type": "string",
            "nullable": true,
            "description": "従業員番号"
          },
          "pay_date": {
            "type": "string",
            "description": "支払日",
            "format": "date"
          },
          "start_date": {
            "type": "string",
            "description": "給与計算開始日（固定給）",
            "format": "date"
          },
          "closing_date": {
            "type": "string",
            "description": "給与計算締日（固定給）",
            "format": "date"
          },
          "variable_pay_start_date": {
            "type": "string",
            "description": "給与計算開始日（変動給） 残業手当、遅刻早退・欠勤などの計算に使われる期間",
            "format": "date"
          },
          "variable_pay_closing_date": {
            "type": "string",
            "description": "給与計算締日（変動給）",
            "format": "date"
          },
          "fixed": {
            "type": "boolean",
            "description": "給与明細が確定されているかどうか"
          },
          "calc_status": {
            "type": "string",
            "description": "計算状況ステータス calculating: 計算中, calculated: 計算完了, overwritten: 直接編集, imported: インポート, error: エラー"
          },
          "calculated_at": {
            "type": "string",
            "nullable": true,
            "description": "計算状況ステータスの更新日",
            "format": "date-time"
          },
          "pay_calc_type": {
            "type": "string",
            "enum": [
              "monthly",
              "daily",
              "hourly",
              ""
            ],
            "description": "給与形態 monthly: 月給, daily: 日給, hourly: 時給, (空文字列): 計算中",
            "example": "monthly"
          },
          "board_member_remuneration_amount": {
            "type": "string",
            "nullable": true,
            "description": "役員報酬"
          },
          "basic_pay_amount": {
            "type": "string",
            "nullable": true,
            "description": "基本給"
          },
          "work_days": {
            "type": "string",
            "nullable": true,
            "description": "労働日数"
          },
          "normal_work_time": {
            "type": "string",
            "nullable": true,
            "description": "労働時間のうち、所定労働時間に該当するもの"
          },
          "normal_work_days": {
            "type": "string",
            "nullable": true,
            "description": "所定労働出勤日数"
          },
          "work_mins_by_paid_holiday": {
            "type": "string",
            "nullable": true,
            "description": "有給休暇時間数"
          },
          "num_paid_holidays": {
            "type": "string",
            "nullable": true,
            "description": "有給日数"
          },
          "is_board_member": {
            "type": "boolean",
            "description": "役員かどうか"
          },
          "total_attendance_deduction_amount": {
            "type": "string",
            "nullable": true,
            "description": "勤怠控除額合計"
          },
          "total_allowance_amount": {
            "type": "string",
            "nullable": true,
            "description": "支給手当額合計"
          },
          "total_deduction_amount": {
            "type": "string",
            "nullable": true,
            "description": "控除額合計"
          },
          "net_payment_amount": {
            "type": "string",
            "nullable": true,
            "description": "差引支給額(手取り額)"
          },
          "gross_payment_amount": {
            "type": "string",
            "nullable": true,
            "description": "総支給額(額面)"
          },
          "total_worked_days_count": {
            "type": "string",
            "nullable": true,
            "description": "平日と休日の合計労働日数（日給用）"
          },
          "total_taxable_payment_amount": {
            "type": "string",
            "nullable": true,
            "description": "課税対象支給額"
          },
          "total_expense_amount": {
            "type": "string",
            "nullable": true,
            "description": "総経費精算額"
          },
          "total_transfer_amount": {
            "type": "string",
            "nullable": true,
            "description": "総振込額"
          },
          "total_annual_payment_amount": {
            "type": "string",
            "nullable": true,
            "description": "課税支給累計額"
          },
          "payments": {
            "type": "array",
            "description": "支給項目（基本給、残業代、通勤手当等）",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeePayrollStatementsEmployeePayrollStatementItemSerializer"
            }
          },
          "deductions": {
            "type": "array",
            "description": "控除項目（所得税、住民税、社会保険料等）",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeePayrollStatementsEmployeePayrollStatementItemSerializer"
            }
          },
          "attendances": {
            "type": "array",
            "description": "勤怠控除項目（遅刻早退控除、欠勤控除等）",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeePayrollStatementsEmployeeAttendanceItemSerializer"
            }
          },
          "overtime_pays": {
            "type": "array",
            "nullable": true,
            "description": "時間外労働項目(法定内残業、時間外労働、休日労働、深夜労働等)",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeePayrollStatementsEmployeeOvertimePayItemSerializer"
            }
          },
          "remark": {
            "type": "string",
            "nullable": true,
            "description": "備考"
          }
        }
      },
      "ApiV1HolidaysAndHoursSerializer": {
        "type": "object",
        "properties": {
          "days": {
            "type": "number",
            "description": "日数 0.5は半休を表す",
            "format": "float"
          },
          "hours": {
            "type": "integer",
            "description": "時間数",
            "format": "int32"
          }
        }
      },
      "ApiV1EmployeesIndexSerializer": {
        "type": "object",
        "properties": {
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeeSerializer"
            }
          },
          "total_count": {
            "type": "integer",
            "description": "合計件数",
            "format": "int32"
          }
        }
      },
      "ApiV1GroupsIndexResponse": {
        "type": "object",
        "required": [
          "groups",
          "total_count"
        ],
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiV1GroupResponseParams"
            }
          },
          "total_count": {
            "type": "integer",
            "description": "合計件数",
            "format": "int32",
            "minimum": 0,
            "maximum": 2147483647,
            "example": 1
          }
        }
      },
      "ApiV1GroupResponseParams": {
        "type": "object",
        "required": [
          "id",
          "name",
          "level"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "部門ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 3
          },
          "code": {
            "type": "string",
            "description": "部門コード",
            "maxLength": 255,
            "example": "group2",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "部門名称",
            "maxLength": 255,
            "example": "営業部門"
          },
          "level": {
            "type": "integer",
            "description": "部門階層レベル（数字が大きいほど階層が深いです。）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 2
          },
          "parent_group_id": {
            "type": "integer",
            "description": "親部門ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 2,
            "nullable": true
          },
          "parent_group_code": {
            "type": "string",
            "description": "親部門コード",
            "maxLength": 255,
            "example": "group1",
            "nullable": true
          },
          "parent_group_name": {
            "type": "string",
            "description": "親部門名称",
            "maxLength": 255,
            "example": "営業統括",
            "nullable": true
          }
        }
      },
      "ApiV1GroupCreateRequestParams": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "部門コード（入力しない場合、空文字が入力されます。）",
            "minLength": 1,
            "maxLength": 255,
            "nullable": true,
            "example": "group2"
          },
          "name": {
            "type": "string",
            "description": "部門名称（必須）",
            "minLength": 1,
            "maxLength": 255,
            "example": "営業部門"
          },
          "parent_group_id": {
            "type": "integer",
            "description": "親部門ID（部門階層レベルが10以内になるように親部門IDを指定してください。）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "nullable": true,
            "example": 2
          }
        }
      },
      "ApiV1GroupUpdateRequestParams": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "部門コード（入力しない場合、空文字が入力されます。）",
            "minLength": 1,
            "maxLength": 255,
            "nullable": true,
            "example": "group2"
          },
          "name": {
            "type": "string",
            "description": "部門名称",
            "minLength": 1,
            "maxLength": 255,
            "example": "営業部門"
          }
        }
      },
      "ApiV1PositionIndexResponse": {
        "type": "object",
        "required": [
          "positions",
          "total_count"
        ],
        "properties": {
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiV1PositionResponseParams"
            }
          },
          "total_count": {
            "type": "integer",
            "description": "合計件数",
            "format": "int32",
            "minimum": 0,
            "maximum": 2147483647,
            "example": 1
          }
        }
      },
      "ApiV1PositionResponseParams": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "役職ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "code": {
            "type": "string",
            "description": "役職コード",
            "maxLength": 255,
            "example": "position1",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "役職名称",
            "maxLength": 255,
            "example": "部長"
          }
        }
      },
      "ApiV1PositionRequestParams": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "役職コード（入力しない場合、空文字が入力されます。）",
            "minLength": 1,
            "maxLength": 255,
            "nullable": true,
            "example": "position1"
          },
          "name": {
            "type": "string",
            "description": "役職名称（必須）",
            "minLength": 1,
            "maxLength": 255,
            "example": "部長"
          }
        }
      },
      "ApiV1EmployeeGroupMembershipSerializer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "従業員ID",
            "format": "int32",
            "example": 1
          },
          "num": {
            "type": "string",
            "description": "従業員番号",
            "nullable": true,
            "example": "A-001"
          },
          "display_name": {
            "type": "string",
            "description": "従業員名（表示名）",
            "example": "山田 太郎"
          },
          "entry_date": {
            "type": "string",
            "description": "入社日",
            "format": "date",
            "example": "2021-04-01"
          },
          "retire_date": {
            "type": "string",
            "description": "退職日",
            "format": "date",
            "nullable": true,
            "example": "2022-03-31"
          },
          "user_id": {
            "type": "integer",
            "format": "int32",
            "description": "ユーザーID(従業員詳細未設定の場合、nullになります。)",
            "nullable": true,
            "example": 1
          },
          "login_email": {
            "type": "string",
            "description": "ログイン用メールアドレス(従業員詳細未設定の場合、nullになります。)",
            "nullable": true,
            "example": "example@example.com"
          },
          "birth_date": {
            "type": "string",
            "description": "生年月日",
            "format": "date",
            "example": "2000-01-01"
          },
          "gender": {
            "type": "string",
            "description": "性別　unselected: 未選択, male: 男性, female: 女性",
            "enum": [
              "unselected",
              "male",
              "female"
            ],
            "example": "male"
          },
          "payroll_calculation": {
            "type": "boolean",
            "description": "給与計算対象従業員の場合trueを返します",
            "example": true
          },
          "group_memberships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiV1GroupMembershipSerializer"
            }
          }
        }
      },
      "ApiV1MonthlyAttendanceIndexResponseParams": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "application_number",
          "applicant_id",
          "target_date",
          "issue_date",
          "status",
          "passed_auto_check"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "申請ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "事業所ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "application_number": {
            "type": "integer",
            "description": "申請No",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "applicant_id": {
            "type": "integer",
            "description": "申請者のユーザーID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "approver_ids": {
            "description": "承認者のユーザーID配列<br>\n次の場合、空配列になります。\n- 指定なしの申請経路を利用した、申請ステータスが承認済み以外の申請\n- 申請が差戻された",
            "type": "array",
            "items": {
              "type": "integer",
              "description": "承認者のユーザーID",
              "format": "int32",
              "minimum": 1,
              "maximum": 2147483647,
              "nullable": true,
              "example": 1
            }
          },
          "target_date": {
            "type": "string",
            "description": "対象日",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "example": "2022-02-01"
          },
          "issue_date": {
            "type": "string",
            "description": "申請日",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          },
          "status": {
            "type": "string",
            "description": "申請ステータス。（draft:下書き、in_progress:申請中、approved:承認済、feedback:差戻し）",
            "enum": [
              "draft",
              "in_progress",
              "approved",
              "feedback"
            ],
            "example": "in_progress"
          },
          "passed_auto_check": {
            "type": "boolean",
            "description": "自動チェック結果",
            "example": true
          }
        }
      },
      "ApiV1MonthlyAttendanceResponseParams": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "application_number",
          "applicant_id",
          "target_date",
          "issue_date",
          "status",
          "passed_auto_check",
          "approval_flow_route_id",
          "approval_flow_route_name",
          "approval_flow_logs",
          "current_round"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "申請ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "事業所ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "application_number": {
            "type": "integer",
            "description": "申請No",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "applicant_id": {
            "type": "integer",
            "description": "申請者のユーザーID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "approver_ids": {
            "description": "承認者のユーザーID配列<br>\n次の場合、空配列になります。\n- 指定なしの申請経路を利用した、申請ステータスが承認済み以外の申請\n- 申請が差戻された",
            "type": "array",
            "items": {
              "type": "integer",
              "description": "承認者のユーザーID",
              "format": "int32",
              "minimum": 1,
              "maximum": 2147483647,
              "nullable": true,
              "example": 1
            }
          },
          "target_date": {
            "type": "string",
            "description": "対象日",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "example": "2022-02-01"
          },
          "issue_date": {
            "type": "string",
            "description": "申請日",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          },
          "status": {
            "type": "string",
            "description": "申請ステータス。（draft:下書き、in_progress:申請中、approved:承認済、feedback:差戻し）",
            "enum": [
              "draft",
              "in_progress",
              "approved",
              "feedback"
            ],
            "example": "in_progress"
          },
          "passed_auto_check": {
            "type": "boolean",
            "description": "自動チェック結果",
            "example": true
          },
          "approval_flow_route_id": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647,
            "description": "申請経路ID",
            "example": 1
          },
          "approval_flow_route_name": {
            "type": "string",
            "description": "申請経路名",
            "example": "申請経路"
          },
          "approval_flow_logs": {
            "type": "array",
            "description": "承認履歴",
            "items": {
              "$ref": "#/components/schemas/ApiV1ApprovalFlowLogsParams"
            }
          },
          "current_step_id": {
            "type": "integer",
            "description": "現在承認ステップID<br>\n申請を差戻した場合、nullになります。",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1,
            "nullable": true
          },
          "current_round": {
            "type": "integer",
            "description": "現在のround。差戻し等により申請がstepの最初からやり直しになるとroundの値が増えます。",
            "format": "int32",
            "minimum": 0,
            "maximum": 2147483647,
            "example": 1
          }
        }
      },
      "ApiV1PaidHolidayIndexResponseParams": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "application_number",
          "applicant_id",
          "target_date",
          "holiday_type",
          "issue_date",
          "status",
          "revoke_status",
          "passed_auto_check"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "申請ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "事業所ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "application_number": {
            "type": "integer",
            "description": "申請No",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "applicant_id": {
            "type": "integer",
            "description": "申請者のユーザーID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "approver_ids": {
            "description": "承認者のユーザーID配列<br>\n次の場合、空配列になります。\n- 指定なしの申請経路を利用した、申請ステータスが承認済み以外の申請\n- 申請が差戻された",
            "type": "array",
            "items": {
              "type": "integer",
              "description": "承認者のユーザーID",
              "format": "int32",
              "minimum": 1,
              "maximum": 2147483647,
              "nullable": true,
              "example": 1
            }
          },
          "target_date": {
            "type": "string",
            "description": "対象日",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          },
          "holiday_type": {
            "type": "string",
            "description": "取得単位。（full:全休、half:半休、hour:時間休）",
            "enum": [
              "full",
              "half",
              "hour"
            ],
            "example": "half"
          },
          "start_at": {
            "type": "string",
            "description": "取得予定開始時間",
            "pattern": "^[0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
            "nullable": true,
            "example": "12:00"
          },
          "end_at": {
            "type": "string",
            "description": "取得予定終了時間",
            "pattern": "^[0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
            "nullable": true,
            "example": "23:59"
          },
          "issue_date": {
            "type": "string",
            "description": "申請日",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          },
          "comment": {
            "type": "string",
            "description": "申請理由",
            "maxLength": 255,
            "nullable": true,
            "example": "申請理由"
          },
          "status": {
            "type": "string",
            "description": "申請ステータス。（draft:下書き、in_progress:申請中、approved:承認済、feedback:差戻し）",
            "enum": [
              "draft",
              "in_progress",
              "approved",
              "feedback"
            ],
            "example": "in_progress"
          },
          "revoke_status": {
            "type": "string",
            "description": "取消申請ステータス。（null:取消申請されてない、revoking:取消中、revoked:取消済）",
            "enum": [
              "revoking",
              "revoked"
            ],
            "nullable": true,
            "example": "revoking"
          },
          "passed_auto_check": {
            "type": "boolean",
            "description": "自動チェック結果",
            "example": true
          }
        }
      },
      "ApiV1PaidHolidayResponseParams": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "application_number",
          "applicant_id",
          "target_date",
          "holiday_type",
          "issue_date",
          "status",
          "revoke_status",
          "passed_auto_check",
          "approval_flow_route_id",
          "approval_flow_route_name",
          "approval_flow_logs",
          "current_round"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "申請ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "事業所ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "application_number": {
            "type": "integer",
            "description": "申請No",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "applicant_id": {
            "type": "integer",
            "description": "申請者のユーザーID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "approver_ids": {
            "description": "承認者のユーザーID配列<br>\n次の場合、空配列になります。\n- 指定なしの申請経路を利用した、申請ステータスが承認済み以外の申請\n- 申請が差戻された",
            "type": "array",
            "items": {
              "type": "integer",
              "description": "承認者のユーザーID",
              "format": "int32",
              "minimum": 1,
              "maximum": 2147483647,
              "nullable": true,
              "example": 1
            }
          },
          "target_date": {
            "type": "string",
            "description": "対象日",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          },
          "holiday_type": {
            "type": "string",
            "description": "取得単位。（full:全休、half:半休、hour:時間休）",
            "enum": [
              "full",
              "half",
              "hour"
            ],
            "example": "half"
          },
          "start_at": {
            "type": "string",
            "description": "取得予定開始時間",
            "pattern": "^[0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
            "nullable": true,
            "example": "12:00"
          },
          "end_at": {
            "type": "string",
            "description": "取得予定終了時間",
            "pattern": "^[0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
            "nullable": true,
            "example": "23:59"
          },
          "issue_date": {
            "type": "string",
            "description": "申請日",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          },
          "comment": {
            "type": "string",
            "description": "申請理由",
            "maxLength": 255,
            "nullable": true,
            "example": "申請理由"
          },
          "status": {
            "type": "string",
            "description": "申請ステータス。（draft:下書き、in_progress:申請中、approved:承認済、feedback:差戻し）",
            "enum": [
              "draft",
              "in_progress",
              "approved",
              "feedback"
            ],
            "example": "in_progress"
          },
          "revoke_status": {
            "type": "string",
            "description": "取消申請ステータス。（null:取消申請されてない、revoking:取消中、revoked:取消済）",
            "enum": [
              "revoking",
              "revoked"
            ],
            "nullable": true,
            "example": "revoking"
          },
          "passed_auto_check": {
            "type": "boolean",
            "description": "自動チェック結果",
            "example": true
          },
          "approval_flow_route_id": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647,
            "description": "申請経路ID",
            "example": 1
          },
          "approval_flow_route_name": {
            "type": "string",
            "description": "申請経路名",
            "example": "申請経路"
          },
          "approval_flow_logs": {
            "type": "array",
            "description": "承認履歴",
            "items": {
              "$ref": "#/components/schemas/ApiV1ApprovalFlowLogsParams"
            }
          },
          "current_step_id": {
            "type": "integer",
            "description": "現在承認ステップID<br>\n申請を差戻した場合、nullになります。",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1,
            "nullable": true
          },
          "current_round": {
            "type": "integer",
            "description": "現在のround。差戻し等により申請がstepの最初からやり直しになるとroundの値が増えます。",
            "format": "int32",
            "minimum": 0,
            "maximum": 2147483647,
            "example": 1
          }
        }
      },
      "ApiV1OvertimeWorkIndexResponseParams": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "application_number",
          "applicant_id",
          "target_date",
          "start_at",
          "end_at",
          "issue_date",
          "status",
          "revoke_status",
          "passed_auto_check"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "申請ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "事業所ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "application_number": {
            "type": "integer",
            "description": "申請No",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "applicant_id": {
            "type": "integer",
            "description": "申請者のユーザーID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "approver_ids": {
            "description": "承認者のユーザーID配列<br>\n次の場合、空配列になります。\n- 指定なしの申請経路を利用した、申請ステータスが承認済み以外の申請\n- 申請が差戻された",
            "type": "array",
            "items": {
              "type": "integer",
              "description": "承認者のユーザーID",
              "format": "int32",
              "minimum": 1,
              "maximum": 2147483647,
              "nullable": true,
              "example": 1
            }
          },
          "target_date": {
            "type": "string",
            "description": "対象日",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          },
          "start_at": {
            "type": "string",
            "description": "取得予定開始時間",
            "pattern": "^[0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
            "example": "12:00"
          },
          "end_at": {
            "type": "string",
            "description": "取得予定終了時間",
            "pattern": "^[0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
            "example": "23:59"
          },
          "issue_date": {
            "type": "string",
            "description": "申請日",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          },
          "comment": {
            "type": "string",
            "description": "申請理由",
            "maxLength": 255,
            "nullable": true,
            "example": "申請理由"
          },
          "status": {
            "type": "string",
            "description": "申請ステータス。（draft:下書き、in_progress:申請中、approved:承認済、feedback:差戻し）",
            "enum": [
              "draft",
              "in_progress",
              "approved",
              "feedback"
            ],
            "example": "in_progress"
          },
          "revoke_status": {
            "type": "string",
            "description": "取消申請ステータス。（null:取消申請されてない、revoking:取消中、revoked:取消済）",
            "enum": [
              "revoking",
              "revoked"
            ],
            "nullable": true,
            "example": "revoking"
          },
          "passed_auto_check": {
            "type": "boolean",
            "description": "自動チェック結果",
            "example": true
          }
        }
      },
      "ApiV1OvertimeWorkResponseParams": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "application_number",
          "applicant_id",
          "target_date",
          "start_at",
          "end_at",
          "issue_date",
          "status",
          "revoke_status",
          "passed_auto_check",
          "approval_flow_route_id",
          "approval_flow_route_name",
          "approval_flow_logs",
          "current_round"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "申請ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "事業所ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "application_number": {
            "type": "integer",
            "description": "申請No",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "applicant_id": {
            "type": "integer",
            "description": "申請者のユーザーID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "approver_ids": {
            "description": "承認者のユーザーID配列<br>\n次の場合、空配列になります。\n- 指定なしの申請経路を利用した、申請ステータスが承認済み以外の申請\n- 申請が差戻された",
            "type": "array",
            "items": {
              "type": "integer",
              "description": "承認者のユーザーID",
              "format": "int32",
              "minimum": 1,
              "maximum": 2147483647,
              "nullable": true,
              "example": 1
            }
          },
          "target_date": {
            "type": "string",
            "description": "対象日",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          },
          "start_at": {
            "type": "string",
            "description": "取得予定開始時間",
            "pattern": "^[0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
            "example": "12:00"
          },
          "end_at": {
            "type": "string",
            "description": "取得予定終了時間",
            "pattern": "^[0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
            "example": "23:59"
          },
          "issue_date": {
            "type": "string",
            "description": "申請日",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          },
          "comment": {
            "type": "string",
            "description": "申請理由",
            "maxLength": 255,
            "nullable": true,
            "example": "申請理由"
          },
          "status": {
            "type": "string",
            "description": "申請ステータス。（draft:下書き、in_progress:申請中、approved:承認済、feedback:差戻し）",
            "enum": [
              "draft",
              "in_progress",
              "approved",
              "feedback"
            ],
            "example": "in_progress"
          },
          "revoke_status": {
            "type": "string",
            "description": "取消申請ステータス。（null:取消申請されてない、revoking:取消中、revoked:取消済）",
            "enum": [
              "revoking",
              "revoked"
            ],
            "nullable": true,
            "example": "revoking"
          },
          "passed_auto_check": {
            "type": "boolean",
            "description": "自動チェック結果",
            "example": true
          },
          "approval_flow_route_id": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647,
            "description": "申請経路ID",
            "example": 1
          },
          "approval_flow_route_name": {
            "type": "string",
            "description": "申請経路名",
            "example": "申請経路"
          },
          "approval_flow_logs": {
            "type": "array",
            "description": "承認履歴",
            "items": {
              "$ref": "#/components/schemas/ApiV1ApprovalFlowLogsParams"
            }
          },
          "current_step_id": {
            "type": "integer",
            "description": "現在承認ステップID<br>\n申請を差戻した場合、nullになります。",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1,
            "nullable": true
          },
          "current_round": {
            "type": "integer",
            "description": "現在のround。差戻し等により申請がstepの最初からやり直しになるとroundの値が増えます。",
            "format": "int32",
            "minimum": 0,
            "maximum": 2147483647,
            "example": 1
          }
        }
      },
      "ApiV1ApprovalFlowLogsParams": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "description": "申請操作をしたユーザーのユーザーID",
            "format": "int32",
            "minimum": 0,
            "maximum": 2147483647,
            "example": 1
          },
          "action": {
            "type": "string",
            "description": "申請操作。（apply:申請する、approve:承認、cancel:取り消し、feedback:差戻し）",
            "enum": [
              "apply",
              "approve",
              "cancel",
              "feedback"
            ],
            "example": "approve"
          },
          "update_at": {
            "type": "string",
            "description": "申請操作をした日付時間",
            "format": "date-time",
            "example": "2022-06-08T09:46:46.000+09:00"
          }
        }
      },
      "ApiV1EmployeeSerializer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "従業員ID",
            "format": "int32"
          },
          "company_id": {
            "type": "integer",
            "description": "事業所ID",
            "format": "int32"
          },
          "num": {
            "type": "string",
            "description": "従業員番号",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "description": "従業員名（表示名）"
          },
          "base_pension_num": {
            "type": "string",
            "description": "基礎年金番号",
            "nullable": true
          },
          "employment_insurance_reference_number": {
            "type": "string",
            "description": "被保険者番号（雇用保険）"
          },
          "birth_date": {
            "type": "string",
            "description": "生年月日",
            "format": "date"
          },
          "entry_date": {
            "type": "string",
            "description": "入社日",
            "format": "date"
          },
          "retire_date": {
            "type": "string",
            "description": "退職日",
            "format": "date",
            "nullable": true
          },
          "user_id": {
            "type": "integer",
            "description": "ユーザーID(従業員詳細未設定の場合、nullになります。)",
            "format": "int32",
            "nullable": true
          },
          "profile_rule": {
            "$ref": "#/components/schemas/ApiV1EmployeesProfileRuleSerializer"
          },
          "health_insurance_rule": {
            "$ref": "#/components/schemas/ApiV1EmployeesHealthInsuranceRuleSerializer"
          },
          "welfare_pension_insurance_rule": {
            "$ref": "#/components/schemas/ApiV1EmployeesWelfarePensionInsuranceRuleSerializer"
          },
          "dependent_rules": {
            "type": "array",
            "description": "家族情報",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeesDependentRuleSerializer"
            }
          },
          "bank_account_rule": {
            "$ref": "#/components/schemas/ApiV1EmployeesBankAccountRuleSerializer"
          },
          "basic_pay_rule": {
            "$ref": "#/components/schemas/ApiV1EmployeesBasicPayRuleSerializer"
          },
          "payroll_calculation": {
            "type": "boolean",
            "description": "給与計算対象従業員の場合trueを返します",
            "example": true
          },
          "company_reference_date_rule_name": {
            "type": "string",
            "description": "締め日支払日グループ名(給与計算対象外従業員の場合、nullを返します)",
            "example": "当月締め翌月払い",
            "nullable": true
          }
        }
      },
      "ApiV1UsersCompanySerializer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "事業所ID",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "事業所名"
          },
          "role": {
            "type": "string",
            "description": "事業所におけるロール。\n- `company_admin`: 管理者\n- `self_only`: 一般\n- `clerk`: 事務担当者\n\n[各権限でできることは各アカウントの権限についてのヘルプページを参照してください。](https://support.freee.co.jp/hc/ja/articles/204087410-%E6%93%8D%E4%BD%9C%E6%A8%A9%E9%99%90%E3%82%92%E7%AE%A1%E7%90%86%E3%81%99%E3%82%8B#3)",
            "enum": [
              "company_admin",
              "self_only",
              "clerk"
            ]
          },
          "external_cid": {
            "type": "string",
            "description": "事業所番号(半角数字10桁)"
          },
          "employee_id": {
            "type": "integer",
            "description": "事業所に所属する従業員としての従業員ID、従業員情報が未登録の場合はnullになります。",
            "format": "int32",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "description": "事業所に所属する従業員の表示名",
            "nullable": true
          }
        }
      },
      "ApiV1UsersMeSerializer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ユーザーID",
            "format": "int32"
          },
          "companies": {
            "type": "array",
            "description": "ユーザーが属する事業所の一覧",
            "items": {
              "$ref": "#/components/schemas/ApiV1UsersCompanySerializer"
            }
          }
        }
      },
      "ApiV1EmployeeGroupMembershipsIndexSerializer": {
        "type": "object",
        "properties": {
          "employee_group_memberships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeeGroupMembershipSerializer"
            }
          },
          "total_count": {
            "type": "integer",
            "description": "合計件数",
            "format": "int32",
            "example": 1
          }
        }
      },
      "ApiV1BonusesEmployeePayrollStatementsIndexSerializer": {
        "type": "object",
        "properties": {
          "employee_payroll_statements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiV1BonusesEmployeePayrollStatementSerializer"
            }
          },
          "total_count": {
            "type": "integer",
            "description": "合計件数",
            "format": "int32"
          }
        }
      },
      "ApiV1BonusesEmployeePayrollStatementSerializer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "賞与明細ID",
            "format": "int32"
          },
          "company_id": {
            "type": "integer",
            "description": "事業所ID",
            "format": "int32"
          },
          "employee_id": {
            "type": "integer",
            "description": "従業員ID",
            "format": "int32"
          },
          "employee_name": {
            "type": "string",
            "description": "従業員の姓名"
          },
          "employee_display_name": {
            "type": "string",
            "description": "従業員の表示名"
          },
          "employee_num": {
            "type": "string",
            "description": "従業員番号",
            "nullable": true
          },
          "closing_date": {
            "type": "string",
            "description": "確定日",
            "format": "date"
          },
          "pay_date": {
            "type": "string",
            "description": "支払日",
            "format": "date"
          },
          "fixed": {
            "type": "boolean",
            "description": "賞与明細が確定されているかどうか"
          },
          "calc_status": {
            "type": "string",
            "description": "計算状況ステータス calculating: 計算中, calculated: 計算完了, error: エラー"
          },
          "calculated_at": {
            "type": "string",
            "description": "計算状況ステータスの更新日",
            "format": "date-time",
            "nullable": true
          },
          "bonus_amount": {
            "type": "string",
            "description": "賞与額",
            "nullable": true
          },
          "total_allowance_amount": {
            "type": "string",
            "description": "手当額合計",
            "nullable": true
          },
          "total_deduction_amount": {
            "type": "string",
            "description": "控除額合計",
            "nullable": true
          },
          "net_payment_amount": {
            "type": "string",
            "description": "差引支給額(手取り額)",
            "nullable": true
          },
          "gross_payment_amount": {
            "type": "string",
            "description": "総支給額(額面)",
            "nullable": true
          },
          "total_taxable_payment_amount": {
            "type": "string",
            "description": "課税対象支給額",
            "nullable": true
          },
          "allowances": {
            "type": "array",
            "description": "手当",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeePayrollStatementsEmployeePayrollStatementItemSerializer"
            }
          },
          "deductions": {
            "type": "array",
            "description": "控除項目（所得税、社会保険料等）",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeePayrollStatementsEmployeePayrollStatementItemSerializer"
            }
          },
          "remark": {
            "type": "string",
            "description": "備考"
          }
        }
      },
      "ApiV1CompaniesEmployeeSerializer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "従業員ID",
            "format": "int32"
          },
          "num": {
            "type": "string",
            "description": "従業員番号(従業員詳細未設定の場合、nullになります。)",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "description": "従業員名（表示名）"
          },
          "entry_date": {
            "type": "string",
            "description": "入社日",
            "format": "date"
          },
          "retire_date": {
            "type": "string",
            "description": "退職日",
            "format": "date",
            "nullable": true
          },
          "user_id": {
            "type": "integer",
            "format": "int32",
            "description": "ユーザーID(従業員詳細未設定の場合、nullになります。)",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "ログイン用メールアドレス(従業員詳細未設定の場合、nullになります。)",
            "nullable": true
          },
          "payroll_calculation": {
            "type": "boolean",
            "description": "給与計算対象従業員の場合trueを返します",
            "example": true
          },
          "closing_day": {
            "type": "integer",
            "description": "締め日(給与計算対象外従業員の場合、nullを返します)",
            "example": 31,
            "nullable": true
          },
          "pay_day": {
            "type": "integer",
            "description": "支払日(給与計算対象外従業員の場合、nullを返します)",
            "example": 15,
            "nullable": true
          },
          "month_of_pay_day": {
            "type": "string",
            "description": "翌月払いか、当月払いか(給与計算対象外従業員の場合、nullを返します)",
            "example": "next_month",
            "nullable": true
          }
        }
      },
      "ApiV1EmployeesProfileRuleUpdateRequestSerializer": {
        "type": "object",
        "required": [
          "last_name",
          "first_name",
          "last_name_kana",
          "first_name_kana"
        ],
        "properties": {
          "last_name": {
            "type": "string",
            "description": "姓 null不可",
            "maxLength": 255,
            "example": "山田"
          },
          "first_name": {
            "type": "string",
            "description": "名 null不可",
            "maxLength": 255,
            "example": "太郎"
          },
          "last_name_kana": {
            "type": "string",
            "description": "姓カナ",
            "maxLength": 255,
            "example": "ヤマダ"
          },
          "first_name_kana": {
            "type": "string",
            "description": "名カナ",
            "maxLength": 255,
            "example": "タロウ"
          },
          "zipcode1": {
            "type": "string",
            "description": "住民票住所の郵便番号1",
            "maxLength": 3,
            "example": "000"
          },
          "zipcode2": {
            "type": "string",
            "description": "住民票住所の郵便番号2",
            "maxLength": 4,
            "example": "0000"
          },
          "prefecture_code": {
            "type": "integer",
            "minimum": -1,
            "maximum": 46,
            "description": "住民票住所の都道府県コード（-1: 設定しない、0: 北海道、1:青森、2:岩手、3:宮城、4:秋田、5:山形、6:福島、7:茨城、8:栃木、9:群馬、10:埼玉、11:千葉、12:東京、13:神奈川、14:新潟、15:富山、16:石川、17:福井、18:山梨、19:長野、20:岐阜、21:静岡、22:愛知、23:三重、24:滋賀、25:京都、26:大阪、27:兵庫、28:奈良、29:和歌山、30:鳥取、31:島根、32:岡山、33:広島、34:山口、35:徳島、36:香川、37:愛媛、38:高知、39:福岡、40:佐賀、41:長崎、42:熊本、43:大分、44:宮崎、45:鹿児島、46:沖縄)",
            "example": 4
          },
          "address": {
            "type": "string",
            "description": "住民票住所の市区町村以降の住所",
            "maxLength": 255
          },
          "address_kana": {
            "type": "string",
            "description": "住民票住所の市区町村以降の住所カナ",
            "maxLength": 255
          },
          "phone1": {
            "type": "string",
            "description": "電話番号1（先頭番号、例:03-1111-222x の03部分）",
            "maxLength": 5,
            "example": "000"
          },
          "phone2": {
            "type": "string",
            "description": "電話番号2（中間番号、例:03-1111-222x の1111部分）",
            "maxLength": 4,
            "example": "0000"
          },
          "phone3": {
            "type": "string",
            "description": "電話番号3（末尾番号、例:03-1111-222x の222x部分）",
            "maxLength": 4,
            "example": "0000"
          },
          "residential_zipcode1": {
            "type": "string",
            "description": "現住所の郵便番号１",
            "maxLength": 3,
            "example": "000"
          },
          "residential_zipcode2": {
            "type": "string",
            "description": "現住所の郵便番号２",
            "maxLength": 4,
            "example": "0000"
          },
          "residential_prefecture_code": {
            "type": "integer",
            "minimum": -1,
            "maximum": 46,
            "description": "現住所の都道府県コード（-1: 設定しない、0: 北海道、1:青森、2:岩手、3:宮城、4:秋田、5:山形、6:福島、7:茨城、8:栃木、9:群馬、10:埼玉、11:千葉、12:東京、13:神奈川、14:新潟、15:富山、16:石川、17:福井、18:山梨、19:長野、20:岐阜、21:静岡、22:愛知、23:三重、24:滋賀、25:京都、26:大阪、27:兵庫、28:奈良、29:和歌山、30:鳥取、31:島根、32:岡山、33:広島、34:山口、35:徳島、36:香川、37:愛媛、38:高知、39:福岡、40:佐賀、41:長崎、42:熊本、43:大分、44:宮崎、45:鹿児島、46:沖縄)",
            "example": 4
          },
          "residential_address": {
            "type": "string",
            "description": "現住所の住所",
            "maxLength": 255
          },
          "residential_address_kana": {
            "type": "string",
            "description": "現住所の住所カナ",
            "maxLength": 255
          },
          "employment_type": {
            "type": "string",
            "description": "雇用形態 board-member: 役員, (空文字列): 役員以外",
            "enum": [
              "board-member",
              ""
            ]
          },
          "title": {
            "type": "string",
            "description": "肩書",
            "maxLength": 255
          },
          "gender": {
            "type": "string",
            "description": "性別　unselected: 未選択, male: 男性, female: 女性（デフォルト: unselected: 未選択）",
            "enum": [
              "unselected",
              "male",
              "female"
            ],
            "example": "male"
          },
          "married": {
            "type": "boolean",
            "description": "null不可 配偶者の有無"
          },
          "is_working_student": {
            "type": "boolean",
            "description": "null不可 勤労学生かどうか"
          },
          "widow_type": {
            "type": "string",
            "description": "寡夫／寡婦かどうか null不可 na: 空白, widower: 寡夫, widow: 寡婦, special_widow: 特別寡婦, one_parent: ひとり親",
            "enum": [
              "na",
              "widower",
              "widow",
              "special_widow",
              "one_parent"
            ]
          },
          "disability_type": {
            "type": "string",
            "description": "障害者かどうか null不可 na: 空白, general: 障害者, heavy: 特別障害者",
            "enum": [
              "na",
              "general",
              "heavy"
            ]
          },
          "email": {
            "type": "string",
            "description": "メールアドレス",
            "nullable": true,
            "maxLength": 255,
            "example": "test@example.com"
          },
          "householder_name": {
            "type": "string",
            "description": "世帯主の名前<br>世帯主の続柄に myself:本人 を指定している場合は、世帯主の名前は自動で従業員名で更新するため指定できません。",
            "maxLength": 255,
            "example": "山田 吾郎"
          },
          "householder": {
            "type": "string",
            "description": "世帯主の続柄 myself:本人, husband:夫, wife:妻, father:父, mother:母, child:子供, senior_brother:兄, junior_brother:弟, senior_sister:姉, junior_sister:妹, grandchild:孫, grandfather:祖父, grandmother:祖母, father_in_law:義父, mother_in_law:義母, grandfather_in_law:義祖父, grandmother_in_law:義祖母, other:その他",
            "enum": [
              "myself",
              "husband",
              "wife",
              "father",
              "mother",
              "child",
              "senior_brother",
              "junior_brother",
              "senior_sister",
              "junior_sister",
              "grandchild",
              "grandfather",
              "grandmother",
              "father_in_law",
              "mother_in_law",
              "grandfather_in_law",
              "grandmother_in_law",
              "other"
            ],
            "example": "father"
          }
        }
      },
      "ApiV1EmployeesEmployeeMultiHourlyWageWorkRecordSummarySerializer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "時給名"
          },
          "total_normal_time_mins": {
            "type": "integer",
            "description": "所定内労働時間（分）",
            "format": "int32"
          }
        }
      },
      "ApiV1EmployeesWorkRecordTimeRangeSerializer": {
        "type": "object",
        "required": [
          "clock_in_at",
          "clock_out_at"
        ],
        "properties": {
          "clock_in_at": {
            "type": "string",
            "description": "開始時刻",
            "format": "date-time",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
            "example": "2018-07-31 08:00:00"
          },
          "clock_out_at": {
            "type": "string",
            "description": "終了時刻",
            "format": "date-time",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
            "example": "2018-07-31 08:00:00"
          }
        }
      },
      "ApiV1EmployeesWorkRecordTimeRangeResponseSerializer": {
        "type": "object",
        "properties": {
          "clock_in_at": {
            "type": "string",
            "description": "開始時刻",
            "format": "date-time"
          },
          "clock_out_at": {
            "type": "string",
            "description": "終了時刻",
            "format": "date-time"
          }
        }
      },
      "ApiV1EmployeesWelfarePensionInsuranceRuleSerializer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "child_allowance_contribution_bonus_calc_type": {
            "type": "string",
            "enum": [
              "auto",
              "manual"
            ],
            "description": "賞与計算時の子ども・子育て拠出金の計算方法",
            "example": "manual"
          },
          "child_allowance_contribution_salary_calc_type": {
            "type": "string",
            "enum": [
              "auto",
              "manual"
            ],
            "description": "給与計算時の子ども・子育て拠出金の計算方法",
            "example": "manual"
          },
          "company_id": {
            "type": "integer",
            "description": "事業所ID",
            "format": "int32"
          },
          "employee_id": {
            "type": "integer",
            "description": "従業員ID",
            "format": "int32"
          },
          "entried": {
            "type": "boolean",
            "description": "厚生年金保険に加入しているかどうか"
          },
          "manual_child_allowance_contribution_amount_bonus": {
            "type": "number",
            "format": "float",
            "description": "賞与計算時の子ども・子育て拠出金の直接指定金額",
            "nullable": true,
            "example": 111.0001,
            "minimum": -999999999.9999,
            "maximum": 999999999.9999
          },
          "manual_child_allowance_contribution_amount_salary": {
            "type": "number",
            "format": "float",
            "description": "給与計算時の子ども・子育て拠出金の直接指定金額",
            "nullable": true,
            "example": 222.0001,
            "minimum": -999999999.9999,
            "maximum": 999999999.9999
          },
          "manual_welfare_pension_insurance_amount_of_company_bonus": {
            "type": "number",
            "format": "float",
            "description": "賞与計算時の厚生年金保険料の直接指定金額（会社負担分）",
            "nullable": true,
            "example": 333.0001,
            "minimum": -999999999.9999,
            "maximum": 999999999.9999
          },
          "manual_welfare_pension_insurance_amount_of_company_salary": {
            "type": "number",
            "format": "float",
            "description": "給与計算時の厚生年金保険料の直接指定金額（会社負担分）",
            "nullable": true,
            "example": 444.0001,
            "minimum": -999999999.9999,
            "maximum": 999999999.9999
          },
          "manual_welfare_pension_insurance_amount_of_employee_bonus": {
            "type": "integer",
            "format": "int32",
            "description": "賞与計算時の厚生年金保険料の直接指定金額（従業員負担分）",
            "nullable": true,
            "example": 555,
            "minimum": -999999999,
            "maximum": 999999999
          },
          "manual_welfare_pension_insurance_amount_of_employee_salary": {
            "type": "integer",
            "format": "int32",
            "description": "給与計算時の厚生年金保険料の直接指定金額（従業員負担分）",
            "nullable": true,
            "example": 666,
            "minimum": -999999999,
            "maximum": 999999999
          },
          "reference_num": {
            "type": "string",
            "description": "厚生年金保険の被保険者整理番号",
            "nullable": true
          },
          "standard_monthly_remuneration": {
            "type": "integer",
            "description": "標準報酬月額",
            "format": "int32"
          },
          "welfare_pension_insurance_bonus_calc_type": {
            "type": "string",
            "enum": [
              "auto",
              "manual"
            ],
            "description": "賞与計算時の厚生年金保険料の計算方法",
            "example": "manual"
          },
          "welfare_pension_insurance_salary_calc_type": {
            "type": "string",
            "enum": [
              "auto",
              "manual"
            ],
            "description": "給与計算時の厚生年金保険料の計算方法",
            "example": "manual"
          }
        },
        "nullable": true
      },
      "ApiV1EmployeesHealthInsuranceRuleUpdateRequestSerializer": {
        "type": "object",
        "required": [
          "standard_monthly_remuneration"
        ],
        "properties": {
          "entried": {
            "type": "boolean",
            "description": "健康保険に加入しているかどうか null不可"
          },
          "health_insurance_salary_calc_type": {
            "type": "string",
            "enum": [
              "auto",
              "manual"
            ],
            "description": "給与計算時の健康保険料の計算方法",
            "example": "manual"
          },
          "health_insurance_bonus_calc_type": {
            "type": "string",
            "enum": [
              "auto",
              "manual"
            ],
            "description": "賞与計算時の健康保険料の計算方法",
            "example": "manual"
          },
          "manual_health_insurance_amount_of_employee_salary": {
            "type": "integer",
            "format": "int32",
            "description": "給与計算時の健康保険料の直接指定金額（従業員負担分）",
            "example": 8888,
            "nullable": true,
            "minimum": -999999999,
            "maximum": 999999999
          },
          "manual_health_insurance_amount_of_employee_bonus": {
            "type": "integer",
            "format": "int32",
            "description": "賞与計算時の健康保険料の直接指定金額（従業員負担分）",
            "example": 7777,
            "nullable": true,
            "minimum": -999999999,
            "maximum": 999999999
          },
          "manual_health_insurance_amount_of_company_salary": {
            "type": "number",
            "format": "float",
            "description": "給与計算時の健康保険料の直接指定金額（会社負担分）",
            "example": 6666.0001,
            "nullable": true,
            "minimum": -999999999.9999,
            "maximum": 999999999.9999
          },
          "manual_health_insurance_amount_of_company_bonus": {
            "type": "number",
            "format": "float",
            "description": "賞与計算時の健康保険料の直接指定金額（会社負担分）",
            "example": 5555.0001,
            "nullable": true,
            "minimum": -999999999.9999,
            "maximum": 999999999.9999
          },
          "care_insurance_salary_calc_type": {
            "type": "string",
            "enum": [
              "auto",
              "manual"
            ],
            "description": "給与計算時の介護保険料の計算方法",
            "example": "manual"
          },
          "care_insurance_bonus_calc_type": {
            "type": "string",
            "enum": [
              "auto",
              "manual"
            ],
            "description": "賞与計算時の介護保険料の計算方法",
            "example": "manual"
          },
          "manual_care_insurance_amount_of_employee_salary": {
            "type": "integer",
            "format": "int32",
            "description": "給与計算時の介護保険料の直接指定金額（従業員負担分）",
            "example": 4444,
            "nullable": true,
            "minimum": -999999999,
            "maximum": 999999999
          },
          "manual_care_insurance_amount_of_employee_bonus": {
            "type": "integer",
            "format": "int32",
            "description": "賞与計算時の介護保険料の直接指定金額（従業員負担分）",
            "example": 3333,
            "nullable": true,
            "minimum": -999999999,
            "maximum": 999999999
          },
          "manual_care_insurance_amount_of_company_salary": {
            "type": "number",
            "format": "float",
            "description": "給与計算時の介護保険料の直接指定金額（会社負担分）",
            "example": 2222.0001,
            "nullable": true,
            "minimum": -999999999.9999,
            "maximum": 999999999.9999
          },
          "manual_care_insurance_amount_of_company_bonus": {
            "type": "number",
            "format": "float",
            "description": "賞与計算時の介護保険料の直接指定金額（会社負担分）",
            "example": 1111.0001,
            "nullable": true,
            "minimum": -999999999.9999,
            "maximum": 999999999.9999
          },
          "reference_num": {
            "type": "string",
            "description": "健康保険の被保険者整理番号",
            "maxLength": 255,
            "example": "0000000000"
          },
          "standard_monthly_remuneration": {
            "type": "integer",
            "description": "標準報酬月額 null不可",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 58000
          }
        }
      },
      "ApiV1EmployeesProfileRuleSerializer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "company_id": {
            "type": "integer",
            "description": "事業所ID",
            "format": "int32"
          },
          "employee_id": {
            "type": "integer",
            "description": "従業員ID",
            "format": "int32"
          },
          "last_name": {
            "type": "string",
            "description": "姓"
          },
          "first_name": {
            "type": "string",
            "description": "名"
          },
          "last_name_kana": {
            "type": "string",
            "description": "姓カナ"
          },
          "first_name_kana": {
            "type": "string",
            "description": "名カナ"
          },
          "zipcode1": {
            "type": "string",
            "description": "住民票住所の郵便番号1",
            "nullable": true,
            "example": "000"
          },
          "zipcode2": {
            "type": "string",
            "description": "住民票住所の郵便番号2",
            "nullable": true,
            "example": "0000"
          },
          "prefecture_code": {
            "type": "integer",
            "nullable": true,
            "minimum": -1,
            "maximum": 46,
            "description": "住民票住所の都道府県コード（-1: 設定しない、0: 北海道、1:青森、2:岩手、3:宮城、4:秋田、5:山形、6:福島、7:茨城、8:栃木、9:群馬、10:埼玉、11:千葉、12:東京、13:神奈川、14:新潟、15:富山、16:石川、17:福井、18:山梨、19:長野、20:岐阜、21:静岡、22:愛知、23:三重、24:滋賀、25:京都、26:大阪、27:兵庫、28:奈良、29:和歌山、30:鳥取、31:島根、32:岡山、33:広島、34:山口、35:徳島、36:香川、37:愛媛、38:高知、39:福岡、40:佐賀、41:長崎、42:熊本、43:大分、44:宮崎、45:鹿児島、46:沖縄)",
            "example": 4
          },
          "address": {
            "type": "string",
            "description": "住民票住所の市区町村以降の住所",
            "nullable": true
          },
          "address_kana": {
            "type": "string",
            "description": "住民票住所の市区町村以降の住所カナ"
          },
          "phone1": {
            "type": "string",
            "description": "電話番号1（先頭番号、例:03-1111-222x の03部分）",
            "nullable": true,
            "example": "000"
          },
          "phone2": {
            "type": "string",
            "description": "電話番号2（中間番号、例:03-1111-222x の1111部分）",
            "nullable": true,
            "example": "0000"
          },
          "phone3": {
            "type": "string",
            "description": "電話番号3（末尾番号、例:03-1111-222x の222x部分）",
            "nullable": true,
            "example": "0000"
          },
          "residential_zipcode1": {
            "type": "string",
            "description": "現住所の郵便番号１",
            "nullable": true,
            "example": "000"
          },
          "residential_zipcode2": {
            "type": "string",
            "description": "現住所の郵便番号２",
            "example": "0000",
            "nullable": true
          },
          "residential_prefecture_code": {
            "type": "integer",
            "nullable": true,
            "minimum": -1,
            "maximum": 46,
            "description": "現住所の都道府県コード（-1: 設定しない、0: 北海道、1:青森、2:岩手、3:宮城、4:秋田、5:山形、6:福島、7:茨城、8:栃木、9:群馬、10:埼玉、11:千葉、12:東京、13:神奈川、14:新潟、15:富山、16:石川、17:福井、18:山梨、19:長野、20:岐阜、21:静岡、22:愛知、23:三重、24:滋賀、25:京都、26:大阪、27:兵庫、28:奈良、29:和歌山、30:鳥取、31:島根、32:岡山、33:広島、34:山口、35:徳島、36:香川、37:愛媛、38:高知、39:福岡、40:佐賀、41:長崎、42:熊本、43:大分、44:宮崎、45:鹿児島、46:沖縄)",
            "example": 4
          },
          "residential_address": {
            "type": "string",
            "description": "現住所の住所",
            "nullable": true
          },
          "residential_address_kana": {
            "type": "string",
            "description": "現住所の住所カナ",
            "nullable": true
          },
          "employment_type": {
            "type": "string",
            "description": "雇用形態 board-member: 役員, (空文字列): 役員以外",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "肩書",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "description": "性別　unselected: 未選択, male: 男性, female: 女性",
            "enum": [
              "unselected",
              "male",
              "female"
            ],
            "example": "male"
          },
          "married": {
            "type": "boolean",
            "description": "配偶者の有無"
          },
          "is_working_student": {
            "type": "boolean",
            "description": "勤労学生かどうか"
          },
          "widow_type": {
            "type": "string",
            "description": "寡夫／寡婦かどうか na: 空白, widower: 寡夫, widow: 寡婦, special_widow: 特別寡婦, one_parent: ひとり親"
          },
          "disability_type": {
            "type": "string",
            "description": "障害者かどうか na: 空白, general: 障害者, heavy: 特別障害者"
          },
          "email": {
            "type": "string",
            "description": "メールアドレス",
            "nullable": true,
            "maxLength": 255,
            "example": "test@example.com"
          },
          "householder_name": {
            "type": "string",
            "description": "世帯主の名前 世帯主の続柄がmyselfの場合は空白",
            "maxLength": 255,
            "example": "山田 吾郎"
          },
          "householder": {
            "type": "string",
            "description": "世帯主の続柄 myself:本人, husband:夫, wife:妻, father:父, mother:母, child:子供, senior_brother:兄, junior_brother:弟, senior_sister:姉, junior_sister:妹, grandchild:孫, grandfather:祖父, grandmother:祖母, father_in_law:義父, mother_in_law:義母, grandfather_in_law:義祖父, grandmother_in_law:義祖母, other:その他",
            "nullable": true,
            "enum": [
              "myself",
              "husband",
              "wife",
              "father",
              "mother",
              "child",
              "senior_brother",
              "junior_brother",
              "senior_sister",
              "junior_sister",
              "grandchild",
              "grandfather",
              "grandmother",
              "father_in_law",
              "mother_in_law",
              "grandfather_in_law",
              "grandmother_in_law",
              "other"
            ],
            "example": "father"
          }
        },
        "nullable": true
      },
      "ApiV1EmployeesDependentRuleUpdateRequestSerializer": {
        "type": "object",
        "required": [
          "last_name",
          "first_name",
          "gender",
          "relationship",
          "birth_date",
          "residence_type",
          "income",
          "annual_revenue",
          "disability_type",
          "social_insurance_and_tax_dependent"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "家族情報ルールID（idがない場合は新規作成になる)",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "last_name": {
            "type": "string",
            "description": "姓 null不可",
            "maxLength": 255,
            "example": "山田"
          },
          "first_name": {
            "type": "string",
            "description": "名 null不可",
            "maxLength": 255,
            "example": "花子"
          },
          "last_name_kana": {
            "type": "string",
            "description": "姓カナ",
            "maxLength": 255,
            "example": "ヤマダ"
          },
          "first_name_kana": {
            "type": "string",
            "description": "名カナ",
            "maxLength": 255,
            "example": "ハナコ"
          },
          "gender": {
            "type": "string",
            "description": "性別　unselected: 未選択, male: 男性, female: 女性（デフォルト: unselected: 未選択）",
            "enum": [
              "unselected",
              "male",
              "female"
            ],
            "example": "male"
          },
          "relationship": {
            "type": "string",
            "description": "続柄 null不可 spouse: 配偶者, father: 父, mother: 母, child: 子, senior_brother: 兄, junior_brother: 弟, senior_sister: 姉, junior_sister: 妹, grandchild: 孫, grandfather: 祖父, grandmother: 祖母, father_in_law: 義父, mother_in_law: 義母, grandfather_in_law: 義祖父, grandmother_in_law: 義祖母, other: その他, great_grandfather: 曽祖父, great_grandmother: 曽祖母, spouses_child: 配偶者の連れ子",
            "enum": [
              "spouse",
              "father",
              "mother",
              "child",
              "senior_brother",
              "junior_brother",
              "senior_sister",
              "junior_sister",
              "grandchild",
              "grandfather",
              "grandmother",
              "father_in_law",
              "mother_in_law",
              "grandfather_in_law",
              "grandmother_in_law",
              "other",
              "great_grandfather",
              "great_grandmother",
              "spouses_child"
            ]
          },
          "birth_date": {
            "type": "string",
            "description": "生年月日 null不可",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "maxLength": 10,
            "example": "1999-01-01"
          },
          "residence_type": {
            "type": "string",
            "description": "同居・別居 null不可 live_in: 同居, resident: 別居(国内), non_resident: 別居(国外)",
            "enum": [
              "live_in",
              "resident",
              "non_resident"
            ]
          },
          "zipcode1": {
            "type": "string",
            "description": "住民票住所の郵便番号1",
            "maxLength": 3,
            "example": "000"
          },
          "zipcode2": {
            "type": "string",
            "description": "住民票住所の郵便番号2",
            "maxLength": 4,
            "example": "0000"
          },
          "prefecture_code": {
            "type": "integer",
            "minimum": -1,
            "maximum": 46,
            "description": "住民票住所の都道府県コード（-1: 設定しない、0: 北海道、1:青森、2:岩手、3:宮城、4:秋田、5:山形、6:福島、7:茨城、8:栃木、9:群馬、10:埼玉、11:千葉、12:東京、13:神奈川、14:新潟、15:富山、16:石川、17:福井、18:山梨、19:長野、20:岐阜、21:静岡、22:愛知、23:三重、24:滋賀、25:京都、26:大阪、27:兵庫、28:奈良、29:和歌山、30:鳥取、31:島根、32:岡山、33:広島、34:山口、35:徳島、36:香川、37:愛媛、38:高知、39:福岡、40:佐賀、41:長崎、42:熊本、43:大分、44:宮崎、45:鹿児島、46:沖縄)",
            "example": 4
          },
          "address": {
            "type": "string",
            "description": "住民票住所の市区町村以降の住所",
            "maxLength": 255
          },
          "address_kana": {
            "type": "string",
            "description": "住民票住所の市区町村以降の住所カナ",
            "maxLength": 255
          },
          "base_pension_num": {
            "type": "string",
            "description": "基礎年金番号",
            "maxLength": 10,
            "example": "1234567890"
          },
          "income": {
            "type": "integer",
            "description": "年間所得 null不可",
            "format": "int32",
            "minimum": 0,
            "maximum": 999999999
          },
          "annual_revenue": {
            "type": "integer",
            "description": "年間収入 null不可",
            "format": "int32",
            "minimum": 0,
            "maximum": 999999999
          },
          "disability_type": {
            "type": "string",
            "description": "障害に該当するか null不可 na: 障害なし, general: 一般の障害者, heavy: 特別障害者",
            "enum": [
              "na",
              "general",
              "heavy"
            ]
          },
          "occupation": {
            "type": "string",
            "description": "職業",
            "maxLength": 255
          },
          "annual_remittance_amount": {
            "type": "integer",
            "description": "一年間の送金額",
            "format": "int32",
            "minimum": 0,
            "maximum": 999999999
          },
          "employment_insurance_receive_status": {
            "type": "string",
            "nullable": true,
            "enum": [
              "unselected",
              "receiving_employment_insurance",
              "not_receiving_employment_insurance",
              "pending_employment_insurance"
            ],
            "description": "雇用保険受給の有無\n- unselected 未選択\n- receiving_employment_insurance 雇用保険受給有り\n- not_receiving_employment_insurance 雇用保険受給無し\n- pending_employment_insurance 申請中",
            "format": "string",
            "example": "receiving_employment_insurance"
          },
          "employment_insurance_receives_from": {
            "type": "string",
            "nullable": true,
            "description": "雇用保険受給開始年月日 employment_insurance_receive_statusが未選択、無しの場合は指定できません。",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "example": "2021-04-01"
          },
          "phone_type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "unselected",
              "home",
              "office",
              "mobile",
              "other"
            ],
            "description": "電話番号の種別\n- unselected 未選択\n- home 自宅\n- office 勤務先\n- mobile 携帯\n- other その他"
          },
          "phone1": {
            "type": "string",
            "nullable": true,
            "description": "電話番号1（先頭番号、例:03-1111-222x の03部分）",
            "maxLength": 4,
            "example": "000"
          },
          "phone2": {
            "type": "string",
            "nullable": true,
            "description": "電話番号2（中間番号、例:03-1111-222x の1111部分）",
            "maxLength": 4,
            "example": "0000"
          },
          "phone3": {
            "type": "string",
            "nullable": true,
            "description": "電話番号3（末尾番号、例:03-1111-222x の222x部分）",
            "maxLength": 4,
            "example": "0000"
          },
          "destroy": {
            "type": "boolean",
            "description": "家族情報を削除するか",
            "example": false
          },
          "social_insurance_and_tax_dependent": {
            "type": "string",
            "description": "扶養状況 social_insurance_and_tax: 所得税・住民税と社会保険, tax_only: 所得税・住民税のみ, social_insurance_only: 社会保険のみ, not_dependent: 扶養していない",
            "enum": [
              "social_insurance_and_tax",
              "tax_only",
              "social_insurance_only",
              "not_dependent"
            ]
          },
          "social_insurance_dependent_acquisition_date": {
            "type": "string",
            "nullable": true,
            "description": "社会保険の扶養加入日",
            "format": "date"
          },
          "social_insurance_dependent_acquisition_reason": {
            "type": "string",
            "enum": [
              "",
              "start_working",
              "marriage",
              "turnover",
              "decrease_in_income",
              "other",
              "birth",
              "live_in"
            ],
            "description": "社会保険の扶養加入理由 配偶者の場合 \"\": 未選択, start_working: 配偶者の就職, marriage: 婚姻, turnover: 離職, decrease_in_income: 収入減少, other: その他 配偶者以外の場合 \"\": 未選択, birth: 出生, turnover: 離職, decrease_in_income: 収入減, live_in: 同居, other: その他"
          },
          "social_insurance_other_dependent_acquisition_reason": {
            "type": "string",
            "nullable": true,
            "description": "社会保険のその他の扶養加入理由",
            "maxLength": 255
          },
          "social_insurance_dependent_disqualification_date": {
            "type": "string",
            "nullable": true,
            "description": "社会保険の扶養喪失日",
            "format": "date"
          },
          "social_insurance_dependent_disqualification_reason": {
            "type": "string",
            "enum": [
              "",
              "death",
              "divorce",
              "start_working_or_increase_in_income",
              "reach_75_years_old",
              "disability",
              "other",
              "start_working",
              "increase_in_income"
            ],
            "description": "社会保険の扶養喪失理由 配偶者の場合 \"\": 未選択, death: 死亡, divorce: 離婚, start_working_or_increase_in_income: 就職・収入増加, reach_75_years_old: 歳到達, disability: 障害認定, other: その他 配偶者以外の場合 \"\": 未選択, death: 死亡, start_working: 就職, increase_in_income: 収入増加, reach_75_years_old: ７５歳到達, disability: 障害認定, other: その他"
          },
          "social_insurance_other_dependent_disqualification_reason": {
            "type": "string",
            "nullable": true,
            "description": "社会保険のその他の扶養喪失理由",
            "maxLength": 255
          },
          "tax_dependent_acquisition_date": {
            "type": "string",
            "nullable": true,
            "description": "税扶養の加入日",
            "format": "date"
          },
          "tax_dependent_acquisition_reason": {
            "type": "string",
            "enum": [
              "",
              "start_working",
              "marriage",
              "turnover",
              "decrease_in_income",
              "other",
              "birth",
              "live_in"
            ],
            "description": "税扶養の加入理由 配偶者の場合 \"\": 未選択, start_working: 配偶者の就職, marriage: 婚姻, turnover: 離職, decrease_in_income: 収入減少, other: その他 配偶者以外の場合 \"\": birth: 出生, turnover: 離職, decrease_in_income: 収入減, live_in: 同居, other: その他"
          },
          "tax_other_dependent_acquisition_reason": {
            "type": "string",
            "nullable": true,
            "description": "税扶養のその他の加入理由",
            "maxLength": 255
          },
          "tax_dependent_disqualification_date": {
            "type": "string",
            "nullable": true,
            "description": "税扶養の喪失日",
            "format": "date"
          },
          "tax_dependent_disqualification_reason": {
            "type": "string",
            "enum": [
              "",
              "death",
              "divorce",
              "start_working_or_increase_in_income",
              "reach_75_years_old",
              "disability",
              "other",
              "start_working",
              "increase_in_income"
            ],
            "description": "税扶養の喪失理由 配偶者の場合 \"\": 未選択, death: 死亡, divorce: 離婚, start_working_or_increase_in_income: 就職・収入増加, reach_75_years_old: 歳到達, disability: 障害認定, other: その他 配偶者以外の場合 \"\": 未選択, death: 死亡, start_working: 就職, increase_in_income: 収入増加, reach_75_years_old: ７５歳到達, disability: 障害認定, other: その他"
          },
          "tax_other_dependent_disqualification_reason": {
            "type": "string",
            "nullable": true,
            "description": "税扶養のその他の喪失理由",
            "maxLength": 255
          },
          "non_resident_dependents_reason": {
            "type": "string",
            "enum": [
              "none",
              "over_16_to_under_30_or_over_70",
              "study_abroad",
              "handicapped",
              "over_38_man"
            ],
            "description": "非居住者である親族の条件 none: なし, over_16_to_under_30_or_over_70: 16歳以上30歳未満又は70歳以上, study_abroad: 留学, handicapped: 障害者, over_38_man: 38万円以上の支払",
            "format": "string"
          }
        }
      },
      "ApiV1EmployeesTimeClockSerializer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "打刻ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647
          },
          "date": {
            "type": "string",
            "description": "打刻日",
            "format": "date"
          },
          "type": {
            "type": "string",
            "description": "打刻種別(clock_in:出勤, break_begin:休憩開始, break_end:休憩終了, clock_out:退勤)",
            "enum": [
              "clock_in",
              "break_begin",
              "break_end",
              "clock_out"
            ]
          },
          "datetime": {
            "type": "string",
            "description": "打刻時刻",
            "format": "date-time"
          },
          "original_datetime": {
            "type": "string",
            "description": "オリジナルの打刻時間",
            "format": "date-time"
          },
          "note": {
            "type": "string",
            "description": "打刻メモ",
            "maxLength": 255
          }
        }
      },
      "ApiV1EmployeesWorkRecordSummarySerializer": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "給与支払い年",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "description": "給与支払い月",
            "format": "int32",
            "minimum": 1,
            "maximum": 12
          },
          "start_date": {
            "type": "string",
            "description": "集計開始日",
            "format": "date"
          },
          "end_date": {
            "type": "string",
            "description": "集計終了日",
            "format": "date"
          },
          "work_days": {
            "type": "number",
            "description": "労働日数",
            "format": "float"
          },
          "total_work_mins": {
            "type": "integer",
            "description": "総勤務時間（分）",
            "format": "int32"
          },
          "total_normal_work_mins": {
            "type": "integer",
            "description": "所定内労働時間（分）",
            "format": "int32"
          },
          "total_excess_statutory_work_mins": {
            "type": "integer",
            "description": "給与計算に用いられる法定内残業時間（分）",
            "format": "int32"
          },
          "total_overtime_except_normal_work_mins": {
            "type": "integer",
            "description": "所定外法定外労働時間",
            "format": "int32"
          },
          "total_overtime_within_normal_work_mins": {
            "type": "integer",
            "description": "所定内法定外労働時間（裁量労働制の場合はみなしベース）",
            "format": "int32"
          },
          "total_holiday_work_mins": {
            "type": "integer",
            "description": "法定休日労働時間（分）",
            "format": "int32"
          },
          "total_latenight_work_mins": {
            "type": "integer",
            "description": "深夜労働allow(company)時間（分）",
            "format": "int32"
          },
          "num_absences": {
            "type": "number",
            "description": "欠勤日数",
            "format": "float"
          },
          "num_paid_holidays": {
            "type": "number",
            "description": "有給取得日数",
            "format": "float"
          },
          "num_paid_holidays_and_hours": {
            "$ref": "#/components/schemas/ApiV1HolidaysAndHoursSerializer"
          },
          "num_paid_holidays_left": {
            "type": "number",
            "description": "有給残日数",
            "format": "float"
          },
          "num_paid_holidays_and_hours_left": {
            "$ref": "#/components/schemas/ApiV1HolidaysAndHoursSerializer"
          },
          "num_substitute_holidays_used": {
            "type": "number",
            "description": "振替休日の使用日数",
            "format": "float"
          },
          "num_compensatory_holidays_used": {
            "type": "number",
            "description": "代休の使用日数",
            "format": "float"
          },
          "num_special_holidays_used": {
            "type": "number",
            "description": "特別休暇の使用日数",
            "format": "float"
          },
          "num_special_holidays_and_hours_used": {
            "$ref": "#/components/schemas/ApiV1HolidaysAndHoursSerializer"
          },
          "total_lateness_and_early_leaving_mins": {
            "type": "integer",
            "description": "遅刻早退時間（分）",
            "format": "int32"
          },
          "multi_hourly_wages": {
            "type": "array",
            "description": "複数時給の労働時間の内訳（複数時給を設定している従業員のみ）",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeesEmployeeMultiHourlyWageWorkRecordSummarySerializer"
            }
          },
          "work_records": {
            "type": "array",
            "description": "日々の勤怠情報",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeesWorkRecordSerializer"
            }
          },
          "total_shortage_work_mins": {
            "type": "integer",
            "description": "不足時間（分）",
            "format": "int32",
            "nullable": true
          },
          "total_deemed_paid_excess_statutory_work_mins": {
            "type": "integer",
            "description": "支給対象の法定内残業時間（分）",
            "format": "int32",
            "nullable": true
          },
          "total_deemed_paid_overtime_except_normal_work_mins": {
            "type": "integer",
            "description": "支給対象の時間外労働時間（分）",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ApiV1EmployeesWorkRecordSerializer": {
        "type": "object",
        "properties": {
          "break_records": {
            "type": "array",
            "description": "休憩時間のリスト",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeesWorkRecordTimeRangeResponseSerializer"
            }
          },
          "clock_in_at": {
            "type": "string",
            "description": "出勤時間",
            "format": "date-time",
            "nullable": true
          },
          "clock_out_at": {
            "type": "string",
            "description": "退勤時間",
            "format": "date-time",
            "nullable": true
          },
          "date": {
            "type": "string",
            "description": "対象日付",
            "format": "date-time"
          },
          "day_pattern": {
            "type": "string",
            "description": "勤務パターン\n- normal_day: 所定労働日\n- prescribed_holiday: 所定休日\n- legal_holiday: 法定休日",
            "enum": [
              "normal_day",
              "prescribed_holiday",
              "legal_holiday"
            ]
          },
          "schedule_pattern": {
            "type": "string",
            "description": "スケジュールパターン\n- substitute_holiday_work: 振替出勤\n- substitute_holiday: 振替休日\n- compensatory_holiday_work: 代休出勤\n- compensatory_holiday: 代休\n- special_holiday: 特別休暇",
            "enum": [
              "",
              "substitute_holiday_work",
              "substitute_holiday",
              "compensatory_holiday_work",
              "compensatory_holiday",
              "special_holiday"
            ]
          },
          "early_leaving_mins": {
            "type": "integer",
            "description": "早退分の時間（分単位）",
            "format": "int32"
          },
          "half_paid_holiday_mins": {
            "type": "integer",
            "description": "有給休暇の半休を利用した時間（分単位）",
            "format": "int32"
          },
          "half_special_holiday_mins": {
            "type": "integer",
            "description": "特別休暇の半休を利用した時間（分単位）",
            "format": "int32"
          },
          "hourly_paid_holiday_mins": {
            "type": "integer",
            "description": "有給休暇の時間休を利用した時間（分単位）",
            "format": "int32"
          },
          "hourly_special_holiday_mins": {
            "type": "integer",
            "description": "特別休暇の時間休を利用した時間（分単位）",
            "format": "int32"
          },
          "is_absence": {
            "type": "boolean",
            "description": "欠勤かどうか",
            "example": false
          },
          "is_editable": {
            "type": "boolean",
            "description": "勤怠データが編集可能かどうか"
          },
          "lateness_mins": {
            "type": "integer",
            "description": "遅刻分の時間（分単位）",
            "format": "int32"
          },
          "normal_work_clock_in_at": {
            "type": "string",
            "description": "所定労働開始時刻",
            "format": "date-time",
            "nullable": true
          },
          "normal_work_clock_out_at": {
            "type": "string",
            "description": "所定労働終了時刻",
            "format": "date-time",
            "nullable": true
          },
          "normal_work_mins": {
            "type": "integer",
            "description": "所定労働時間",
            "format": "int32"
          },
          "normal_work_mins_by_paid_holiday": {
            "type": "integer",
            "description": "有給によって計上される所定労働時間（分）<br> （API仕様の変更により廃止する予定です。有給休暇によって計上される所定労働時間はhalf_paid_holiday_mins、もしくはhourly_paid_holiday_minsを参照してください。）",
            "format": "int32",
            "deprecated": true
          },
          "note": {
            "type": "string",
            "description": "勤怠メモ",
            "maxLength": 255
          },
          "paid_holiday": {
            "type": "number",
            "description": "この日に対する有給取得日数。半休の場合は0.5が入ります。時間休の場合はhourly_paid_holiday_minsを所定労働時間で割った値が入るため、実際の時間を確認するにはhourly_paid_holiday_minsを参照してください。",
            "format": "float"
          },
          "special_holiday": {
            "type": "number",
            "description": "この日に対する特別休暇取得日数。半休の場合は0.5が入ります。時間休の場合はhourly_special_holiday_minsを所定労働時間で割った値が入るため、実際の時間を確認するにはhourly_special_holiday_minsを参照してください。",
            "format": "float"
          },
          "special_holiday_setting_id": {
            "type": "integer",
            "description": "特別休暇設定ID",
            "format": "int32",
            "nullable": true
          },
          "use_attendance_deduction": {
            "type": "boolean",
            "description": "欠勤・遅刻・早退を控除対象時間に算入するかどうか"
          },
          "use_default_work_pattern": {
            "type": "boolean",
            "description": "デフォルトの勤務時間設定を使っているかどうか"
          },
          "total_overtime_work_mins": {
            "type": "integer",
            "description": "時間外労働時間（分）（Webの勤怠登録画面にて詳細項目の「勤務時間の長さを自動で計算しない」にチェックを入れた場合0が返却されます。時間外労働時間はtotal_overtime_except_normal_work_minsを参照してください。）",
            "format": "int32"
          },
          "total_holiday_work_mins": {
            "type": "integer",
            "description": "休日労働時間（分）",
            "format": "int32"
          },
          "total_latenight_work_mins": {
            "type": "integer",
            "description": "深夜労働時間（分）",
            "format": "int32"
          },
          "not_auto_calc_work_time": {
            "type": "boolean",
            "description": "勤怠登録時に勤務時間の長さを自動で計算しないかどうか",
            "example": false
          },
          "total_excess_statutory_work_mins": {
            "type": "integer",
            "description": "法定内残業時間（分）",
            "format": "int32"
          },
          "total_latenight_excess_statutory_work_mins": {
            "type": "integer",
            "description": "深夜の法定内残業時間（分）",
            "format": "int32"
          },
          "total_overtime_except_normal_work_mins": {
            "type": "integer",
            "description": "所定外法定外労働時間（分）",
            "format": "int32"
          },
          "total_latenight_overtime_except_normal_work_min": {
            "type": "integer",
            "description": "深夜の所定外法定外労働時間（分）",
            "format": "int32"
          }
        }
      },
      "ApiV1EmployeesWelfarePensionInsuranceRuleUpdateRequestSerializer": {
        "type": "object",
        "required": [
          "standard_monthly_remuneration"
        ],
        "properties": {
          "entried": {
            "type": "boolean",
            "description": "厚生年金保険に加入しているかどうか null不可"
          },
          "welfare_pension_insurance_salary_calc_type": {
            "type": "string",
            "enum": [
              "auto",
              "manual"
            ],
            "description": "給与計算時の厚生年金保険料の計算方法",
            "example": "manual"
          },
          "welfare_pension_insurance_bonus_calc_type": {
            "type": "string",
            "enum": [
              "auto",
              "manual"
            ],
            "description": "賞与計算時の厚生年金保険料の計算方法",
            "example": "manual"
          },
          "manual_welfare_pension_insurance_amount_of_employee_salary": {
            "type": "integer",
            "format": "int32",
            "description": "給与計算時の厚生年金保険料の直接指定金額（従業員負担分）",
            "example": 1111,
            "nullable": true,
            "minimum": -999999999,
            "maximum": 999999999
          },
          "manual_welfare_pension_insurance_amount_of_employee_bonus": {
            "type": "integer",
            "format": "int32",
            "description": "賞与計算時の厚生年金保険料の直接指定金額（従業員負担分）",
            "example": 2222,
            "nullable": true,
            "minimum": -999999999,
            "maximum": 999999999
          },
          "manual_welfare_pension_insurance_amount_of_company_salary": {
            "type": "number",
            "format": "float",
            "description": "給与計算時の厚生年金保険料の直接指定金額（会社負担分）",
            "example": 3333.0001,
            "nullable": true,
            "minimum": -999999999.9999,
            "maximum": 999999999.9999
          },
          "manual_welfare_pension_insurance_amount_of_company_bonus": {
            "type": "number",
            "format": "float",
            "description": "賞与計算時の厚生年金保険料の直接指定金額（会社負担分）",
            "example": 4444.0001,
            "nullable": true,
            "minimum": -999999999.9999,
            "maximum": 999999999.9999
          },
          "child_allowance_contribution_salary_calc_type": {
            "type": "string",
            "enum": [
              "auto",
              "manual"
            ],
            "description": "給与計算時の子ども・子育て拠出金の計算方法",
            "example": "manual"
          },
          "child_allowance_contribution_bonus_calc_type": {
            "type": "string",
            "enum": [
              "auto",
              "manual"
            ],
            "description": "賞与計算時の子ども・子育て拠出金の計算方法",
            "example": "manual"
          },
          "manual_child_allowance_contribution_amount_salary": {
            "type": "number",
            "format": "float",
            "description": "給与計算時の子ども・子育て拠出金の直接指定金額",
            "nullable": true,
            "example": 5555.0001,
            "minimum": -999999999.9999,
            "maximum": 999999999.9999
          },
          "manual_child_allowance_contribution_amount_bonus": {
            "type": "number",
            "format": "float",
            "description": "賞与計算時の子ども・子育て拠出金の直接指定金額",
            "nullable": true,
            "example": 6666.0001,
            "minimum": -999999999.9999,
            "maximum": 999999999.9999
          },
          "reference_num": {
            "type": "string",
            "description": "厚生年金保険の被保険者整理番号",
            "maxLength": 255,
            "example": "0000000000"
          },
          "standard_monthly_remuneration": {
            "type": "integer",
            "description": "標準報酬月額 null不可",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 88000
          }
        }
      },
      "ApiV1EmployeesBankAccountRuleUpdateRequestSerializer": {
        "type": "object",
        "properties": {
          "bank_name": {
            "type": "string",
            "description": "金融機関名",
            "maxLength": 255
          },
          "bank_name_kana": {
            "type": "string",
            "description": "金融機関名カナ 英字カナのみ",
            "maxLength": 255
          },
          "bank_code": {
            "type": "string",
            "description": "金融機関コード 数値文字列4桁",
            "maxLength": 4,
            "example": "0000"
          },
          "branch_name": {
            "type": "string",
            "description": "支店名",
            "maxLength": 255
          },
          "branch_name_kana": {
            "type": "string",
            "description": "支店名カナ　英字カナのみ",
            "maxLength": 255
          },
          "branch_code": {
            "type": "string",
            "description": "支店コード 数値文字列3桁",
            "maxLength": 3,
            "example": "000"
          },
          "account_number": {
            "type": "string",
            "description": "口座番号 数値文字列7桁",
            "maxLength": 7,
            "example": "0000000"
          },
          "account_name": {
            "type": "string",
            "description": "口座名義カナ　英字カナのみ",
            "maxLength": 50
          },
          "account_type": {
            "type": "string",
            "description": "預金種類 ordinary: 普通預金, current: 当座預金, saving: 貯蓄預金",
            "enum": [
              "ordinary",
              "current",
              "saving"
            ]
          }
        }
      },
      "ApiV1EmployeesBasicPayRuleUpdateRequestSerializer": {
        "type": "object",
        "required": [
          "pay_calc_type",
          "pay_amount"
        ],
        "properties": {
          "pay_calc_type": {
            "type": "string",
            "description": "給与方式 null不可 monthly: 月給, daily: 日給, hourly: 時給",
            "enum": [
              "monthly",
              "daily",
              "hourly"
            ],
            "example": "monthly"
          },
          "pay_amount": {
            "type": "integer",
            "description": "基本給 null不可",
            "format": "int32",
            "minimum": 0,
            "maximum": 99999999,
            "example": 220000
          }
        }
      },
      "ApiV1EmployeesHealthInsuranceRuleSerializer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "健康保険ルールID",
            "format": "int32"
          },
          "company_id": {
            "type": "integer",
            "description": "事業所ID",
            "format": "int32"
          },
          "employee_id": {
            "type": "integer",
            "description": "従業員ID",
            "format": "int32"
          },
          "entried": {
            "type": "boolean",
            "description": "健康保険に加入しているかどうか"
          },
          "health_insurance_salary_calc_type": {
            "type": "string",
            "enum": [
              "auto",
              "manual"
            ],
            "description": "給与計算時の健康保険料の計算方法",
            "example": "manual"
          },
          "health_insurance_bonus_calc_type": {
            "type": "string",
            "enum": [
              "auto",
              "manual"
            ],
            "description": "賞与計算時の健康保険料の計算方法",
            "example": "manual"
          },
          "manual_health_insurance_amount_of_employee_salary": {
            "type": "integer",
            "format": "int32",
            "description": "給与計算時の健康保険料の直接指定金額（従業員負担分）",
            "example": 8888,
            "nullable": true,
            "minimum": -999999999,
            "maximum": 999999999
          },
          "manual_health_insurance_amount_of_employee_bonus": {
            "type": "integer",
            "format": "int32",
            "description": "賞与計算時の健康保険料の直接指定金額（従業員負担分）",
            "example": 7777,
            "nullable": true,
            "minimum": -999999999,
            "maximum": 999999999
          },
          "manual_health_insurance_amount_of_company_salary": {
            "type": "number",
            "format": "float",
            "description": "給与計算時の健康保険料の直接指定金額（会社負担分）",
            "example": 6666.0001,
            "nullable": true,
            "minimum": -999999999.9999,
            "maximum": 999999999.9999
          },
          "manual_health_insurance_amount_of_company_bonus": {
            "type": "number",
            "format": "float",
            "description": "賞与計算時の健康保険料の直接指定金額（会社負担分）",
            "example": 5555.0001,
            "nullable": true,
            "minimum": -999999999.9999,
            "maximum": 999999999.9999
          },
          "care_insurance_salary_calc_type": {
            "type": "string",
            "enum": [
              "auto",
              "manual"
            ],
            "description": "給与計算時の介護保険料の計算方法",
            "example": "manual"
          },
          "care_insurance_bonus_calc_type": {
            "type": "string",
            "enum": [
              "auto",
              "manual"
            ],
            "description": "賞与計算時の介護保険料の計算方法",
            "example": "manual"
          },
          "manual_care_insurance_amount_of_employee_salary": {
            "type": "integer",
            "format": "int32",
            "description": "給与計算時の介護保険料の直接指定金額（従業員負担分）",
            "example": 4444,
            "nullable": true,
            "minimum": -999999999,
            "maximum": 999999999
          },
          "manual_care_insurance_amount_of_employee_bonus": {
            "type": "integer",
            "format": "int32",
            "description": "賞与計算時の介護保険料の直接指定金額（従業員負担分）",
            "example": 3333,
            "nullable": true,
            "minimum": -999999999,
            "maximum": 999999999
          },
          "manual_care_insurance_amount_of_company_salary": {
            "type": "number",
            "format": "float",
            "description": "給与計算時の介護保険料の直接指定金額（会社負担分）",
            "example": 2222.0001,
            "nullable": true,
            "minimum": -999999999.9999,
            "maximum": 999999999.9999
          },
          "manual_care_insurance_amount_of_company_bonus": {
            "type": "number",
            "format": "float",
            "description": "賞与計算時の介護保険料の直接指定金額（会社負担分）",
            "example": 1111.0001,
            "nullable": true,
            "minimum": -999999999.9999,
            "maximum": 999999999.9999
          },
          "reference_num": {
            "type": "string",
            "description": "健康保険の被保険者整理番号",
            "nullable": true
          },
          "standard_monthly_remuneration": {
            "type": "integer",
            "description": "標準報酬月額",
            "format": "int32"
          }
        },
        "nullable": true
      },
      "ApiV1EmployeesBankAccountRuleSerializer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "銀行口座ルールID",
            "format": "int32"
          },
          "company_id": {
            "type": "integer",
            "description": "事業所ID",
            "format": "int32"
          },
          "employee_id": {
            "type": "integer",
            "description": "従業員ID",
            "format": "int32"
          },
          "bank_name": {
            "type": "string",
            "description": "金融機関名",
            "nullable": true
          },
          "bank_name_kana": {
            "type": "string",
            "description": "金融機関名カナ",
            "nullable": true
          },
          "bank_code": {
            "type": "string",
            "description": "金融機関コード",
            "nullable": true
          },
          "branch_name": {
            "type": "string",
            "description": "支店名",
            "nullable": true
          },
          "branch_name_kana": {
            "type": "string",
            "description": "支店名カナ",
            "nullable": true
          },
          "branch_code": {
            "type": "string",
            "description": "支店コード",
            "nullable": true
          },
          "account_number": {
            "type": "string",
            "description": "口座番号",
            "nullable": true
          },
          "account_name": {
            "type": "string",
            "description": "口座名義カナ",
            "nullable": true
          },
          "account_type": {
            "type": "string",
            "description": "預金種類 ordinary: 普通預金, current: 当座預金, saving: 貯蓄預金",
            "nullable": true
          }
        },
        "nullable": true
      },
      "ApiV1EmployeesDependentRuleSerializer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "家族情報ルールID",
            "format": "int32"
          },
          "company_id": {
            "type": "integer",
            "description": "事業所ID",
            "format": "int32"
          },
          "employee_id": {
            "type": "integer",
            "description": "従業員ID",
            "format": "int32"
          },
          "last_name": {
            "type": "string",
            "description": "姓"
          },
          "first_name": {
            "type": "string",
            "description": "名"
          },
          "last_name_kana": {
            "type": "string",
            "description": "姓カナ",
            "nullable": true
          },
          "first_name_kana": {
            "type": "string",
            "description": "名カナ",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "description": "性別　unselected: 未選択, male: 男性, female: 女性",
            "enum": [
              "unselected",
              "male",
              "female"
            ]
          },
          "relationship": {
            "type": "string",
            "description": "続柄 spouse: 配偶者, father: 父, mother: 母, child: 子, senior_brother: 兄, junior_brother: 弟, senior_sister: 姉, junior_sister: 妹, grandchild: 孫, grandfather: 祖父, grandmother: 祖母, father_in_law: 義父, mother_in_law: 義母, grandfather_in_law: 義祖父, grandmother_in_law: 義祖母, other: その他, great_grandfather: 曽祖父, great_grandmother: 曽祖母, spouses_child: 配偶者の連れ子"
          },
          "birth_date": {
            "type": "string",
            "description": "生年月日",
            "format": "date"
          },
          "residence_type": {
            "type": "string",
            "description": "同居・別居 live_in: 同居, resident: 別居(国内), non_resident: 別居(国外)"
          },
          "zipcode1": {
            "type": "string",
            "description": "住民票住所の郵便番号1",
            "nullable": true
          },
          "zipcode2": {
            "type": "string",
            "description": "住民票住所の郵便番号2",
            "nullable": true
          },
          "prefecture_code": {
            "type": "integer",
            "nullable": true,
            "minimum": -1,
            "maximum": 46,
            "description": "住民票住所の都道府県コード（-1: 設定しない、0: 北海道、1:青森、2:岩手、3:宮城、4:秋田、5:山形、6:福島、7:茨城、8:栃木、9:群馬、10:埼玉、11:千葉、12:東京、13:神奈川、14:新潟、15:富山、16:石川、17:福井、18:山梨、19:長野、20:岐阜、21:静岡、22:愛知、23:三重、24:滋賀、25:京都、26:大阪、27:兵庫、28:奈良、29:和歌山、30:鳥取、31:島根、32:岡山、33:広島、34:山口、35:徳島、36:香川、37:愛媛、38:高知、39:福岡、40:佐賀、41:長崎、42:熊本、43:大分、44:宮崎、45:鹿児島、46:沖縄)",
            "example": 4
          },
          "address": {
            "type": "string",
            "description": "住民票住所の市区町村以降の住所",
            "nullable": true
          },
          "address_kana": {
            "type": "string",
            "description": "住民票住所の市区町村以降の住所カナ",
            "nullable": true
          },
          "base_pension_num": {
            "type": "string",
            "description": "基礎年金番号",
            "nullable": true
          },
          "income": {
            "type": "integer",
            "description": "年間所得",
            "format": "int32"
          },
          "annual_revenue": {
            "type": "integer",
            "description": "年間収入",
            "format": "int32"
          },
          "disability_type": {
            "type": "string",
            "description": "障害に該当するか na: 障害なし, general: 一般の障害者, heavy: 特別障害者"
          },
          "occupation": {
            "type": "string",
            "description": "職業",
            "nullable": true
          },
          "annual_remittance_amount": {
            "type": "integer",
            "description": "一年間の送金額",
            "format": "int32"
          },
          "employment_insurance_receive_status": {
            "type": "string",
            "nullable": true,
            "enum": [
              "unselected",
              "receiving_employment_insurance",
              "not_receiving_employment_insurance",
              "pending_employment_insurance"
            ],
            "description": "雇用保険受給の有無\n- unselected 未選択\n- receiving_employment_insurance 雇用保険受給有り\n- not_receiving_employment_insurance 雇用保険受給無し\n- pending_employment_insurance 申請中",
            "format": "string"
          },
          "employment_insurance_receives_from": {
            "type": "string",
            "nullable": true,
            "description": "雇用保険受給開始年月日 employment_insurance_receive_statusが未選択、無しの場合は指定できません。",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          },
          "phone_type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "unselected",
              "home",
              "office",
              "mobile",
              "other"
            ],
            "description": "電話番号の種別\n- unselected 未選択\n- home 自宅\n- office 勤務先\n- mobile 携帯\n- other その他"
          },
          "phone1": {
            "type": "string",
            "nullable": true,
            "description": "電話番号1（先頭番号、例:03-1111-222x の03部分）",
            "example": "000"
          },
          "phone2": {
            "type": "string",
            "nullable": true,
            "description": "電話番号2（中間番号、例:03-1111-222x の1111部分）",
            "example": "0000"
          },
          "phone3": {
            "type": "string",
            "nullable": true,
            "description": "電話番号3（末尾番号、例:03-1111-222x の222x部分）",
            "example": "0000"
          },
          "social_insurance_and_tax_dependent": {
            "type": "string",
            "description": "扶養状況 social_insurance_and_tax: 所得税・住民税と社会保険, tax_only: 所得税・住民税のみ, social_insurance_only: 社会保険のみ"
          },
          "social_insurance_dependent_acquisition_date": {
            "type": "string",
            "nullable": true,
            "description": "社会保険の扶養加入日",
            "format": "date"
          },
          "social_insurance_dependent_acquisition_reason": {
            "type": "string",
            "enum": [
              "",
              "start_working",
              "marriage",
              "turnover",
              "decrease_in_income",
              "other",
              "birth",
              "live_in"
            ],
            "description": "社会保険の扶養加入理由 配偶者の場合 \"\": 未選択, start_working: 配偶者の就職, marriage: 婚姻, turnover: 離職, decrease_in_income: 収入減少, other: その他 配偶者以外の場合 \"\": 未選択, birth: 出生, turnover: 離職, decrease_in_income: 収入減, live_in: 同居, other: その他"
          },
          "social_insurance_other_dependent_acquisition_reason": {
            "type": "string",
            "nullable": true,
            "description": "社会保険のその他の扶養加入理由",
            "maxLength": 255
          },
          "social_insurance_dependent_disqualification_date": {
            "type": "string",
            "nullable": true,
            "description": "社会保険の扶養喪失日",
            "format": "date"
          },
          "social_insurance_dependent_disqualification_reason": {
            "type": "string",
            "enum": [
              "",
              "death",
              "divorce",
              "start_working_or_increase_in_income",
              "reach_75_years_old",
              "disability",
              "other",
              "start_working",
              "increase_in_income"
            ],
            "description": "社会保険の扶養喪失理由 配偶者の場合 \"\": 未選択, death: 死亡, divorce: 離婚, start_working_or_increase_in_income: 就職・収入増加, reach_75_years_old: 歳到達, disability: 障害認定, other: その他 配偶者以外の場合 \"\": 未選択, death: 死亡, start_working: 就職, increase_in_income: 収入増加, reach_75_years_old: ７５歳到達, disability: 障害認定, other: その他"
          },
          "social_insurance_other_dependent_disqualification_reason": {
            "type": "string",
            "nullable": true,
            "description": "社会保険のその他の扶養喪失理由",
            "maxLength": 255
          },
          "tax_dependent_acquisition_date": {
            "type": "string",
            "nullable": true,
            "description": "税扶養の加入日",
            "format": "date"
          },
          "tax_dependent_acquisition_reason": {
            "type": "string",
            "enum": [
              "",
              "start_working",
              "marriage",
              "turnover",
              "decrease_in_income",
              "other",
              "birth",
              "live_in"
            ],
            "description": "税扶養の加入理由 配偶者の場合 \"\": 未選択, start_working: 配偶者の就職, marriage: 婚姻, turnover: 離職, decrease_in_income: 収入減少, other: その他 配偶者以外の場合 \"\": birth: 出生, turnover: 離職, decrease_in_income: 収入減, live_in: 同居, other: その他"
          },
          "tax_other_dependent_acquisition_reason": {
            "type": "string",
            "nullable": true,
            "description": "税扶養のその他の加入理由",
            "maxLength": 255
          },
          "tax_dependent_disqualification_date": {
            "type": "string",
            "nullable": true,
            "description": "税扶養の喪失日",
            "format": "date"
          },
          "tax_dependent_disqualification_reason": {
            "type": "string",
            "enum": [
              "",
              "death",
              "divorce",
              "start_working_or_increase_in_income",
              "reach_75_years_old",
              "disability",
              "other",
              "start_working",
              "increase_in_income"
            ],
            "description": "税扶養の喪失理由 配偶者の場合 \"\": 未選択, death: 死亡, divorce: 離婚, start_working_or_increase_in_income: 就職・収入増加, reach_75_years_old: 歳到達, disability: 障害認定, other: その他 配偶者以外の場合 \"\": 未選択, death: 死亡, start_working: 就職, increase_in_income: 収入増加, reach_75_years_old: ７５歳到達, disability: 障害認定, other: その他"
          },
          "tax_other_dependent_disqualification_reason": {
            "type": "string",
            "nullable": true,
            "description": "税扶養のその他の喪失理由",
            "maxLength": 255
          },
          "non_resident_dependents_reason": {
            "type": "string",
            "enum": [
              "none",
              "over_16_to_under_30_or_over_70",
              "study_abroad",
              "handicapped",
              "over_38_man"
            ],
            "description": "非居住者である親族の条件 none: なし, over_16_to_under_30_or_over_70: 16歳以上30歳未満又は70歳以上, study_abroad: 留学, handicapped: 障害者, over_38_man: 38万円以上の支払",
            "format": "string"
          }
        }
      },
      "ApiV1EmployeesBasicPayRuleSerializer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "従業員の基本給ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647
          },
          "company_id": {
            "type": "integer",
            "description": "事業所ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647
          },
          "employee_id": {
            "type": "integer",
            "description": "従業員ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647
          },
          "pay_calc_type": {
            "type": "string",
            "description": "給与方式 monthly: 月給, daily: 日給, hourly: 時給",
            "enum": [
              "monthly",
              "daily",
              "hourly"
            ]
          },
          "pay_amount": {
            "type": "integer",
            "description": "基本給",
            "format": "int32",
            "minimum": 0,
            "maximum": 99999999
          }
        },
        "nullable": true
      },
      "ApiV1ProfileCustomFieldGroupSerializer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "グループID",
            "format": "int32",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "グループ名",
            "example": "資格取得結果"
          },
          "profile_custom_field_rules": {
            "type": "array",
            "description": "カスタム項目",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeeProfileCustomFieldSerializer"
            }
          }
        }
      },
      "ApiV1EmployeeProfileCustomFieldSerializer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "カスタム項目ID",
            "format": "int32",
            "example": 1
          },
          "field_type": {
            "type": "string",
            "description": "項目タイプ file: ファイル, text: テキスト, number: 数値, date: 日付, selector: セレクター, time: 時間",
            "enum": [
              "file",
              "text",
              "number",
              "date",
              "selector",
              "time"
            ],
            "example": "file"
          },
          "name": {
            "type": "string",
            "description": "項目名",
            "example": "証明書ファイル"
          },
          "value": {
            "type": "string",
            "description": "値（項目タイプがfileの場合、nullを返します）",
            "nullable": true,
            "example": "null"
          },
          "file_name": {
            "type": "string",
            "description": "ファイル名（項目タイプがfile以外の場合、nullを返します）",
            "nullable": true,
            "example": "証明書ファイル.jpeg"
          }
        }
      },
      "ApiV1EmployeesProfileCustomFieldRulesController.index_response": {
        "type": "object",
        "properties": {
          "profile_custom_field_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiV1ProfileCustomFieldGroupSerializer"
            }
          }
        }
      },
      "ApiV1EmployeesController.show_response": {
        "type": "object",
        "properties": {
          "employee": {
            "$ref": "#/components/schemas/ApiV1EmployeeSerializer"
          }
        }
      },
      "ApiV1EmployeesController.create_response": {
        "type": "object",
        "properties": {
          "employee": {
            "$ref": "#/components/schemas/ApiV1EmployeeSerializer"
          }
        }
      },
      "ApiV1EmployeesController.create_body": {
        "type": "object",
        "required": [
          "company_id",
          "employee"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "作成対象事業所ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647
          },
          "employee": {
            "$ref": "#/components/schemas/ApiV1EmployeeCreateRequestSerializer"
          }
        }
      },
      "ApiV1EmployeesController.update_response": {
        "type": "object",
        "properties": {
          "employee": {
            "$ref": "#/components/schemas/ApiV1EmployeeSerializer"
          }
        }
      },
      "ApiV1EmployeesController.update_body": {
        "type": "object",
        "required": [
          "company_id",
          "employee"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "更新対象事業所ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "year": {
            "type": "integer",
            "description": "更新対象年\n- 給与計算対象の従業員情報の場合は必須になります。",
            "format": "int32",
            "minimum": 2000,
            "maximum": 2100,
            "example": 2021
          },
          "month": {
            "type": "integer",
            "description": "更新対象月\n- 給与計算対象の従業員情報の場合は必須になります。\n- 締日支払日設定が翌月払いの従業員情報の場合は、 指定したmonth + 1の値が更新されます。\n- 翌月払いの従業員の2022/01の従業員情報を更新する場合は、year=2021,month=12を指定してください。",
            "format": "int32",
            "minimum": 1,
            "maximum": 12,
            "example": 1
          },
          "employee": {
            "$ref": "#/components/schemas/ApiV1EmployeeUpdateRequestSerializer"
          }
        }
      },
      "ApiV1EmployeesProfileRulesController.show_response": {
        "type": "object",
        "properties": {
          "employee_profile_rule": {
            "$ref": "#/components/schemas/ApiV1EmployeesProfileRuleSerializer"
          }
        }
      },
      "ApiV1EmployeesProfileRulesController.update_response": {
        "type": "object",
        "properties": {
          "employee_profile_rule": {
            "$ref": "#/components/schemas/ApiV1EmployeesProfileRuleSerializer"
          }
        }
      },
      "ApiV1EmployeesProfileRulesController.update_body": {
        "type": "object",
        "required": [
          "company_id",
          "year",
          "month",
          "employee_profile_rule"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647,
            "description": "更新対象事業所ID（必須）",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "minimum": 2000,
            "maximum": 2100,
            "description": "更新対象年（必須）",
            "format": "int32",
            "example": 2021
          },
          "month": {
            "type": "integer",
            "minimum": 1,
            "maximum": 12,
            "example": 1,
            "description": "更新対象月（必須）<br>\n締日支払日設定が翌月払いの従業員情報の場合は、指定したmonth + 1の値が更新されます。<br>\n翌月払いの従業員の2022/01の従業員情報を更新する場合は、year=2021,month=12を指定してください。<br>",
            "format": "int32"
          },
          "employee_profile_rule": {
            "$ref": "#/components/schemas/ApiV1EmployeesProfileRuleUpdateRequestSerializer"
          }
        }
      },
      "ApiV1EmployeesHealthInsuranceRulesController.show_response": {
        "type": "object",
        "properties": {
          "employee_health_insurance_rule": {
            "$ref": "#/components/schemas/ApiV1EmployeesHealthInsuranceRuleSerializer"
          }
        }
      },
      "ApiV1EmployeesHealthInsuranceRulesController.update_response": {
        "type": "object",
        "properties": {
          "employee_health_insurance_rule": {
            "$ref": "#/components/schemas/ApiV1EmployeesHealthInsuranceRuleSerializer"
          }
        }
      },
      "ApiV1EmployeesHealthInsuranceRulesController.update_body": {
        "type": "object",
        "required": [
          "company_id",
          "year",
          "month",
          "employee_health_insurance_rule"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "更新対象事業所ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "year": {
            "type": "integer",
            "description": "更新対象年（必須）",
            "format": "int32",
            "minimum": 2000,
            "maximum": 2100,
            "example": 2021
          },
          "month": {
            "type": "integer",
            "description": "更新対象月（必須）<br>\n締日支払日設定が翌月払いの従業員情報の場合は、 指定したmonth + 1の値が更新されます。<br>\n翌月払いの従業員の2022/01の従業員情報を更新する場合は、year=2021,month=12を指定してください。<br>",
            "format": "int32",
            "minimum": 1,
            "maximum": 12,
            "example": 1
          },
          "employee_health_insurance_rule": {
            "$ref": "#/components/schemas/ApiV1EmployeesHealthInsuranceRuleUpdateRequestSerializer"
          }
        }
      },
      "ApiV1EmployeesWelfarePensionInsuranceRulesController.show_response": {
        "type": "object",
        "properties": {
          "employee_welfare_pension_insurance_rule": {
            "$ref": "#/components/schemas/ApiV1EmployeesWelfarePensionInsuranceRuleSerializer"
          }
        }
      },
      "ApiV1EmployeesWelfarePensionInsuranceRulesController.update_response": {
        "type": "object",
        "properties": {
          "employee_welfare_pension_insurance_rule": {
            "$ref": "#/components/schemas/ApiV1EmployeesWelfarePensionInsuranceRuleSerializer"
          }
        }
      },
      "ApiV1EmployeesWelfarePensionInsuranceRulesController.update_body": {
        "type": "object",
        "required": [
          "company_id",
          "year",
          "month",
          "employee_welfare_pension_insurance_rule"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "更新対象事業所ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647
          },
          "year": {
            "type": "integer",
            "description": "更新対象年（必須）",
            "format": "int32",
            "minimum": 2000,
            "maximum": 2100,
            "example": 2021
          },
          "month": {
            "type": "integer",
            "description": "更新対象月（必須）<br>\n締日支払日設定が翌月払いの従業員情報の場合は、 指定したmonth + 1の値が更新されます。<br>\n翌月払いの従業員の2022/01の従業員情報を更新する場合は、year=2021,month=12を指定してください。<br>",
            "format": "int32",
            "minimum": 1,
            "maximum": 12,
            "example": 1
          },
          "employee_welfare_pension_insurance_rule": {
            "$ref": "#/components/schemas/ApiV1EmployeesWelfarePensionInsuranceRuleUpdateRequestSerializer"
          }
        }
      },
      "ApiV1EmployeesDependentRulesController.index_response": {
        "type": "object",
        "properties": {
          "employee_dependent_rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeesDependentRuleSerializer"
            }
          }
        }
      },
      "ApiV1EmployeesDependentRulesController.bulk_update_response": {
        "type": "object",
        "properties": {
          "employee_dependent_rules": {
            "type": "array",
            "description": "家族情報ルール",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeesDependentRuleSerializer"
            }
          }
        }
      },
      "ApiV1EmployeesDependentRulesController.bulk_update_body": {
        "type": "object",
        "required": [
          "company_id",
          "year",
          "month",
          "employee_dependent_rules"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "更新対象事業所ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647
          },
          "year": {
            "type": "integer",
            "description": "更新対象年（必須）",
            "format": "int32",
            "minimum": 2000,
            "maximum": 2100,
            "example": 2021
          },
          "month": {
            "type": "integer",
            "description": "更新対象月（必須）<br>\n締日支払日設定が翌月払いの従業員情報の場合は、 指定したmonth + 1の値が更新されます。<br>\n翌月払いの従業員の2022/01の従業員情報を更新する場合は、year=2021,month=12を指定してください。<br>",
            "format": "int32",
            "minimum": 1,
            "maximum": 12,
            "example": 1
          },
          "employee_dependent_rules": {
            "type": "array",
            "description": "家族情報ルール",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeesDependentRuleUpdateRequestSerializer"
            }
          }
        }
      },
      "ApiV1EmployeesBankAccountRulesController.show_response": {
        "type": "object",
        "properties": {
          "employee_bank_account_rule": {
            "$ref": "#/components/schemas/ApiV1EmployeesBankAccountRuleSerializer"
          }
        }
      },
      "ApiV1EmployeesBankAccountRulesController.update_response": {
        "type": "object",
        "properties": {
          "employee_bank_account_rule": {
            "$ref": "#/components/schemas/ApiV1EmployeesBankAccountRuleSerializer"
          }
        }
      },
      "ApiV1EmployeesBankAccountRulesController.update_body": {
        "type": "object",
        "required": [
          "company_id",
          "year",
          "month",
          "employee_bank_account_rule"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "更新対象事業所ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647
          },
          "year": {
            "type": "integer",
            "description": "更新対象年（必須）",
            "format": "int32",
            "minimum": 2000,
            "maximum": 2100,
            "example": 2021
          },
          "month": {
            "type": "integer",
            "description": "更新対象月（必須）<br>\n締日支払日設定が翌月払いの従業員情報の場合は、 指定したmonth + 1の値が更新されます。<br>\n翌月払いの従業員の2022/01の従業員情報を更新する場合は、year=2021,month=12を指定してください。<br>",
            "format": "int32",
            "minimum": 1,
            "maximum": 12,
            "example": 1
          },
          "employee_bank_account_rule": {
            "$ref": "#/components/schemas/ApiV1EmployeesBankAccountRuleUpdateRequestSerializer"
          }
        }
      },
      "ApiV1EmployeesBasicPayRulesController.show_response": {
        "type": "object",
        "properties": {
          "employee_basic_pay_rule": {
            "$ref": "#/components/schemas/ApiV1EmployeesBasicPayRuleSerializer"
          }
        }
      },
      "ApiV1EmployeesBasicPayRulesController.update_response": {
        "type": "object",
        "properties": {
          "employee_basic_pay_rule": {
            "$ref": "#/components/schemas/ApiV1EmployeesBasicPayRuleSerializer"
          }
        }
      },
      "ApiV1EmployeesBasicPayRulesController.update_body": {
        "type": "object",
        "required": [
          "company_id",
          "year",
          "month",
          "employee_basic_pay_rule"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "更新対象事業所ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "year": {
            "type": "integer",
            "description": "更新対象年（必須）",
            "format": "int32",
            "minimum": 2000,
            "maximum": 2100,
            "example": 2021
          },
          "month": {
            "type": "integer",
            "description": "更新対象月（必須）<br>\n締日支払日設定が翌月払いの従業員情報の場合は、 指定したmonth + 1の値が更新されます<br>\n翌月払いの従業員の2022/01の従業員情報を更新する場合は、year=2021,month=12を指定してください。<br>",
            "format": "int32",
            "minimum": 1,
            "maximum": 12,
            "example": 1
          },
          "employee_basic_pay_rule": {
            "$ref": "#/components/schemas/ApiV1EmployeesBasicPayRuleUpdateRequestSerializer"
          }
        }
      },
      "ApiV1EmployeesWorkRecordsController.update_body": {
        "type": "object",
        "required": [
          "company_id"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "事業所ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647
          },
          "break_records": {
            "type": "array",
            "description": "休憩時間のリスト",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeesWorkRecordTimeRangeSerializer"
            }
          },
          "clock_in_at": {
            "type": "string",
            "description": "出勤時刻",
            "format": "date-time",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
            "example": "2018-07-31 08:00:00"
          },
          "clock_out_at": {
            "type": "string",
            "description": "退勤時刻",
            "format": "date-time",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
            "example": "2018-07-31 08:00:00"
          },
          "day_pattern": {
            "type": "string",
            "description": "勤務パターン（所定労働日: normal_day, 所定休日: prescribed_holiday, 法定休日: legal_holiday）\n\nprescribed_holiday、legal_holidayを指定すると、以下のパラメータについて、指定した値が反映されず無視されます。\n- early_leaving_mins\n- lateness_mins\n- paid_holiday",
            "enum": [
              "normal_day",
              "prescribed_holiday",
              "legal_holiday"
            ]
          },
          "early_leaving_mins": {
            "type": "integer",
            "description": "早退分の時間（分単位）",
            "format": "int32",
            "minimum": 0,
            "maximum": 1440
          },
          "is_absence": {
            "type": "boolean",
            "description": "欠勤かどうか\n\nis_absenceにtrueを指定すると、以下のパラーメータについて、指定した値が反映されず無視されます。\n- break_records\n  - clock_in_at\n  - clock_out_at\n- clock_in_at\n- clock_out_at\n- early_leaving_mins\n- lateness_mins\n- normal_work_clock_in_at\n- normal_work_clock_out_at\n- normal_work_mins\n- normal_work_mins_by_paid_holiday\n- paid_holiday"
          },
          "lateness_mins": {
            "type": "integer",
            "description": "遅刻分の時間（分単位）",
            "format": "int32",
            "minimum": 0,
            "maximum": 1440
          },
          "normal_work_clock_in_at": {
            "type": "string",
            "description": "所定労働開始時刻。指定しない場合はデフォルト設定が使用されます。（デフォルト設定は従業員に設定した勤務賃金設定の出退勤時刻と労働時間の設定を参照して値が決まります。）",
            "format": "date-time",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
            "example": "2018-07-31 08:00:00"
          },
          "normal_work_clock_out_at": {
            "type": "string",
            "description": "所定労働終了時刻。指定しない場合はデフォルト設定が使用されます。（デフォルト設定は従業員に設定した勤務賃金設定の出退勤時刻と労働時間の設定を参照して値が決まります。）",
            "format": "date-time",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
            "example": "2018-07-31 08:00:00"
          },
          "normal_work_mins": {
            "type": "integer",
            "description": "所定労働時間。指定しない場合はデフォルト設定が使用されます。（デフォルト設定は従業員に設定した勤務賃金設定の出退勤時刻と労働時間の設定を参照して値が決まります。）",
            "format": "int32",
            "minimum": 0,
            "maximum": 1440
          },
          "normal_work_mins_by_paid_holiday": {
            "type": "integer",
            "description": "有給によって計上される所定労働時間（分）<br> （API仕様の変更により廃止する予定です。有給休暇（半休）に更新する場合はhalf_paid_holiday_minsを使用してください。）",
            "format": "int32",
            "minimum": 0,
            "maximum": 1440,
            "deprecated": true
          },
          "note": {
            "type": "string",
            "description": "勤怠メモ",
            "maxLength": 255
          },
          "paid_holiday": {
            "type": "number",
            "description": "この日の有休取得日数。1日単位で指定します。",
            "format": "float",
            "minimum": 0,
            "maximum": 1
          },
          "half_paid_holiday_mins": {
            "type": "integer",
            "description": "有給休暇の半休を利用した時間（分単位）",
            "format": "int32",
            "minimum": 0,
            "maximum": 1440
          },
          "hourly_paid_holiday_mins": {
            "type": "integer",
            "description": "有給休暇の時間休を利用した時間（分単位）",
            "format": "int32",
            "minimum": 0,
            "maximum": 1440
          },
          "special_holiday": {
            "type": "number",
            "description": "この日の特別休暇取得日数。1日単位で指定します。",
            "enum": [
              0,
              1
            ]
          },
          "special_holiday_setting_id": {
            "type": "integer",
            "description": "特別休暇設定ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "nullable": true
          },
          "half_special_holiday_mins": {
            "type": "integer",
            "description": "特別休暇の半休を利用した時間（分単位）",
            "format": "int32",
            "minimum": 0,
            "maximum": 1440
          },
          "hourly_special_holiday_mins": {
            "type": "integer",
            "description": "特別休暇の時間休を利用した時間（分単位）",
            "format": "int32",
            "minimum": 0,
            "maximum": 1440
          },
          "use_attendance_deduction": {
            "type": "boolean",
            "description": "欠勤・遅刻・早退を控除対象時間に算入するかどうか"
          },
          "use_default_work_pattern": {
            "type": "boolean",
            "description": "デフォルトの勤務設定を使うかどうか。\n\ntrueを指定した場合、以下のパラメータについて、指定した値に関係なく、従業員に設定した勤務賃金設定の休日の設定を参照して値が決まります\n- day_pattern\n\ntrueを指定した場合、以下のパラメータについて、指定した値に関係なく、従業員に設定した勤務賃金設定の出退勤時刻と労働時間の設定を参照して値が決まります。\n- normal_work_clock_in_at\n- normal_work_clock_out_at\n- normal_work_mins"
          }
        }
      },
      "ApiV1EmployeesWorkRecordSummaryController.update_body": {
        "type": "object",
        "required": [
          "company_id"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "事業所ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "work_days": {
            "type": "number",
            "description": "総勤務日数",
            "format": "float",
            "minimum": 0,
            "maximum": 31
          },
          "work_days_on_weekdays": {
            "type": "number",
            "description": "所定労働日の勤務日数",
            "format": "float",
            "minimum": 0,
            "maximum": 31
          },
          "work_days_on_prescribed_holidays": {
            "type": "number",
            "description": "所定休日の勤務日数",
            "format": "float",
            "minimum": 0,
            "maximum": 31
          },
          "work_days_on_legal_holidays": {
            "type": "number",
            "description": "法定休日の勤務日数",
            "format": "float",
            "minimum": 0,
            "maximum": 31
          },
          "total_work_mins": {
            "type": "integer",
            "description": "労働時間（分）",
            "minimum": 0,
            "maximum": 2147483647
          },
          "total_normal_work_mins": {
            "type": "integer",
            "description": "所定労働時間（分）",
            "minimum": 0,
            "maximum": 2147483647
          },
          "total_excess_statutory_work_mins": {
            "type": "integer",
            "description": "給与計算に用いられる法定内残業時間（分）",
            "minimum": 0,
            "maximum": 2147483647
          },
          "total_holiday_work_mins": {
            "type": "integer",
            "description": "法定休日労働時間（分）",
            "minimum": 0,
            "maximum": 2147483647
          },
          "total_latenight_work_mins": {
            "type": "integer",
            "description": "深夜労働時間（分）",
            "minimum": 0,
            "maximum": 2147483647
          },
          "total_actual_excess_statutory_work_mins": {
            "type": "integer",
            "description": "実労働時間ベースの法定内残業時間（分）",
            "minimum": 0,
            "maximum": 2147483647
          },
          "total_overtime_work_mins": {
            "type": "integer",
            "description": "時間外労働時間（分）",
            "minimum": 0,
            "maximum": 2147483647
          },
          "num_absences": {
            "type": "number",
            "description": "欠勤日数",
            "format": "float",
            "minimum": 0,
            "maximum": 31
          },
          "num_absences_for_deduction": {
            "type": "number",
            "description": "控除対象の欠勤日数",
            "format": "float",
            "minimum": 0,
            "maximum": 9999.999
          },
          "total_lateness_mins": {
            "type": "integer",
            "description": "遅刻時間（分）",
            "minimum": 0,
            "maximum": 2147483647
          },
          "total_lateness_mins_for_deduction": {
            "type": "integer",
            "description": "控除対象の遅刻時間（分）",
            "minimum": 0,
            "maximum": 2147483647
          },
          "total_early_leaving_mins": {
            "type": "integer",
            "description": "早退時間（分）",
            "minimum": 0,
            "maximum": 2147483647
          },
          "total_early_leaving_mins_for_deduction": {
            "type": "integer",
            "description": "控除対象の早退時間（分）",
            "minimum": 0,
            "maximum": 2147483647
          },
          "num_paid_holidays": {
            "type": "number",
            "description": "有給取得日数",
            "format": "float",
            "minimum": 0,
            "maximum": 31
          },
          "total_shortage_work_mins": {
            "type": "integer",
            "description": "不足時間（分）（フレックスタイム制でのみ使用）",
            "minimum": 0,
            "maximum": 2147483647
          },
          "total_deemed_paid_excess_statutory_work_mins": {
            "type": "integer",
            "description": "支給対象の法定内残業時間（分）（裁量労働制でのみ使用）",
            "minimum": 0,
            "maximum": 2147483647
          },
          "total_deemed_paid_overtime_except_normal_work_mins": {
            "type": "integer",
            "description": "支給対象の時間外労働時間（分）（裁量労働制でのみ使用）",
            "minimum": 0,
            "maximum": 2147483647
          }
        }
      },
      "ApiV1EmployeesTimeClocksController.index_response": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ApiV1EmployeesTimeClockSerializer"
        }
      },
      "ApiV1EmployeesTimeClocksController.show_response": {
        "type": "object",
        "properties": {
          "employee_time_clock": {
            "$ref": "#/components/schemas/ApiV1EmployeesTimeClockSerializer"
          }
        }
      },
      "ApiV1EmployeesTimeClocksController.available_types_response": {
        "type": "object",
        "properties": {
          "available_types": {
            "type": "array",
            "description": "打刻可能種別(clock_in:出勤, break_begin:休憩開始, break_end:休憩終了, clock_out:退勤)",
            "items": {
              "type": "string",
              "enum": [
                "clock_in",
                "break_begin",
                "break_end",
                "clock_out"
              ],
              "example": "clock_in"
            }
          },
          "base_date": {
            "type": "string",
            "description": "打刻基準日",
            "format": "date",
            "example": "2018-07-31"
          }
        }
      },
      "ApiV1EmployeesTimeClocksController.create_response": {
        "type": "object",
        "properties": {
          "employee_time_clock": {
            "$ref": "#/components/schemas/ApiV1EmployeesTimeClockSerializer"
          }
        }
      },
      "ApiV1EmployeesTimeClocksController.create_body": {
        "type": "object",
        "required": [
          "company_id",
          "type"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "(required)",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647
          },
          "type": {
            "type": "string",
            "description": "打刻種別（required）[clock_in:出勤, break_begin:休憩開始, break_end:休憩終了, clock_out:退勤]の何れか",
            "enum": [
              "clock_in",
              "break_begin",
              "break_end",
              "clock_out"
            ]
          },
          "base_date": {
            "type": "string",
            "description": "打刻日。打刻が日をまたぐ場合に、前日の日付を指定します。(YYYY-MM-DD)(例:2018-07-31)",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "example": "2018-07-31"
          },
          "datetime": {
            "type": "string",
            "description": "打刻時刻。(YYYY-MM-DD&nbsp;HH:MM:SS)(例:2018-07-31&nbsp;08:00:00)",
            "format": "date-time",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
            "example": "2018-07-31 08:00:00"
          }
        }
      },
      "ApiV1SalariesEmployeePayrollStatementsController.index_response": {
        "type": "object",
        "properties": {
          "employee_payroll_statements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiV1SalariesEmployeePayrollStatementSerializer"
            }
          }
        }
      },
      "ApiV1SalariesEmployeePayrollStatementsController.show_response": {
        "type": "object",
        "properties": {
          "employee_payroll_statement": {
            "$ref": "#/components/schemas/ApiV1SalariesEmployeePayrollStatementSerializer"
          }
        }
      },
      "ApiV1BonusesEmployeePayrollStatementsController.show_response": {
        "type": "object",
        "properties": {
          "employee_payroll_statement": {
            "$ref": "#/components/schemas/ApiV1BonusesEmployeePayrollStatementSerializer"
          }
        }
      },
      "ApiV1GroupCreateRequest": {
        "type": "object",
        "required": [
          "company_id",
          "group"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "作成対象事業所ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "group": {
            "$ref": "#/components/schemas/ApiV1GroupCreateRequestParams"
          }
        }
      },
      "ApiV1GroupResponse": {
        "type": "object",
        "required": [
          "group"
        ],
        "properties": {
          "group": {
            "$ref": "#/components/schemas/ApiV1GroupResponseParams"
          }
        }
      },
      "ApiV1GroupUpdateRequest": {
        "type": "object",
        "required": [
          "company_id",
          "group"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "作成対象事業所ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "group": {
            "$ref": "#/components/schemas/ApiV1GroupUpdateRequestParams"
          }
        }
      },
      "ApiV1PositionResponse": {
        "type": "object",
        "required": [
          "position"
        ],
        "properties": {
          "position": {
            "$ref": "#/components/schemas/ApiV1PositionResponseParams"
          }
        }
      },
      "ApiV1PositionRequest": {
        "type": "object",
        "required": [
          "company_id",
          "position"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "作成対象事業所ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "position": {
            "$ref": "#/components/schemas/ApiV1PositionRequestParams"
          }
        }
      },
      "ApiV1MonthlyAttendanceIndexResponse": {
        "type": "object",
        "required": [
          "monthly_attendances",
          "total_count"
        ],
        "properties": {
          "monthly_attendances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiV1MonthlyAttendanceIndexResponseParams"
            }
          },
          "total_count": {
            "type": "integer",
            "description": "合計件数",
            "format": "int32",
            "minimum": 0,
            "maximum": 2147483647,
            "example": 1
          }
        }
      },
      "ApiV1MonthlyAttendanceResponse": {
        "type": "object",
        "required": [
          "monthly_attendance"
        ],
        "properties": {
          "monthly_attendance": {
            "$ref": "#/components/schemas/ApiV1MonthlyAttendanceResponseParams"
          }
        }
      },
      "ApiV1MonthlyAttendanceCreateRequest": {
        "type": "object",
        "required": [
          "company_id",
          "target_year",
          "target_month",
          "approval_flow_route_id"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "事業所ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "target_year": {
            "type": "integer",
            "description": "対象年（必須）",
            "format": "int32",
            "minimum": 2000,
            "maximum": 2100,
            "example": 2022
          },
          "target_month": {
            "type": "integer",
            "description": "対象月（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 12,
            "example": 1
          },
          "approval_flow_route_id": {
            "type": "integer",
            "description": "申請経路ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "approver_id": {
            "type": "integer",
            "description": "承認者のユーザーID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          }
        }
      },
      "ApiV1MonthlyAttendanceUpdateRequest": {
        "type": "object",
        "required": [
          "company_id",
          "approval_flow_route_id"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "事業所ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "approval_flow_route_id": {
            "type": "integer",
            "description": "申請経路ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "approver_id": {
            "type": "integer",
            "description": "承認者のユーザーID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          }
        }
      },
      "ApiV1WorkTimeIndexResponseParams": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "application_number",
          "applicant_id",
          "target_date",
          "clear_work_time",
          "lateness_mins",
          "early_leaving_mins",
          "issue_date",
          "status",
          "passed_auto_check"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "申請ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "事業所ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "application_number": {
            "type": "integer",
            "description": "申請No",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "applicant_id": {
            "type": "integer",
            "description": "申請者のユーザーID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "approver_ids": {
            "description": "承認者のユーザーID配列\n次の場合、空配列になります。\n- 指定なしの申請経路を利用した、申請ステータスが承認済み以外の申請\n- 申請が差戻された",
            "type": "array",
            "items": {
              "type": "integer",
              "description": "承認者のユーザーID",
              "format": "int32",
              "minimum": 1,
              "maximum": 2147483647,
              "nullable": true,
              "example": 1
            }
          },
          "target_date": {
            "type": "string",
            "description": "対象日",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          },
          "clear_work_time": {
            "type": "boolean",
            "description": "勤務時間削除フラグ（false:勤務時間を修正する、true:勤務時間を削除する）"
          },
          "clock_in_at": {
            "type": "string",
            "description": "勤務開始時間",
            "pattern": "^[0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
            "nullable": true,
            "example": "12:00"
          },
          "clock_out_at": {
            "type": "string",
            "description": "勤務終了時間",
            "pattern": "^[0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
            "nullable": true,
            "example": "23:59"
          },
          "lateness_mins": {
            "type": "integer",
            "description": "遅刻分の時間（分単位）",
            "format": "int32"
          },
          "early_leaving_mins": {
            "type": "integer",
            "description": "早退分の時間（分単位）",
            "format": "int32"
          },
          "break_records": {
            "type": "array",
            "description": "休憩時間のリスト",
            "items": {
              "type": "object",
              "required": [
                "clock_in_at",
                "clock_out_at"
              ],
              "properties": {
                "clock_in_at": {
                  "type": "string",
                  "description": "開始時刻",
                  "pattern": "^[0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
                  "example": "12:00"
                },
                "clock_out_at": {
                  "type": "string",
                  "description": "終了時刻",
                  "pattern": "^[0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
                  "example": "23:59"
                }
              }
            }
          },
          "issue_date": {
            "type": "string",
            "description": "申請日",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          },
          "comment": {
            "type": "string",
            "description": "申請理由",
            "maxLength": 255,
            "nullable": true,
            "example": "申請理由"
          },
          "status": {
            "type": "string",
            "description": "申請ステータス。（draft:下書き、in_progress:申請中、approved:承認済、feedback:差戻し）",
            "enum": [
              "draft",
              "in_progress",
              "approved",
              "feedback"
            ],
            "example": "in_progress"
          },
          "passed_auto_check": {
            "type": "boolean",
            "description": "自動チェック結果",
            "example": true
          }
        }
      },
      "ApiV1WorkTimeResponseParams": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "application_number",
          "applicant_id",
          "target_date",
          "clear_work_time",
          "lateness_mins",
          "early_leaving_mins",
          "issue_date",
          "status",
          "passed_auto_check",
          "approval_flow_route_id",
          "approval_flow_route_name",
          "approval_flow_logs",
          "current_round"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "申請ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "事業所ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "application_number": {
            "type": "integer",
            "description": "申請No",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "applicant_id": {
            "type": "integer",
            "description": "申請者のユーザーID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "approver_ids": {
            "description": "承認者のユーザーID配列\n次の場合、空配列になります。\n- 指定なしの申請経路を利用した、申請ステータスが承認済み以外の申請\n- 申請が差戻された",
            "type": "array",
            "items": {
              "type": "integer",
              "description": "承認者のユーザーID",
              "format": "int32",
              "minimum": 1,
              "maximum": 2147483647,
              "nullable": true,
              "example": 1
            }
          },
          "target_date": {
            "type": "string",
            "description": "対象日",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          },
          "clear_work_time": {
            "type": "boolean",
            "description": "勤務時間削除フラグ（false:勤務時間を修正する、true:勤務時間を削除する）",
            "example": false
          },
          "clock_in_at": {
            "type": "string",
            "description": "勤務開始時間",
            "pattern": "^[0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
            "nullable": true,
            "example": "12:00"
          },
          "clock_out_at": {
            "type": "string",
            "description": "勤務終了時間",
            "pattern": "^[0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
            "nullable": true,
            "example": "23:59"
          },
          "lateness_mins": {
            "type": "integer",
            "description": "遅刻分の時間（分単位）",
            "format": "int32"
          },
          "early_leaving_mins": {
            "type": "integer",
            "description": "早退分の時間（分単位）",
            "format": "int32"
          },
          "break_records": {
            "type": "array",
            "description": "休憩時間のリスト",
            "items": {
              "$ref": "#/components/schemas/ApiV1WorkTimeIndexResponseParams/properties/break_records/items"
            }
          },
          "issue_date": {
            "type": "string",
            "description": "申請日",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          },
          "comment": {
            "type": "string",
            "description": "申請理由",
            "maxLength": 255,
            "nullable": true,
            "example": "申請理由"
          },
          "status": {
            "type": "string",
            "description": "申請ステータス。（draft:下書き、in_progress:申請中、approved:承認済、feedback:差戻し）",
            "enum": [
              "draft",
              "in_progress",
              "approved",
              "feedback"
            ],
            "example": "in_progress"
          },
          "passed_auto_check": {
            "type": "boolean",
            "description": "自動チェック結果",
            "example": true
          },
          "approval_flow_route_id": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647,
            "description": "申請経路ID",
            "example": 1
          },
          "approval_flow_route_name": {
            "type": "string",
            "description": "申請経路名",
            "example": "申請経路"
          },
          "approval_flow_logs": {
            "type": "array",
            "description": "承認履歴",
            "items": {
              "$ref": "#/components/schemas/ApiV1ApprovalFlowLogsParams"
            }
          },
          "current_step_id": {
            "type": "integer",
            "description": "現在承認ステップID<br>\n申請を差戻した場合、nullになります。",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1,
            "nullable": true
          },
          "current_round": {
            "type": "integer",
            "description": "現在のround。差戻し等により申請がstepの最初からやり直しになるとroundの値が増えます。",
            "format": "int32",
            "minimum": 0,
            "maximum": 2147483647,
            "example": 1
          }
        }
      },
      "ApiV1PaidHolidayIndexResponse": {
        "type": "object",
        "required": [
          "paid_holidays",
          "total_count"
        ],
        "properties": {
          "paid_holidays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiV1PaidHolidayIndexResponseParams"
            }
          },
          "total_count": {
            "type": "integer",
            "description": "合計件数",
            "format": "int32",
            "minimum": 0,
            "maximum": 2147483647,
            "example": 1
          }
        }
      },
      "ApiV1PaidHolidayResponse": {
        "type": "object",
        "required": [
          "paid_holiday"
        ],
        "properties": {
          "paid_holiday": {
            "$ref": "#/components/schemas/ApiV1PaidHolidayResponseParams"
          }
        }
      },
      "ApiV1PaidHolidayRequest": {
        "type": "object",
        "required": [
          "company_id",
          "target_date",
          "holiday_type",
          "approval_flow_route_id"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "事業所ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "target_date": {
            "type": "string",
            "description": "対象日（必須）",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "example": "2018-07-31"
          },
          "holiday_type": {
            "type": "string",
            "description": "取得単位（必須）（full:全休、half:半休、hour:時間休）",
            "enum": [
              "full",
              "half",
              "hour"
            ],
            "example": "half"
          },
          "start_at": {
            "type": "string",
            "description": "取得予定開始時間",
            "pattern": "^[0-9]{2}:[0-9]{2}?$",
            "example": "12:00"
          },
          "end_at": {
            "type": "string",
            "description": "取得予定終了時間",
            "pattern": "^[0-9]{2}:[0-9]{2}?$",
            "example": "23:59"
          },
          "comment": {
            "type": "string",
            "description": "申請理由",
            "maxLength": 255,
            "example": "申請理由"
          },
          "approval_flow_route_id": {
            "type": "integer",
            "description": "申請経路ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "approver_id": {
            "type": "integer",
            "description": "承認者のユーザーID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          }
        }
      },
      "ApiV1specialHolidayIndexResponse": {
        "type": "object",
        "required": [
          "special_holidays",
          "total_count"
        ],
        "properties": {
          "special_holidays": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "company_id",
                "application_number",
                "applicant_id",
                "target_date",
                "special_holiday_setting_id",
                "special_holiday_name",
                "holiday_type",
                "issue_date",
                "status",
                "revoke_status",
                "passed_auto_check"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "申請ID",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647,
                  "example": 1
                },
                "company_id": {
                  "type": "integer",
                  "description": "事業所ID",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647,
                  "example": 1
                },
                "application_number": {
                  "type": "integer",
                  "description": "申請No",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647,
                  "example": 1
                },
                "applicant_id": {
                  "type": "integer",
                  "description": "申請者のユーザーID",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647,
                  "example": 1
                },
                "approver_ids": {
                  "description": "承認者のユーザーID配列<br>\n次の場合、空配列になります。\n- 指定なしの申請経路を利用した、申請ステータスが承認済み以外の申請\n- 申請が差戻された",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "description": "承認者のユーザーID",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 2147483647,
                    "nullable": true,
                    "example": 1
                  }
                },
                "target_date": {
                  "type": "string",
                  "description": "対象日",
                  "format": "date",
                  "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
                },
                "special_holiday_setting_id": {
                  "type": "integer",
                  "description": "特別休暇設定ID",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647,
                  "example": 1
                },
                "special_holiday_name": {
                  "type": "string",
                  "description": "特別休暇名称",
                  "maxLength": 255,
                  "nullable": false,
                  "example": "特別休暇名称"
                },
                "holiday_type": {
                  "type": "string",
                  "description": "取得単位。（full:全休、half:半休、hour:時間休）",
                  "enum": [
                    "full",
                    "half",
                    "hour"
                  ],
                  "example": "half"
                },
                "start_at": {
                  "type": "string",
                  "description": "取得予定開始時間",
                  "pattern": "^[0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
                  "nullable": true,
                  "example": "12:00"
                },
                "end_at": {
                  "type": "string",
                  "description": "取得予定終了時間",
                  "pattern": "^[0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
                  "nullable": true,
                  "example": "23:59"
                },
                "issue_date": {
                  "type": "string",
                  "description": "申請日",
                  "format": "date",
                  "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
                },
                "comment": {
                  "type": "string",
                  "description": "申請理由",
                  "maxLength": 255,
                  "nullable": true,
                  "example": "申請理由"
                },
                "status": {
                  "type": "string",
                  "description": "申請ステータス。（draft:下書き、in_progress:申請中、approved:承認済、feedback:差戻し）",
                  "enum": [
                    "draft",
                    "in_progress",
                    "approved",
                    "feedback"
                  ],
                  "example": "in_progress"
                },
                "revoke_status": {
                  "type": "string",
                  "description": "取消申請ステータス。（null:取消申請されてない、revoking:取消中、revoked:取消済）",
                  "enum": [
                    "revoking",
                    "revoked"
                  ],
                  "nullable": true,
                  "example": null
                },
                "passed_auto_check": {
                  "type": "boolean",
                  "description": "自動チェック結果",
                  "example": true
                }
              }
            }
          },
          "total_count": {
            "type": "integer",
            "description": "合計件数",
            "format": "int32",
            "minimum": 0,
            "maximum": 2147483647,
            "example": 1
          }
        }
      },
      "ApiV1specialHolidayResponse": {
        "type": "object",
        "required": [
          "special_holiday"
        ],
        "properties": {
          "special_holiday": {
            "type": "object",
            "required": [
              "id",
              "company_id",
              "application_number",
              "applicant_id",
              "target_date",
              "special_holiday_setting_id",
              "special_holiday_name",
              "holiday_type",
              "issue_date",
              "status",
              "revoke_status",
              "passed_auto_check",
              "approval_flow_route_id",
              "approval_flow_route_name",
              "approval_flow_logs",
              "current_round"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "申請ID",
                "format": "int32",
                "minimum": 1,
                "maximum": 2147483647,
                "example": 1
              },
              "company_id": {
                "type": "integer",
                "description": "事業所ID",
                "format": "int32",
                "minimum": 1,
                "maximum": 2147483647,
                "example": 1
              },
              "application_number": {
                "type": "integer",
                "description": "申請No",
                "format": "int32",
                "minimum": 1,
                "maximum": 2147483647,
                "example": 1
              },
              "applicant_id": {
                "type": "integer",
                "description": "申請者のユーザーID",
                "format": "int32",
                "minimum": 1,
                "maximum": 2147483647,
                "example": 1
              },
              "approver_ids": {
                "description": "承認者のユーザーID配列<br>\n次の場合、空配列になります。\n- 指定なしの申請経路を利用した、申請ステータスが承認済み以外の申請\n- 申請が差戻された",
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "承認者のユーザーID",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647,
                  "nullable": true,
                  "example": 1
                }
              },
              "target_date": {
                "type": "string",
                "description": "対象日",
                "format": "date",
                "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
              },
              "special_holiday_setting_id": {
                "type": "integer",
                "description": "特別休暇設定ID",
                "format": "int32",
                "minimum": 1,
                "maximum": 2147483647,
                "example": 1
              },
              "special_holiday_name": {
                "type": "string",
                "description": "特別休暇名称",
                "maxLength": 255,
                "nullable": false,
                "example": "特別休暇名称"
              },
              "holiday_type": {
                "type": "string",
                "description": "取得単位。（full:全休、half:半休、hour:時間休）",
                "enum": [
                  "full",
                  "half",
                  "hour"
                ],
                "example": "half"
              },
              "start_at": {
                "type": "string",
                "description": "取得予定開始時間",
                "pattern": "^[0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
                "nullable": true,
                "example": "12:00"
              },
              "end_at": {
                "type": "string",
                "description": "取得予定終了時間",
                "pattern": "^[0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
                "nullable": true,
                "example": "23:59"
              },
              "issue_date": {
                "type": "string",
                "description": "申請日",
                "format": "date",
                "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
              },
              "comment": {
                "type": "string",
                "description": "申請理由",
                "maxLength": 255,
                "nullable": true,
                "example": "申請理由"
              },
              "status": {
                "type": "string",
                "description": "申請ステータス。（draft:下書き、in_progress:申請中、approved:承認済、feedback:差戻し）",
                "enum": [
                  "draft",
                  "in_progress",
                  "approved",
                  "feedback"
                ],
                "example": "in_progress"
              },
              "revoke_status": {
                "type": "string",
                "description": "取消申請ステータス。（null:取消申請されてない、revoking:取消中、revoked:取消済）",
                "enum": [
                  "revoking",
                  "revoked"
                ],
                "nullable": true,
                "example": null
              },
              "passed_auto_check": {
                "type": "boolean",
                "description": "自動チェック結果",
                "example": true
              },
              "approval_flow_route_id": {
                "type": "integer",
                "minimum": 1,
                "maximum": 2147483647,
                "description": "申請経路ID",
                "example": 1
              },
              "approval_flow_route_name": {
                "type": "string",
                "description": "申請経路名",
                "example": "申請経路"
              },
              "approval_flow_logs": {
                "type": "array",
                "description": "承認履歴",
                "items": {
                  "$ref": "#/components/schemas/ApiV1ApprovalFlowLogsParams"
                }
              },
              "current_step_id": {
                "type": "integer",
                "description": "現在承認ステップID<br>\n申請を差戻した場合、nullになります。",
                "format": "int32",
                "minimum": 1,
                "maximum": 2147483647,
                "example": 1,
                "nullable": true
              },
              "current_round": {
                "type": "integer",
                "description": "現在のround。差戻し等により申請がstepの最初からやり直しになるとroundの値が増えます。",
                "format": "int32",
                "minimum": 0,
                "maximum": 2147483647,
                "example": 1
              }
            }
          }
        }
      },
      "ApiV1specialHolidayRequest": {
        "type": "object",
        "required": [
          "company_id",
          "target_date",
          "special_holiday_setting_id",
          "holiday_type",
          "approval_flow_route_id"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "事業所ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "target_date": {
            "type": "string",
            "description": "対象日（必須）",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "example": "2018-07-31"
          },
          "special_holiday_setting_id": {
            "type": "integer",
            "description": "特別休暇設定ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "holiday_type": {
            "type": "string",
            "description": "取得単位（必須）（full:全休、half:半休、hour:時間休）",
            "enum": [
              "full",
              "half",
              "hour"
            ],
            "example": "half"
          },
          "start_at": {
            "type": "string",
            "description": "取得予定開始時間（条件付き必須）  \n取得単位が半休、時間休の場合は必須",
            "pattern": "^[0-9]{2}:[0-9]{2}?$",
            "example": "12:00"
          },
          "end_at": {
            "type": "string",
            "description": "取得予定終了時間（条件付き必須）  \n取得単位が半休、時間休の場合は必須",
            "pattern": "^[0-9]{2}:[0-9]{2}?$",
            "example": "23:59"
          },
          "comment": {
            "type": "string",
            "description": "申請理由",
            "maxLength": 255,
            "example": "申請理由"
          },
          "approval_flow_route_id": {
            "type": "integer",
            "description": "申請経路ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "approver_id": {
            "type": "integer",
            "description": "承認者のユーザーID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          }
        }
      },
      "ApiV1OvertimeWorkIndexResponse": {
        "type": "object",
        "required": [
          "overtime_works",
          "total_count"
        ],
        "properties": {
          "overtime_works": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiV1OvertimeWorkIndexResponseParams"
            }
          },
          "total_count": {
            "type": "integer",
            "description": "合計件数",
            "format": "int32",
            "minimum": 0,
            "maximum": 2147483647,
            "example": 1
          }
        }
      },
      "ApiV1OvertimeWorkResponse": {
        "type": "object",
        "required": [
          "overtime_work"
        ],
        "properties": {
          "overtime_work": {
            "$ref": "#/components/schemas/ApiV1OvertimeWorkResponseParams"
          }
        }
      },
      "ApiV1OvertimeWorkRequest": {
        "type": "object",
        "required": [
          "company_id",
          "target_date",
          "start_at",
          "end_at",
          "approval_flow_route_id"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "事業所ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "target_date": {
            "type": "string",
            "description": "対象日（必須）",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          },
          "start_at": {
            "type": "string",
            "description": "取得予定開始時間（必須）",
            "pattern": "^[0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
            "example": "12:00"
          },
          "end_at": {
            "type": "string",
            "description": "取得予定終了時間（必須）",
            "pattern": "^[0-9]{2}:[0-9]{2}(:[0-9]{2})?$",
            "example": "23:59"
          },
          "comment": {
            "type": "string",
            "description": "申請理由",
            "maxLength": 255,
            "example": "申請理由"
          },
          "approval_flow_route_id": {
            "type": "integer",
            "description": "申請経路ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "approver_id": {
            "type": "integer",
            "description": "承認者のユーザーID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          }
        }
      },
      "ApiV1ApprovalActionRequest": {
        "type": "object",
        "required": [
          "company_id",
          "approval_action",
          "target_round",
          "target_step_id"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "事業所ID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "approval_action": {
            "type": "string",
            "description": "申請操作。（approve:承認、cancel:取り消し、feedback:差戻し、force_feedback:承認取り消し）",
            "enum": [
              "approve",
              "cancel",
              "feedback",
              "force_feedback"
            ],
            "example": "approve"
          },
          "target_round": {
            "type": "integer",
            "description": "対象round。差戻し等により申請がstepの最初からやり直しになるとroundの値が増えます。取得APIレスポンス.current_roundを送信してください。",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "nullable": true,
            "example": 1
          },
          "target_step_id": {
            "type": "integer",
            "description": "対象承認ステップID。取得APIレスポンス.current_step_idを送信してください。",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "nullable": true,
            "example": 1
          },
          "next_approver_id": {
            "type": "integer",
            "description": "次のステップの承認者のユーザーID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "nullable": true,
            "example": 1
          }
        }
      },
      "ApiV1ApprovalFlowRoutesIndexResponse": {
        "type": "object",
        "required": [
          "approval_flow_routes"
        ],
        "properties": {
          "approval_flow_routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiV1ApprovalFlowRouteIndexResponseParams"
            }
          }
        }
      },
      "ApiV1ApprovalFlowRouteIndexResponseParams": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647,
            "description": "申請経路ID",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "申請経路名",
            "example": "申請経路"
          },
          "description": {
            "type": "string",
            "description": "申請経路の説明",
            "example": "申請経路の説明"
          },
          "user_id": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647,
            "description": "更新したユーザーのユーザーID",
            "example": 1,
            "nullable": true
          },
          "definition_system": {
            "type": "boolean",
            "description": "システム作成の申請経路かどうか",
            "example": true
          },
          "first_step_id": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647,
            "description": "最初の承認ステップのID",
            "example": 1
          },
          "usages": {
            "type": "array",
            "description": "申請種別（申請経路を使用できる申請種別を示します。例えば、AttendanceWorkflow の場合は、勤怠申請で使用できる申請経路です。）\n- AttendanceWorkflow - 勤怠申請\n- PersonalDataWorkflow - 身上変更申請",
            "items": {
              "type": "string",
              "enum": [
                "AttendanceWorkflow",
                "PersonalDataWorkflow"
              ],
              "example": "AttendanceWorkflow"
            }
          }
        }
      },
      "ApiV1ApprovalFlowRouteResponse": {
        "type": "object",
        "required": [
          "approval_flow_route"
        ],
        "properties": {
          "approval_flow_route": {
            "$ref": "#/components/schemas/ApiV1ApprovalFlowRouteResponseParams"
          }
        }
      },
      "ApiV1ApprovalFlowRouteResponseParams": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647,
            "description": "申請経路ID",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "申請経路名",
            "example": "申請経路"
          },
          "description": {
            "type": "string",
            "description": "申請経路の説明",
            "example": "申請経路の説明"
          },
          "user_id": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647,
            "description": "更新したユーザーのユーザーID",
            "example": 1,
            "nullable": true
          },
          "definition_system": {
            "type": "boolean",
            "description": "システム作成の申請経路かどうか",
            "example": true
          },
          "first_step_id": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647,
            "description": "最初の承認ステップのID",
            "example": 1
          },
          "usages": {
            "type": "array",
            "description": "申請種別（申請経路を使用できる申請種別を示します。例えば、AttendanceWorkflow の場合は、勤怠申請で使用できる申請経路です。）\n- AttendanceWorkflow - 勤怠申請\n- PersonalDataWorkflow - 身上変更申請",
            "items": {
              "type": "string",
              "enum": [
                "AttendanceWorkflow",
                "PersonalDataWorkflow"
              ],
              "example": "AttendanceWorkflow"
            }
          },
          "steps": {
            "$ref": "#/components/schemas/ApiV1FlowRouteStepSrializer"
          }
        }
      },
      "ApiV1FlowRouteStepSrializer": {
        "type": "array",
        "description": "承認ステップ（配列）",
        "items": {
          "type": "object",
          "required": [
            "id",
            "next_step_id",
            "resource_type"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647,
              "description": "承認ステップID",
              "example": 1
            },
            "next_step_id": {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647,
              "description": "次の承認ステップID",
              "nullable": true,
              "example": 2
            },
            "resource_type": {
              "type": "string",
              "description": "承認方法( predefined_user: メンバー指定 (1人), selected_user: 申請時にメンバー指定,unspecified: 指定なし, and_resource: メンバー指定 (複数、全員の承認), or_resource: メンバー指定 (複数、1人の承認), and_position: 役職指定 (複数、全員の承認), or_position: 役職指定 (複数、1人の承認) ) ",
              "enum": [
                "predefined_user",
                "selected_user",
                "unspecified",
                "and_resource",
                "or_resource",
                "and_position",
                "or_position"
              ],
              "example": "predefined_user"
            },
            "user_ids": {
              "type": "array",
              "description": "承認者のユーザーID (配列)",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 2147483647,
                "description": "承認者のユーザーID",
                "example": 3
              }
            }
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentController.index_response": {
        "type": "object",
        "properties": {
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentParams"
            }
          },
          "total_count": {
            "type": "integer",
            "description": "合計件数",
            "format": "int32",
            "minimum": 0,
            "maximum": 2147483647
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentParams": {
        "type": "object",
        "properties": {
          "employee_id": {
            "type": "integer",
            "description": "従業員ID",
            "format": "int32"
          },
          "num": {
            "type": "string",
            "description": "従業員番号",
            "nullable": true
          },
          "employee_display_name": {
            "type": "string",
            "description": "従業員名"
          },
          "is_not_adjust": {
            "type": "boolean",
            "description": "年末調整対象外\n- true - 年末調整対象外\n- false - 年末調整対象"
          },
          "status": {
            "type": "string",
            "description": "年末調整ステータス\n- initialized - 入力依頼前\n- in_employee_progress - 従業員入力中\n- submitted - 従業員入力済\n- fixed - 確定",
            "enum": [
              "initialized",
              "in_employee_progress",
              "submitted",
              "fixed"
            ]
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentController.update_employee_body": {
        "type": "object",
        "required": [
          "company_id",
          "employee"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "更新対象事業所ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "employee": {
            "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentEmployeeUpdateRequestSerializer"
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentEmployeeUpdateRequestSerializer": {
        "type": "object",
        "required": [
          "last_name",
          "first_name",
          "last_name_kana",
          "first_name_kana",
          "zipcode1",
          "zipcode2",
          "prefecture_code",
          "address"
        ],
        "properties": {
          "last_name": {
            "type": "string",
            "description": "姓 null不可",
            "maxLength": 255,
            "example": "山田"
          },
          "first_name": {
            "type": "string",
            "description": "名 null不可",
            "maxLength": 255,
            "example": "太郎"
          },
          "last_name_kana": {
            "type": "string",
            "description": "姓カナ",
            "maxLength": 255,
            "example": "ヤマダ"
          },
          "first_name_kana": {
            "type": "string",
            "description": "名カナ",
            "maxLength": 255,
            "example": "タロウ"
          },
          "zipcode1": {
            "type": "string",
            "description": "住民票住所の郵便番号1",
            "maxLength": 3,
            "example": "141"
          },
          "zipcode2": {
            "type": "string",
            "description": "住民票住所の郵便番号2",
            "maxLength": 4,
            "example": "0031"
          },
          "prefecture_code": {
            "type": "integer",
            "minimum": -1,
            "maximum": 46,
            "description": "住民票住所の都道府県コード（-1: 設定しない、0: 北海道、1:青森、2:岩手、3:宮城、4:秋田、5:山形、6:福島、7:茨城、8:栃木、9:群馬、10:埼玉、11:千葉、12:東京、13:神奈川、14:新潟、15:富山、16:石川、17:福井、18:山梨、19:長野、20:岐阜、21:静岡、22:愛知、23:三重、24:滋賀、25:京都、26:大阪、27:兵庫、28:奈良、29:和歌山、30:鳥取、31:島根、32:岡山、33:広島、34:山口、35:徳島、36:香川、37:愛媛、38:高知、39:福岡、40:佐賀、41:長崎、42:熊本、43:大分、44:宮崎、45:鹿児島、46:沖縄)",
            "example": 12
          },
          "address": {
            "type": "string",
            "description": "住民票住所の市区町村以降の住所",
            "maxLength": 255,
            "example": "品川区大崎1-2-2"
          },
          "address_kana": {
            "type": "string",
            "description": "住民票住所の市区町村以降の住所カナ",
            "maxLength": 255,
            "example": "シナガワクオオサキ1-2-2"
          },
          "payer_type": {
            "type": "string",
            "description": "所得税納税者区分 kou: 甲, otsu: 乙, hei: 丙",
            "enum": [
              "kou",
              "otsu",
              "hei"
            ]
          },
          "widow_type": {
            "type": "string",
            "description": "寡夫／寡婦かどうか null不可 na: 空白, widow: 寡婦, one_parent: ひとり親",
            "enum": [
              "na",
              "widow",
              "one_parent"
            ]
          },
          "disability_type": {
            "type": "string",
            "description": "障害者かどうか null不可 na: 空白, general: 障害者, heavy: 特別障害者",
            "enum": [
              "na",
              "general",
              "heavy"
            ]
          },
          "married": {
            "type": "boolean",
            "description": "配偶者の有無 null不可"
          },
          "is_working_student": {
            "type": "boolean",
            "description": "勤労学生かどうか null不可"
          },
          "is_foreigner": {
            "type": "boolean",
            "description": "外国人かどうか null不可"
          },
          "other_company_revenue": {
            "type": "integer",
            "description": "その他の事業所の給与収入",
            "example": 1000000,
            "minimum": 0,
            "maximum": 1999999999,
            "nullable": true
          },
          "all_other_income": {
            "type": "integer",
            "description": "給与以外の所得",
            "example": 1000000,
            "minimum": 0,
            "maximum": 1999999999,
            "nullable": true
          },
          "householder": {
            "type": "string",
            "description": "世帯主の続柄 myself: 本人, husband: 夫, wife: 妻, father: 父, mother: 母, child: 子, senior_brother: 兄, junior_brother: 弟, senior_sister: 姉, junior_sister: 妹, grandchild: 孫, grandfather: 祖父, grandmother: 祖母, father_in_law: 義父, mother_in_law: 義母, grandfather_in_law: 義祖父, grandmother_in_law: 義祖母, other: その他",
            "enum": [
              "myself",
              "husband",
              "wife",
              "father",
              "mother",
              "child",
              "senior_brother",
              "junior_brother",
              "senior_sister",
              "junior_sister",
              "grandchild",
              "grandfather",
              "grandmother",
              "father_in_law",
              "mother_in_law",
              "grandfather_in_law",
              "grandmother_in_law",
              "other"
            ]
          },
          "householder_name": {
            "type": "string",
            "description": "世帯主の名前",
            "maxLength": 255,
            "example": "山田 太郎"
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentController.update_employee_response": {
        "type": "object",
        "properties": {
          "employees": {
            "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentEmployeeSerializer"
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentEmployeeSerializer": {
        "type": "object",
        "properties": {
          "employee_id": {
            "type": "integer",
            "description": "従業員ID",
            "format": "int32"
          },
          "num": {
            "type": "string",
            "description": "従業員番号<br>\n従業員を判別しやすいよう管理することができます。（例: 1人目の正社員を A-001 と入力）",
            "example": "A-001",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "姓 null不可",
            "maxLength": 255,
            "example": "山田"
          },
          "first_name": {
            "type": "string",
            "description": "名 null不可",
            "maxLength": 255,
            "example": "太郎"
          },
          "last_name_kana": {
            "type": "string",
            "description": "姓カナ",
            "maxLength": 255,
            "example": "ヤマダ"
          },
          "first_name_kana": {
            "type": "string",
            "description": "名カナ",
            "maxLength": 255,
            "example": "タロウ"
          },
          "birth_date": {
            "type": "string",
            "description": "生年月日",
            "format": "date"
          },
          "entry_date": {
            "type": "string",
            "description": "入社日",
            "format": "date"
          },
          "retire_date": {
            "type": "string",
            "description": "退職日",
            "format": "date",
            "nullable": true
          },
          "employment_type": {
            "type": "string",
            "description": "雇用形態 board-member: 役員, (空文字列): 役員以外",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "肩書",
            "nullable": true
          },
          "zipcode1": {
            "type": "string",
            "description": "住民票住所の郵便番号1",
            "maxLength": 3,
            "nullable": true,
            "example": "141"
          },
          "zipcode2": {
            "type": "string",
            "description": "住民票住所の郵便番号2",
            "maxLength": 4,
            "nullable": true,
            "example": "0031"
          },
          "prefecture_code": {
            "type": "integer",
            "nullable": true,
            "minimum": -1,
            "maximum": 46,
            "description": "住民票住所の都道府県コード（-1: 設定しない、0: 北海道、1:青森、2:岩手、3:宮城、4:秋田、5:山形、6:福島、7:茨城、8:栃木、9:群馬、10:埼玉、11:千葉、12:東京、13:神奈川、14:新潟、15:富山、16:石川、17:福井、18:山梨、19:長野、20:岐阜、21:静岡、22:愛知、23:三重、24:滋賀、25:京都、26:大阪、27:兵庫、28:奈良、29:和歌山、30:鳥取、31:島根、32:岡山、33:広島、34:山口、35:徳島、36:香川、37:愛媛、38:高知、39:福岡、40:佐賀、41:長崎、42:熊本、43:大分、44:宮崎、45:鹿児島、46:沖縄)",
            "example": 12
          },
          "address": {
            "type": "string",
            "nullable": true,
            "description": "住民票住所の市区町村以降の住所",
            "maxLength": 255,
            "example": "品川区大崎1-2-2"
          },
          "address_kana": {
            "type": "string",
            "description": "住民票住所の市区町村以降の住所カナ",
            "maxLength": 255,
            "example": "シナガワクオオサキ1-2-2"
          },
          "payer_type": {
            "type": "string",
            "description": "所得税納税者区分 kou: 甲, otsu: 乙, hei: 丙",
            "enum": [
              "kou",
              "otsu",
              "hei"
            ]
          },
          "widow_type": {
            "type": "string",
            "description": "寡夫／寡婦かどうか null不可 na: 空白, widow: 寡婦, one_parent: ひとり親",
            "enum": [
              "na",
              "widow",
              "one_parent"
            ]
          },
          "disability_type": {
            "type": "string",
            "description": "障害者かどうか na: 空白, general: 障害者, heavy: 特別障害者",
            "enum": [
              "na",
              "general",
              "heavy"
            ]
          },
          "married": {
            "type": "boolean",
            "description": "配偶者の有無"
          },
          "is_working_student": {
            "type": "boolean",
            "description": "勤労学生かどうか"
          },
          "is_foreigner": {
            "type": "boolean",
            "description": "外国人かどうか"
          },
          "other_company_revenue": {
            "type": "integer",
            "description": "その他の事業所の給与収入",
            "example": 1000000,
            "minimum": 0,
            "maximum": 1999999999,
            "nullable": true
          },
          "all_other_income": {
            "type": "integer",
            "description": "給与以外の所得",
            "example": 1000000,
            "minimum": 0,
            "maximum": 1999999999,
            "nullable": true
          },
          "householder": {
            "type": "string",
            "description": "世帯主の続柄 myself: 本人, husband: 夫, wife: 妻, father: 父, mother: 母, child: 子, senior_brother: 兄, junior_brother: 弟, senior_sister: 姉, junior_sister: 妹, grandchild: 孫, grandfather: 祖父, grandmother: 祖母, father_in_law: 義父, mother_in_law: 義母, grandfather_in_law: 義祖父, grandmother_in_law: 義祖母, other: その他",
            "enum": [
              "myself",
              "husband",
              "wife",
              "father",
              "mother",
              "child",
              "senior_brother",
              "junior_brother",
              "senior_sister",
              "junior_sister",
              "grandchild",
              "grandfather",
              "grandmother",
              "father_in_law",
              "mother_in_law",
              "grandfather_in_law",
              "grandmother_in_law",
              "other"
            ]
          },
          "householder_name": {
            "type": "string",
            "description": "世帯主の名前",
            "maxLength": 255,
            "example": "山田 太郎"
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentController.show_response": {
        "type": "object",
        "properties": {
          "employee": {
            "description": "本人情報",
            "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentEmployeeSerializer"
          },
          "dependents": {
            "type": "array",
            "description": "家族情報(年末調整対象外の場合は取得できません。)",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentDependentSerializer"
            }
          },
          "insurances": {
            "type": "array",
            "description": "保険料情報(年末調整対象外の場合は取得できません。)",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentInsuranceSerializer"
            }
          },
          "housing_loan_deduction": {
            "type": "integer",
            "description": "住宅借入金等特別控除(年末調整対象外の場合は取得できません。)",
            "format": "int32",
            "minimum": 0,
            "maximum": 999999999,
            "example": 500000
          },
          "housing_loans": {
            "type": "array",
            "description": "住宅ローン(年末調整対象外の場合は取得できません。)",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentHousingLoanSerializer"
            }
          },
          "payroll_and_bonus": {
            "description": "給与・賞与",
            "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentPayrollAndBonusSerializer"
          },
          "previous_job": {
            "description": "前職情報",
            "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentPreviousJobSerializer",
            "nullable": true
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentPayrollAndBonusSerializer": {
        "type": "object",
        "properties": {
          "fixed_payroll": {
            "type": "integer",
            "description": "確定給与額",
            "format": "int32",
            "minimum": -999999999,
            "maximum": 999999999,
            "example": 10000000
          },
          "fixed_payroll_deduction": {
            "type": "integer",
            "description": "確定給与控除額",
            "format": "int32",
            "minimum": -999999999,
            "maximum": 999999999,
            "example": 1000000
          },
          "fixed_payroll_income_tax": {
            "type": "integer",
            "description": "確定給与所得税額",
            "format": "int32",
            "minimum": -999999999,
            "maximum": 999999999,
            "example": 1000000
          },
          "fixed_bonus": {
            "type": "integer",
            "description": "確定賞与額",
            "format": "int32",
            "minimum": -999999999,
            "maximum": 999999999,
            "example": 10000000
          },
          "fixed_bonus_deduction": {
            "type": "integer",
            "description": "確定賞与控除額",
            "format": "int32",
            "minimum": -999999999,
            "maximum": 999999999,
            "example": 1000000
          },
          "fixed_bonus_income_tax": {
            "type": "integer",
            "description": "確定賞与所得税額",
            "format": "int32",
            "minimum": -999999999,
            "maximum": 999999999,
            "example": 1000000
          },
          "unentered_payroll_amount": {
            "type": "integer",
            "description": "未入力給与額",
            "format": "int32",
            "minimum": -999999999,
            "maximum": 999999999,
            "example": 500000
          },
          "unentered_payroll_deduction_amount": {
            "type": "integer",
            "description": "未入力給与控除額",
            "format": "int32",
            "minimum": -999999999,
            "maximum": 999999999,
            "example": 500000
          },
          "unentered_payroll_income_tax_amount": {
            "type": "integer",
            "description": "未入力給与所得税額",
            "format": "int32",
            "minimum": -999999999,
            "maximum": 999999999,
            "example": 500000
          },
          "unentered_bonus_amount": {
            "type": "integer",
            "description": "未入力賞与額",
            "format": "int32",
            "minimum": -999999999,
            "maximum": 999999999,
            "example": 500000
          },
          "unentered_bonus_deduction_amount": {
            "type": "integer",
            "description": "未入力賞与控除額",
            "format": "int32",
            "minimum": -999999999,
            "maximum": 999999999,
            "example": 500000
          },
          "unentered_bonus_income_tax_amount": {
            "type": "integer",
            "description": "未入力賞与所得税額",
            "format": "int32",
            "minimum": -999999999,
            "maximum": 999999999,
            "example": 500000
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentPayrollAndBonusUpdateRequestSerializer": {
        "type": "object",
        "properties": {
          "unentered_payroll_amount": {
            "type": "integer",
            "description": "未入力給与額",
            "format": "int32",
            "minimum": -999999999,
            "maximum": 999999999,
            "example": 1000000
          },
          "unentered_payroll_deduction_amount": {
            "type": "integer",
            "description": "未入力給与控除額",
            "format": "int32",
            "minimum": -999999999,
            "maximum": 999999999,
            "example": 1000000
          },
          "unentered_payroll_income_tax_amount": {
            "type": "integer",
            "description": "未入力給与所得税額",
            "format": "int32",
            "minimum": -999999999,
            "maximum": 999999999,
            "example": 1000000
          },
          "unentered_bonus_amount": {
            "type": "integer",
            "description": "未入力賞与額",
            "format": "int32",
            "minimum": -999999999,
            "maximum": 999999999,
            "example": 1000000
          },
          "unentered_bonus_deduction_amount": {
            "type": "integer",
            "description": "未入力賞与控除額",
            "format": "int32",
            "minimum": -999999999,
            "maximum": 999999999,
            "example": 1000000
          },
          "unentered_bonus_income_tax_amount": {
            "type": "integer",
            "description": "未入力賞与所得税額",
            "format": "int32",
            "minimum": -999999999,
            "maximum": 999999999,
            "example": 1000000
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentController.update_payroll_and_bonus_body": {
        "type": "object",
        "required": [
          "company_id",
          "payroll_and_bonus"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "更新対象事業所ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "payroll_and_bonus": {
            "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentPayrollAndBonusUpdateRequestSerializer"
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentController.update_payroll_and_bonus_response": {
        "type": "object",
        "properties": {
          "payroll_and_bonus": {
            "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentPayrollAndBonusSerializer"
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentController.update_dependents_body": {
        "type": "object",
        "required": [
          "company_id",
          "dependents"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "更新対象事業所ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "dependents": {
            "type": "array",
            "description": "家族情報",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentDependentUpdateRequestSerializer"
            }
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentDependentUpdateRequestSerializer": {
        "type": "object",
        "required": [
          "last_name",
          "first_name",
          "relationship",
          "birth_date",
          "social_insurance_and_tax_dependent",
          "disability_type",
          "residence_type"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "家族情報ID（idがない場合は新規作成になる)",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "destroy": {
            "type": "boolean",
            "description": "家族情報を削除するか true: 削除する, false: 削除しない",
            "example": false
          },
          "last_name": {
            "type": "string",
            "description": "姓 null不可",
            "maxLength": 255,
            "example": "山田"
          },
          "first_name": {
            "type": "string",
            "description": "名 null不可",
            "maxLength": 255,
            "example": "花子"
          },
          "last_name_kana": {
            "type": "string",
            "description": "姓カナ",
            "maxLength": 255,
            "example": "ヤマダ"
          },
          "first_name_kana": {
            "type": "string",
            "description": "名カナ",
            "maxLength": 255,
            "example": "ハナコ"
          },
          "relationship": {
            "type": "string",
            "description": "続柄 null不可 spouse: 配偶者, father: 父, mother: 母, child: 子, senior_brother: 兄, junior_brother: 弟, senior_sister: 姉, junior_sister: 妹, grandchild: 孫, grandfather: 祖父, grandmother: 祖母, father_in_law: 義父, mother_in_law: 義母, grandfather_in_law: 義祖父, grandmother_in_law: 義祖母, other: その他, great_grandfather: 曽祖父, great_grandmother: 曽祖母, spouses_child: 配偶者の連れ子",
            "enum": [
              "spouse",
              "father",
              "mother",
              "child",
              "senior_brother",
              "junior_brother",
              "senior_sister",
              "junior_sister",
              "grandchild",
              "grandfather",
              "grandmother",
              "father_in_law",
              "mother_in_law",
              "grandfather_in_law",
              "grandmother_in_law",
              "other",
              "great_grandfather",
              "great_grandmother",
              "spouses_child"
            ]
          },
          "birth_date": {
            "type": "string",
            "description": "生年月日 null不可 1900年1月1日から現在年+5の12月31日まで登録可能",
            "format": "date",
            "example": "1999-01-01",
            "pattern": "^[1-9][0-9]{3}-[0-9]{2}-[0-9]{2}$"
          },
          "social_insurance_and_tax_dependent": {
            "type": "string",
            "description": "扶養状況 social_insurance_and_tax: 所得税・住民税と社会保険, tax_only: 所得税・住民税のみ, social_insurance_only: 社会保険のみ, not_dependent: 扶養していない",
            "enum": [
              "social_insurance_and_tax",
              "tax_only",
              "social_insurance_only",
              "not_dependent"
            ]
          },
          "income": {
            "type": "integer",
            "description": "所得 配偶者は「扶養状況」がsocial_insurance_only又はnot_dependentの場合のみ更新可能。配偶者以外は更新可能。 配偶者で「扶養状況」がsocial_insurance_and_tax又はtax_onlyの場合、「給与収入」、「給与以外の所得」から自動で「所得」が計算されます。",
            "format": "int32",
            "minimum": 0,
            "maximum": 999999999
          },
          "employment_revenue": {
            "type": "integer",
            "description": "給与収入 配偶者は「扶養状況」がsocial_insurance_and_tax又はtax_onlyの場合のみ更新可能。配偶者以外は更新不可。更新不可の場合は0となります。",
            "format": "int32",
            "minimum": 0,
            "maximum": 999999999
          },
          "all_other_income": {
            "type": "integer",
            "description": "給与以外の所得 配偶者は「扶養状況」がsocial_insurance_and_tax又はtax_onlyの場合のみ更新可能。配偶者以外は更新不可。更新不可の場合は0となります。",
            "format": "int32",
            "minimum": 0,
            "maximum": 999999999
          },
          "disability_type": {
            "type": "string",
            "description": "障害に該当するか null不可 na: 障害なし, general: 一般の障害者, heavy: 特別障害者",
            "enum": [
              "na",
              "general",
              "heavy"
            ]
          },
          "residence_type": {
            "type": "string",
            "description": "同居・別居 null不可 live_in: 同居, resident: 別居(国内), non_resident: 別居(国外)",
            "enum": [
              "live_in",
              "resident",
              "non_resident"
            ]
          },
          "zipcode1": {
            "type": "string",
            "description": "住民票住所の郵便番号1 「同居・別居」が「同居」の場合は「年末調整従業員情報」の「住民票住所の郵便番号1」を登録",
            "maxLength": 3,
            "nullable": true,
            "example": "141"
          },
          "zipcode2": {
            "type": "string",
            "description": "住民票住所の郵便番号2 「同居・別居」が「同居」の場合は「年末調整従業員情報」の「住民票住所の郵便番号2」を登録",
            "maxLength": 4,
            "nullable": true,
            "example": "0031"
          },
          "prefecture_code": {
            "type": "integer",
            "minimum": -1,
            "maximum": 46,
            "description": "住民票住所の都道府県コード（-1: 設定しない、0: 北海道、1:青森、2:岩手、3:宮城、4:秋田、5:山形、6:福島、7:茨城、8:栃木、9:群馬、10:埼玉、11:千葉、12:東京、13:神奈川、14:新潟、15:富山、16:石川、17:福井、18:山梨、19:長野、20:岐阜、21:静岡、22:愛知、23:三重、24:滋賀、25:京都、26:大阪、27:兵庫、28:奈良、29:和歌山、30:鳥取、31:島根、32:岡山、33:広島、34:山口、35:徳島、36:香川、37:愛媛、38:高知、39:福岡、40:佐賀、41:長崎、42:熊本、43:大分、44:宮崎、45:鹿児島、46:沖縄)  「同居・別居」が「同居」の場合は「年末調整従業員情報」の「住民票住所の都道府県コード」を登録",
            "example": 12
          },
          "address": {
            "type": "string",
            "description": "住民票住所の市区町村以降の住所 「同居・別居」が「同居」の場合は「年末調整従業員情報」の「住民票住所の市区町村以降の住所」を登録",
            "maxLength": 255,
            "example": "品川区大崎1-2-2"
          },
          "address_kana": {
            "type": "string",
            "description": "住民票住所の市区町村以降の住所カナ 「同居・別居」が「同居」の場合は「年末調整従業員情報」の「住民票住所の市区町村以降の住所カナ」を登録",
            "maxLength": 255,
            "example": "シナガワクオオサキ1-2-2"
          },
          "annual_remittance_amount": {
            "type": "integer",
            "description": "国外居住親族への年間の送金額 「同居・別居」が「同居」、「別居(国内)」の場合は登録不可",
            "format": "int32",
            "minimum": 0,
            "maximum": 999999999
          },
          "non_resident_dependents_reason": {
            "type": "string",
            "enum": [
              "none",
              "over_16_to_under_30_or_over_70",
              "study_abroad",
              "handicapped",
              "over_38_man"
            ],
            "description": "非居住者である親族の条件 none: なし, over_16_to_under_30_or_over_70: 16歳以上30歳未満又は70歳以上, study_abroad: 留学, handicapped: 障害者, over_38_man: 38万円以上の支払 続柄が「配偶者」または「同居・別居」が「同居」、「別居(国内)」の場合は登録不可",
            "format": "string"
          },
          "is_resident_tax_only_deduction": {
            "type": "boolean",
            "description": "住民税のみの控除対象かどうか"
          },
          "retirement_income": {
            "type": "integer",
            "description": "退職所得",
            "format": "int32",
            "minimum": 0,
            "maximum": 999999999
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentController.update_dependents_response": {
        "type": "object",
        "properties": {
          "dependents": {
            "type": "array",
            "description": "家族情報",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentDependentSerializer"
            }
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentDependentSerializer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "家族情報ID",
            "format": "int32",
            "example": 1
          },
          "last_name": {
            "type": "string",
            "description": "姓 null不可",
            "maxLength": 255,
            "example": "山田"
          },
          "first_name": {
            "type": "string",
            "description": "名 null不可",
            "maxLength": 255,
            "example": "花子"
          },
          "last_name_kana": {
            "type": "string",
            "description": "姓カナ",
            "maxLength": 255,
            "example": "ヤマダ"
          },
          "first_name_kana": {
            "type": "string",
            "description": "名カナ",
            "maxLength": 255,
            "example": "ハナコ"
          },
          "relationship": {
            "type": "string",
            "description": "続柄 null不可 spouse: 配偶者, father: 父, mother: 母, child: 子, senior_brother: 兄, junior_brother: 弟, senior_sister: 姉, junior_sister: 妹, grandchild: 孫, grandfather: 祖父, grandmother: 祖母, father_in_law: 義父, mother_in_law: 義母, grandfather_in_law: 義祖父, grandmother_in_law: 義祖母, other: その他, great_grandfather: 曽祖父, great_grandmother: 曽祖母, spouses_child: 配偶者の連れ子",
            "enum": [
              "spouse",
              "father",
              "mother",
              "child",
              "senior_brother",
              "junior_brother",
              "senior_sister",
              "junior_sister",
              "grandchild",
              "grandfather",
              "grandmother",
              "father_in_law",
              "mother_in_law",
              "grandfather_in_law",
              "grandmother_in_law",
              "other",
              "great_grandfather",
              "great_grandmother",
              "spouses_child"
            ]
          },
          "birth_date": {
            "type": "string",
            "description": "生年月日 null不可 1900年1月1日から現在年+5年12月31日まで登録可能",
            "format": "date",
            "example": "1999-01-01"
          },
          "social_insurance_and_tax_dependent": {
            "type": "string",
            "description": "扶養状況 social_insurance_and_tax: 所得税・住民税と社会保険, tax_only: 所得税・住民税のみ, social_insurance_only: 社会保険のみ, not_dependent: 扶養していない",
            "enum": [
              "social_insurance_and_tax",
              "tax_only",
              "social_insurance_only",
              "not_dependent"
            ]
          },
          "income": {
            "type": "integer",
            "description": "所得 配偶者は「扶養状況」がsocial_insurance_only又はnot_dependentの場合のみ更新可能。配偶者以外は更新可能。 配偶者で「扶養状況」がsocial_insurance_and_tax又はtax_onlyの場合、「給与収入」、「給与以外の所得」から自動で「所得」が計算されます。",
            "format": "int32",
            "minimum": 0,
            "maximum": 999999999
          },
          "employment_revenue": {
            "type": "integer",
            "description": "給与収入 配偶者は「扶養状況」がsocial_insurance_and_tax又はtax_onlyの場合のみ更新可能。配偶者以外は更新不可。更新不可の場合は0となります。",
            "format": "int32",
            "minimum": 0,
            "maximum": 999999999
          },
          "all_other_income": {
            "type": "integer",
            "description": "給与以外の所得 配偶者は「扶養状況」がsocial_insurance_and_tax又はtax_onlyの場合のみ更新可能。配偶者以外は更新不可。更新不可の場合は0となります。",
            "format": "int32",
            "minimum": 0,
            "maximum": 999999999
          },
          "disability_type": {
            "type": "string",
            "description": "障害に該当するか null不可 na: 障害なし, general: 一般の障害者, heavy: 特別障害者",
            "enum": [
              "na",
              "general",
              "heavy"
            ]
          },
          "residence_type": {
            "type": "string",
            "description": "同居・別居 null不可 live_in: 同居, resident: 別居(国内), non_resident: 別居(国外)",
            "enum": [
              "live_in",
              "resident",
              "non_resident"
            ]
          },
          "zipcode1": {
            "type": "string",
            "description": "住民票住所の郵便番号1 「同居・別居」が「同居」の場合は「年末調整従業員情報」の「住民票住所の郵便番号1」を登録",
            "maxLength": 3,
            "nullable": true,
            "example": "141"
          },
          "zipcode2": {
            "type": "string",
            "description": "住民票住所の郵便番号2 「同居・別居」が「同居」の場合は「年末調整従業員情報」の「住民票住所の郵便番号2」を登録",
            "maxLength": 4,
            "nullable": true,
            "example": "0031"
          },
          "prefecture_code": {
            "type": "integer",
            "minimum": -1,
            "maximum": 46,
            "description": "住民票住所の都道府県コード（-1: 設定しない、0: 北海道、1:青森、2:岩手、3:宮城、4:秋田、5:山形、6:福島、7:茨城、8:栃木、9:群馬、10:埼玉、11:千葉、12:東京、13:神奈川、14:新潟、15:富山、16:石川、17:福井、18:山梨、19:長野、20:岐阜、21:静岡、22:愛知、23:三重、24:滋賀、25:京都、26:大阪、27:兵庫、28:奈良、29:和歌山、30:鳥取、31:島根、32:岡山、33:広島、34:山口、35:徳島、36:香川、37:愛媛、38:高知、39:福岡、40:佐賀、41:長崎、42:熊本、43:大分、44:宮崎、45:鹿児島、46:沖縄)  「同居・別居」が「同居」の場合は「年末調整従業員情報」の「住民票住所の都道府県コード」を登録",
            "example": 12
          },
          "address": {
            "type": "string",
            "description": "住民票住所の市区町村以降の住所 「同居・別居」が「同居」の場合は「年末調整従業員情報」の「住民票住所の市区町村以降の住所」を登録",
            "maxLength": 255,
            "example": "品川区大崎1-2-2"
          },
          "address_kana": {
            "type": "string",
            "description": "住民票住所の市区町村以降の住所カナ 「同居・別居」が「同居」の場合は「年末調整従業員情報」の「住民票住所の市区町村以降の住所カナ」を登録",
            "maxLength": 255,
            "example": "シナガワクオオサキ1-2-2"
          },
          "annual_remittance_amount": {
            "type": "integer",
            "description": "国外居住親族への年間の送金額 「同居・別居」が「同居」、「別居(国内)」の場合は登録不可",
            "format": "int32",
            "minimum": 0,
            "maximum": 999999999
          },
          "non_resident_dependents_reason": {
            "type": "string",
            "enum": [
              "none",
              "over_16_to_under_30_or_over_70",
              "study_abroad",
              "handicapped",
              "over_38_man"
            ],
            "description": "非居住者である親族の条件 none: なし, over_16_to_under_30_or_over_70: 16歳以上30歳未満又は70歳以上, study_abroad: 留学, handicapped: 障害者, over_38_man: 38万円以上の支払 続柄が「配偶者」または「同居・別居」が「同居」、「別居(国内)」の場合は登録不可",
            "format": "string"
          },
          "is_resident_tax_only_deduction": {
            "type": "boolean",
            "description": "住民税のみの控除対象かどうか"
          },
          "retirement_income": {
            "type": "integer",
            "description": "退職所得",
            "format": "int32",
            "minimum": 0,
            "maximum": 999999999
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentController.update_previous_job_body": {
        "type": "object",
        "required": [
          "company_id",
          "previous_job"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "更新対象事業所ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "previous_job": {
            "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentPreviousJobUpdateRequestSerializer"
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentPreviousJobUpdateRequestSerializer": {
        "type": "object",
        "required": [
          "income",
          "deduction",
          "withholding_tax_amount",
          "company_name",
          "company_address",
          "retire_date"
        ],
        "properties": {
          "income": {
            "type": "integer",
            "description": "前職の支払金額",
            "example": 5000000,
            "minimum": -999999999,
            "maximum": 999999999
          },
          "deduction": {
            "type": "integer",
            "description": "前職の社会保険料等の金額",
            "example": 1200000,
            "minimum": -999999999,
            "maximum": 999999999
          },
          "withholding_tax_amount": {
            "type": "integer",
            "description": "前職の源泉徴収額",
            "example": 100000,
            "minimum": -999999999,
            "maximum": 999999999
          },
          "company_name": {
            "type": "string",
            "description": "前職の社名",
            "maxLength": 255,
            "example": "株式会社 前職"
          },
          "company_address": {
            "type": "string",
            "description": "前職の事業所住所",
            "maxLength": 255,
            "example": "品川区大崎1-2-2"
          },
          "retire_date": {
            "type": "string",
            "description": "前職の退職日 現在年-10年1月1日から現在年+5年12月31日まで登録可能",
            "format": "date",
            "example": "2022-03-31"
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentController.update_previous_job_response": {
        "type": "object",
        "properties": {
          "previous_job": {
            "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentPreviousJobSerializer"
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentPreviousJobSerializer": {
        "type": "object",
        "nullable": true,
        "properties": {
          "income": {
            "type": "integer",
            "description": "前職の支払金額",
            "example": 5000000,
            "minimum": -999999999,
            "maximum": 999999999
          },
          "deduction": {
            "type": "integer",
            "description": "前職の社会保険料等の金額",
            "example": 1200000,
            "minimum": -999999999,
            "maximum": 999999999
          },
          "withholding_tax_amount": {
            "type": "integer",
            "description": "前職の源泉徴収額",
            "example": 100000,
            "minimum": -999999999,
            "maximum": 999999999
          },
          "company_name": {
            "type": "string",
            "description": "前職の社名",
            "maxLength": 255,
            "example": "株式会社 前職"
          },
          "company_address": {
            "type": "string",
            "description": "前職の事業所住所",
            "maxLength": 255,
            "example": "品川区大崎1-2-2"
          },
          "retire_date": {
            "type": "string",
            "description": "前職の退職日 現在年-10年1月1日から現在年+5年12月31日まで登録可能",
            "format": "date",
            "example": "2022-03-31"
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentController.update_insurance_body": {
        "type": "object",
        "required": [
          "company_id",
          "insurance"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "更新対象事業所ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "insurance": {
            "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentInsuranceUpdateRequestSerializer"
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentInsuranceUpdateRequestSerializer": {
        "type": "object",
        "required": [
          "type",
          "category",
          "new_or_old",
          "amount"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "保険の種類 life_care_pension_insurance: 生命保険・介護医療保険・個人年金保険, earthquake_non_life_insurance: 地震保険・旧長期損害保険, social_insurance: 社会保険, other_insurance: その他の保険（小規模企業共済等）",
            "enum": [
              "life_care_pension_insurance",
              "earthquake_non_life_insurance",
              "social_insurance",
              "other_insurance"
            ]
          },
          "category": {
            "type": "string",
            "description": "区分<br>\n保険会社等が発行する証明書類に基づいて区分を設定してください。<br>\n保険の種類によって設定可能な値が変わります。<br>\n・life_care_pension_insurance<br>\n　life: 生命保険<br>\n　care: 介護保険<br>\n　pension: 個人年金保険<br>\n・earthquake_non_life_insurance<br>\n　earthquake: 地震保険<br>\n　old_long_term_non_life: 旧長期損害保険<br>\n・social_insurance<br>\n　national_pension: 国民年金<br>\n　national_pension_fund_premium: 国民年金基金<br>\n　national_health: 国民健康保険<br>\n　health: 健康保険<br>\n　care_insurance_deduction_of_pension: 介護保険<br>\n　employee_pension: 厚生年金<br>\n　advanced_elderly_medical: 後期高齢者医療保険<br>\n　none: その他（印刷後に手書き）<br>\n・other_insurance<br>\n　sema: 独立行政法人中小企業基盤整備機構の共済契約の掛金<br>\n　idc: 個人型確定拠出年金（iDeCo）<br>\n　cdc: 企業型確定拠出年金<br>\n　dsma: 心身障害者扶養共済制度に関する契約の掛金<br>",
            "enum": [
              "life",
              "care",
              "pension",
              "earthquake",
              "old_long_term_non_life",
              "national_pension",
              "national_pension_fund_premium",
              "national_health",
              "care_insurance_deduction_of_pension",
              "health",
              "employee_pension",
              "advanced_elderly_medical",
              "sema",
              "idc",
              "cdc",
              "dsma",
              "none"
            ],
            "example": "life"
          },
          "new_or_old": {
            "type": "string",
            "description": "新旧区分<br>\n区分が生命保険または個人年金保険の時のみ、新制度なら new を、旧制度なら old を指定します。<br>\n上記以外の保険では none を指定してください。",
            "enum": [
              "new",
              "old",
              "none"
            ]
          },
          "company_name": {
            "type": "string",
            "description": "保険会社等の名称<br>\n保険の種類にて、生命保険・介護医療保険・個人年金保険または地震保険・旧長期損害保険を選択している時のみ、入力した値が反映されます。<br>\n上記以外の保険では入力した値は反映されません。",
            "maxLength": 255,
            "example": "freee生命保険株式会社",
            "nullable": true
          },
          "kind_of_purpose": {
            "type": "string",
            "description": "保険等の種類（目的）<br>\n保険の種類にて、生命保険・介護医療保険・個人年金保険または地震保険・旧長期損害保険を選択している時のみ、入力した値が反映されます。<br>\n上記以外の保険では入力した値は反映されません。",
            "maxLength": 255,
            "example": "利差配当付終身",
            "nullable": true
          },
          "period": {
            "type": "string",
            "description": "保険期間又は年金支払期間<br>\n保険の種類にて、生命保険・介護医療保険・個人年金保険または地震保険・旧長期損害保険を選択している時のみ、入力した値が反映されます。<br>\n上記以外の保険では入力した値は反映されません。",
            "example": "終身",
            "nullable": true,
            "enum": [
              "終身",
              "0年",
              "1年",
              "2年",
              "3年",
              "4年",
              "5年",
              "6年",
              "7年",
              "8年",
              "9年",
              "10年",
              "11年",
              "12年",
              "13年",
              "14年",
              "15年",
              "16年",
              "17年",
              "18年",
              "19年",
              "20年",
              "21年",
              "22年",
              "23年",
              "24年",
              "25年",
              "26年",
              "27年",
              "28年",
              "29年",
              "30年",
              "31年",
              "32年",
              "33年",
              "34年",
              "35年",
              "36年",
              "37年",
              "38年",
              "39年",
              "40年",
              "41年",
              "42年",
              "43年",
              "44年",
              "45年",
              "46年",
              "47年",
              "48年",
              "49年",
              "50年",
              "51年",
              "52年",
              "53年",
              "54年",
              "55年",
              "56年",
              "57年",
              "58年",
              "59年",
              "60年",
              "61年",
              "62年",
              "63年",
              "64年",
              "65年",
              "66年",
              "67年",
              "68年",
              "69年",
              "70年",
              "71年",
              "72年",
              "73年",
              "74年",
              "75年",
              "76年",
              "77年",
              "78年",
              "79年",
              "80年",
              "81年",
              "82年",
              "83年",
              "84年",
              "85年",
              "86年",
              "87年",
              "88年",
              "89年",
              "90年",
              "91年",
              "92年",
              "93年",
              "94年",
              "95年",
              "96年",
              "97年",
              "98年",
              "99年",
              "100年",
              ""
            ]
          },
          "policyholder_last_name": {
            "type": "string",
            "description": "保険等の契約者 姓<br>\n保険の種類にて、生命保険・介護医療保険・個人年金保険または地震保険・旧長期損害保険を選択している時のみ、入力した値が反映されます。<br>\n上記以外の保険では入力した値は反映されません。",
            "maxLength": 255,
            "example": "契約",
            "nullable": true
          },
          "policyholder_first_name": {
            "type": "string",
            "description": "保険等の契約者 名<br>\n保険の種類にて、生命保険・介護医療保険・個人年金保険または地震保険・旧長期損害保険を選択している時のみ、入力した値が反映されます。<br>\n上記以外の保険では入力した値は反映されません。",
            "maxLength": 255,
            "example": "太郎",
            "nullable": true
          },
          "recipient_last_name": {
            "type": "string",
            "description": "保険金等の受取人 姓<br>\n保険の種類にて、生命保険・介護医療保険・個人年金保険、地震保険・旧長期損害保険または社会保険を選択している時のみ、入力した値が反映されます。<br>\n上記以外の保険では入力した値は反映されません。",
            "maxLength": 255,
            "example": "受取",
            "nullable": true
          },
          "recipient_first_name": {
            "type": "string",
            "description": "保険金等の受取人 名<br>\n保険の種類にて、生命保険・介護医療保険・個人年金保険、地震保険・旧長期損害保険または社会保険を選択している時のみ、入力した値が反映されます。<br>\n上記以外の保険では入力した値は反映されません。",
            "maxLength": 255,
            "nullable": true,
            "example": "太郎"
          },
          "recipient_relationship": {
            "type": "string",
            "description": "保険金等の受取人 あなたとの続柄 myself: 本人, husband: 夫, wife: 妻, father: 父, mother: 母, child: 子, senior_brother: 兄, junior_brother: 弟, senior_sister: 姉, junior_sister: 妹, grandchild: 孫, grandfather: 祖父, grandmother: 祖母, father_in_law: 義父, mother_in_law: 義母, grandfather_in_law: 義祖父, grandmother_in_law: 義祖母, other: その他, \"\": 空欄<br>\n保険の種類にて、生命保険・介護医療保険・個人年金保険、地震保険・旧長期損害保険または社会保険を選択している時のみ、入力した値が反映されます。<br>\n上記以外の保険では入力した値は反映されません。",
            "enum": [
              "myself",
              "husband",
              "wife",
              "father",
              "mother",
              "child",
              "senior_brother",
              "junior_brother",
              "senior_sister",
              "junior_sister",
              "grandchild",
              "grandfather",
              "grandmother",
              "father_in_law",
              "mother_in_law",
              "grandfather_in_law",
              "grandmother_in_law",
              "other",
              ""
            ],
            "example": "child",
            "nullable": true
          },
          "payment_start_date": {
            "type": "string",
            "description": "年金の支払開始日 1900年1月1日から現在年+100の12月31日まで登録可能。<br>\n区分が個人年金保険の時のみ、入力した値が反映されます。<br>\n上記以外の保険では入力した値は反映されません。",
            "pattern": "^([1-2][0-9]{3}-[0-9]{2}-[0-9]{2})?$",
            "example": "2000-04-01",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "description": "保険料額",
            "example": 1000000,
            "minimum": 0,
            "maximum": 99999999
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentController.update_insurance_response": {
        "type": "object",
        "properties": {
          "insurances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentInsuranceSerializer"
            }
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentInsuranceSerializer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "保険料id",
            "minimum": 1,
            "maximum": 2147483647
          },
          "type": {
            "type": "string",
            "description": "保険の種類 life_care_pension_insurance: 生命保険・介護医療保険・個人年金保険, earthquake_non_life_insurance: 地震保険・旧長期損害保険, social_insurance: 社会保険, other_insurance: その他の保険（小規模企業共済等）",
            "enum": [
              "life_care_pension_insurance",
              "earthquake_non_life_insurance",
              "social_insurance",
              "other_insurance"
            ]
          },
          "category": {
            "type": "string",
            "description": "区分<br>\n保険会社等が発行する証明書類に基づいて区分を設定してください。<br>\n保険の種類によって設定可能な値が変わります。<br>\n・life_care_pension_insurance<br>\n　life: 生命保険<br>\n　care: 介護保険<br>\n　pension: 個人年金保険<br>\n・earthquake_non_life_insurance<br>\n　earthquake: 地震保険<br>\n　old_long_term_non_life: 旧長期損害保険<br>\n・social_insurance<br>\n　national_pension: 国民年金<br>\n　national_pension_fund_premium: 国民年金基金<br>\n　national_health: 国民健康保険<br>\n　health: 健康保険<br>\n　care_insurance_deduction_of_pension: 介護保険<br>\n　employee_pension: 厚生年金<br>\n　advanced_elderly_medical: 後期高齢者医療保険<br>\n　none: その他（印刷後に手書き）<br>\n・other_insurance<br>\n　sema: 独立行政法人中小企業基盤整備機構の共済契約の掛金<br>\n　idc: 個人型確定拠出年金（iDeCo）<br>\n　cdc: 企業型確定拠出年金<br>\n　dsma: 心身障害者扶養共済制度に関する契約の掛金<br>",
            "enum": [
              "life",
              "care",
              "pension",
              "earthquake",
              "old_long_term_non_life",
              "national_pension",
              "national_pension_fund_premium",
              "national_health",
              "care_insurance_deduction_of_pension",
              "health",
              "employee_pension",
              "advanced_elderly_medical",
              "sema",
              "idc",
              "cdc",
              "dsma",
              "none"
            ],
            "example": "life"
          },
          "new_or_old": {
            "type": "string",
            "description": "新旧区分<br>\n区分が生命保険または個人年金保険の時のみ、新制度なら new を、旧制度なら old を指定します。<br>\n上記以外の保険では none を指定してください。",
            "enum": [
              "new",
              "old",
              "none"
            ]
          },
          "company_name": {
            "type": "string",
            "description": "保険会社等の名称<br>\n保険の種類にて、生命保険・介護医療保険・個人年金保険または地震保険・旧長期損害保険を選択している時のみ、入力した値が反映されます。<br>\n上記以外の保険では入力した値は反映されません。",
            "maxLength": 255,
            "example": "freee生命保険株式会社",
            "nullable": true
          },
          "kind_of_purpose": {
            "type": "string",
            "description": "保険等の種類（目的）<br>\n保険の種類にて、生命保険・介護医療保険・個人年金保険または地震保険・旧長期損害保険を選択している時のみ、入力した値が反映されます。<br>\n上記以外の保険では入力した値は反映されません。",
            "maxLength": 255,
            "example": "利差配当付終身",
            "nullable": true
          },
          "period": {
            "type": "string",
            "description": "保険期間又は年金支払期間<br>\n保険の種類にて、生命保険・介護医療保険・個人年金保険または地震保険・旧長期損害保険を選択している時のみ、入力した値が反映されます。<br>\n上記以外の保険では入力した値は反映されません。",
            "example": "終身",
            "nullable": true,
            "enum": [
              "終身",
              "0年",
              "1年",
              "2年",
              "3年",
              "4年",
              "5年",
              "6年",
              "7年",
              "8年",
              "9年",
              "10年",
              "11年",
              "12年",
              "13年",
              "14年",
              "15年",
              "16年",
              "17年",
              "18年",
              "19年",
              "20年",
              "21年",
              "22年",
              "23年",
              "24年",
              "25年",
              "26年",
              "27年",
              "28年",
              "29年",
              "30年",
              "31年",
              "32年",
              "33年",
              "34年",
              "35年",
              "36年",
              "37年",
              "38年",
              "39年",
              "40年",
              "41年",
              "42年",
              "43年",
              "44年",
              "45年",
              "46年",
              "47年",
              "48年",
              "49年",
              "50年",
              "51年",
              "52年",
              "53年",
              "54年",
              "55年",
              "56年",
              "57年",
              "58年",
              "59年",
              "60年",
              "61年",
              "62年",
              "63年",
              "64年",
              "65年",
              "66年",
              "67年",
              "68年",
              "69年",
              "70年",
              "71年",
              "72年",
              "73年",
              "74年",
              "75年",
              "76年",
              "77年",
              "78年",
              "79年",
              "80年",
              "81年",
              "82年",
              "83年",
              "84年",
              "85年",
              "86年",
              "87年",
              "88年",
              "89年",
              "90年",
              "91年",
              "92年",
              "93年",
              "94年",
              "95年",
              "96年",
              "97年",
              "98年",
              "99年",
              "100年",
              ""
            ]
          },
          "policyholder_last_name": {
            "type": "string",
            "description": "保険等の契約者 姓<br>\n保険の種類にて、生命保険・介護医療保険・個人年金保険または地震保険・旧長期損害保険を選択している時のみ、入力した値が反映されます。<br>\n上記以外の保険では入力した値は反映されません。",
            "maxLength": 255,
            "example": "契約",
            "nullable": true
          },
          "policyholder_first_name": {
            "type": "string",
            "description": "保険等の契約者 名<br>\n保険の種類にて、生命保険・介護医療保険・個人年金保険または地震保険・旧長期損害保険を選択している時のみ、入力した値が反映されます。<br>\n上記以外の保険では入力した値は反映されません。",
            "maxLength": 255,
            "example": "太郎",
            "nullable": true
          },
          "recipient_last_name": {
            "type": "string",
            "description": "保険金等の受取人 姓<br>\n保険の種類にて、生命保険・介護医療保険・個人年金保険、地震保険・旧長期損害保険または社会保険を選択している時のみ、入力した値が反映されます。<br>\n上記以外の保険では入力した値は反映されません。",
            "maxLength": 255,
            "example": "受取",
            "nullable": true
          },
          "recipient_first_name": {
            "type": "string",
            "description": "保険金等の受取人 名<br>\n保険の種類にて、生命保険・介護医療保険・個人年金保険、地震保険・旧長期損害保険または社会保険を選択している時のみ、入力した値が反映されます。<br>\n上記以外の保険では入力した値は反映されません。",
            "maxLength": 255,
            "nullable": true,
            "example": "太郎"
          },
          "recipient_relationship": {
            "type": "string",
            "description": "保険金等の受取人 あなたとの続柄 myself: 本人, husband: 夫, wife: 妻, father: 父, mother: 母, child: 子, senior_brother: 兄, junior_brother: 弟, senior_sister: 姉, junior_sister: 妹, grandchild: 孫, grandfather: 祖父, grandmother: 祖母, father_in_law: 義父, mother_in_law: 義母, grandfather_in_law: 義祖父, grandmother_in_law: 義祖母, other: その他, \"\": 空欄<br>\n保険の種類にて、生命保険・介護医療保険・個人年金保険、地震保険・旧長期損害保険または社会保険を選択している時のみ、入力した値が反映されます。<br>\n上記以外の保険では入力した値は反映されません。",
            "enum": [
              "myself",
              "husband",
              "wife",
              "father",
              "mother",
              "child",
              "senior_brother",
              "junior_brother",
              "senior_sister",
              "junior_sister",
              "grandchild",
              "grandfather",
              "grandmother",
              "father_in_law",
              "mother_in_law",
              "grandfather_in_law",
              "grandmother_in_law",
              "other",
              ""
            ],
            "example": "child",
            "nullable": true
          },
          "payment_start_date": {
            "type": "string",
            "description": "年金の支払開始日 1900年1月1日から現在年+100の12月31日まで登録可能。<br>\n区分が個人年金保険の時のみ、入力した値が反映されます。<br>\n上記以外の保険では入力した値は反映されません。",
            "pattern": "^([1-2][0-9]{3}-[0-9]{2}-[0-9]{2})?$",
            "example": "2000-04-01",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "description": "保険料額",
            "example": 1000000,
            "minimum": 0,
            "maximum": 99999999
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentController.update_housing_loan_body": {
        "type": "object",
        "required": [
          "company_id",
          "housing_loan"
        ],
        "properties": {
          "company_id": {
            "type": "integer",
            "description": "更新対象事業所ID（必須）",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "housing_loan": {
            "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentHousingLoanUpdateRequestSerializer"
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentHousingLoanUpdateRequestSerializer": {
        "type": "object",
        "required": [
          "residence_start_date",
          "remaining_balance_at_yearend",
          "category",
          "specific_case_type"
        ],
        "properties": {
          "residence_start_date": {
            "type": "string",
            "description": "居住開始の年月日 2000年1月1日から現在年+5の12月31日まで登録可能",
            "format": "date",
            "pattern": "^[2-9][0-9]{3}-[0-9]{2}-[0-9]{2}$",
            "example": "2022-03-31"
          },
          "remaining_balance_at_yearend": {
            "type": "integer",
            "description": "住宅借入金等年末残高",
            "example": 5000000,
            "minimum": -999999999,
            "maximum": 999999999
          },
          "category": {
            "type": "string",
            "description": "住宅借入金等特別控除区分 general: 住: 一般の住宅借入金等, qualified: 認: 認定住宅の新築等, extension: 増: 特定増改築等, earthquake: 震: 震災特例法による特別控除",
            "enum": [
              "general",
              "qualified",
              "extension",
              "earthquake"
            ]
          },
          "specific_case_type": {
            "type": "string",
            "description": "特定取得/特別特定取得 not_qualified: 該当しない, specified: 特定取得, special_specified_or_special_exception: 特別特定取得または特別特例取得, exception_special_exception: 特例特別特例取得 special_residential_house 特家",
            "enum": [
              "not_qualified",
              "specified",
              "special_specified_or_special_exception",
              "exception_special_exception",
              "special_residential_house"
            ]
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentController.update_housing_loan_response": {
        "type": "object",
        "properties": {
          "housing_loan_deduction": {
            "type": "integer",
            "description": "住宅借入金等特別控除",
            "format": "int32",
            "minimum": 0,
            "maximum": 999999999,
            "example": 500000
          },
          "housing_loans": {
            "type": "array",
            "description": "住宅ローン",
            "items": {
              "$ref": "#/components/schemas/ApiV1EmployeeYearendAdjustmentHousingLoanSerializer"
            }
          }
        }
      },
      "ApiV1EmployeeYearendAdjustmentHousingLoanSerializer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "住宅ローンID",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1
          },
          "residence_start_date": {
            "type": "string",
            "description": "居住開始の年月日",
            "format": "date",
            "example": "2022-03-31"
          },
          "remaining_balance_at_yearend": {
            "type": "integer",
            "description": "住宅借入金等年末残高",
            "example": 5000000,
            "minimum": -999999999,
            "maximum": 999999999
          },
          "category": {
            "type": "string",
            "description": "住宅借入金等特別控除区分 general: 住: 一般の住宅借入金等, qualified: 認: 認定住宅の新築等, extension: 増: 特定増改築等, earthquake: 震: 震災特例法による特別控除",
            "enum": [
              "general",
              "qualified",
              "extension",
              "earthquake"
            ]
          },
          "specific_case_type": {
            "type": "string",
            "description": "特定取得/特別特定取得 not_qualified: 該当しない, specified: 特定取得, special_specified_or_special_exception: 特別特定取得または特別特例取得, exception_special_exception: 特例特別特例取得 special_residential_house 特家",
            "enum": [
              "not_qualified",
              "specified",
              "special_specified_or_special_exception",
              "exception_special_exception",
              "special_residential_house"
            ]
          }
        }
      },
      "error": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "example": 400
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "リクエストの形式が不正です。"
                  }
                }
              }
            }
          }
        }
      },
      "unauthorizedError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "ログインをしてください。"
          },
          "messages": {
            "type": "string"
          }
        }
      },
      "forbiddenError": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "example": 403
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "アクセス権限がありません。"
                  }
                }
              }
            }
          }
        }
      },
      "accessDeniedError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "access_denied"
          },
          "message": {
            "type": "string",
            "example": "アクセスする権限がありません"
          },
          "code": {
            "type": "string",
            "example": "expired_access_token"
          }
        }
      },
      "notfoundError": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "example": 404
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "not_found"
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "存在しないか既に削除されたレコードです。"
                  }
                }
              }
            }
          }
        }
      },
      "internalServerError": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "example": 500
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "internal_server_error"
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "エラーが発生しました。再試行しても解消しない場合は、サポートセンターまでご連絡ください。"
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}
