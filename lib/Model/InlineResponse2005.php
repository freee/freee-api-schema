<?php
/**
 * InlineResponse2005
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * freee API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * InlineResponse2005 Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class InlineResponse2005 implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'inline_response_200_5';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'wallet_txns' => '\OpenAPI\Client\Model\UserCapabilityWithConfirm',
        'deals' => '\OpenAPI\Client\Model\UserCapabilityWithSelfOnly',
        'transfers' => '\OpenAPI\Client\Model\UserCapabilityWithSelfOnly',
        'docs' => '\OpenAPI\Client\Model\UserCapabilityWithSelfOnly',
        'doc_postings' => '\OpenAPI\Client\Model\UserCapability',
        'receipts' => '\OpenAPI\Client\Model\UserCapabilityWithSelfOnly',
        'receipt_stream_editor' => '\OpenAPI\Client\Model\UserCapability',
        'expense_applications' => '\OpenAPI\Client\Model\UserCapabilityWithSelfOnly',
        'spreadsheets' => '\OpenAPI\Client\Model\UserCapability',
        'payment_requests' => '\OpenAPI\Client\Model\UserCapabilityWithSelfOnly',
        'request_forms' => '\OpenAPI\Client\Model\UserCapability',
        'approval_requests' => '\OpenAPI\Client\Model\UserCapabilityWithSelfOnly',
        'reports' => '\OpenAPI\Client\Model\UserCapability',
        'reports_income_expense' => '\OpenAPI\Client\Model\UserCapability',
        'reports_receivables' => '\OpenAPI\Client\Model\UserCapability',
        'reports_payables' => '\OpenAPI\Client\Model\UserCapability',
        'reports_cash_balance' => '\OpenAPI\Client\Model\UserCapability',
        'reports_crosstabs' => '\OpenAPI\Client\Model\UserCapability',
        'reports_general_ledgers' => '\OpenAPI\Client\Model\UserCapability',
        'reports_pl' => '\OpenAPI\Client\Model\UserCapability',
        'reports_bs' => '\OpenAPI\Client\Model\UserCapability',
        'reports_journals' => '\OpenAPI\Client\Model\UserCapability',
        'reports_managements_planning' => '\OpenAPI\Client\Model\UserCapability',
        'reports_managements_navigation' => '\OpenAPI\Client\Model\UserCapability',
        'manual_journals' => '\OpenAPI\Client\Model\UserCapabilityWithSelfOnly',
        'fixed_assets' => '\OpenAPI\Client\Model\UserCapability',
        'inventory_refreshes' => '\OpenAPI\Client\Model\UserCapability',
        'biz_allocations' => '\OpenAPI\Client\Model\UserCapability',
        'payment_records' => '\OpenAPI\Client\Model\UserCapability',
        'annual_reports' => '\OpenAPI\Client\Model\UserCapability',
        'tax_reports' => '\OpenAPI\Client\Model\UserCapability',
        'consumption_entries' => '\OpenAPI\Client\Model\UserCapability',
        'tax_return' => '\OpenAPI\Client\Model\UserCapability',
        'account_item_statements' => '\OpenAPI\Client\Model\UserCapability',
        'month_end' => '\OpenAPI\Client\Model\UserCapability',
        'year_end' => '\OpenAPI\Client\Model\UserCapability',
        'walletables' => '\OpenAPI\Client\Model\UserCapabilityWithSync',
        'companies' => '\OpenAPI\Client\Model\UserCapability',
        'invitations' => '\OpenAPI\Client\Model\UserCapability',
        'sign_in_logs' => '\OpenAPI\Client\Model\UserCapability',
        'backups' => '\OpenAPI\Client\Model\UserCapability',
        'opening_balances' => '\OpenAPI\Client\Model\UserCapability',
        'system_conversion' => '\OpenAPI\Client\Model\UserCapability',
        'resets' => '\OpenAPI\Client\Model\UserCapability',
        'partners' => '\OpenAPI\Client\Model\UserCapability',
        'items' => '\OpenAPI\Client\Model\UserCapability',
        'sections' => '\OpenAPI\Client\Model\UserCapability',
        'tags' => '\OpenAPI\Client\Model\UserCapability',
        'account_items' => '\OpenAPI\Client\Model\UserCapability',
        'taxes' => '\OpenAPI\Client\Model\UserCapability',
        'user_matchers' => '\OpenAPI\Client\Model\UserCapability',
        'deal_templates' => '\OpenAPI\Client\Model\UserCapability',
        'manual_journal_templates' => '\OpenAPI\Client\Model\UserCapability',
        'cost_allocations' => '\OpenAPI\Client\Model\UserCapability',
        'approval_flow_routes' => '\OpenAPI\Client\Model\UserCapability',
        'expense_application_templates' => '\OpenAPI\Client\Model\UserCapability',
        'workflows' => '\OpenAPI\Client\Model\UserCapability',
        'oauth_applications' => '\OpenAPI\Client\Model\UserCapability',
        'oauth_authorizations' => '\OpenAPI\Client\Model\UserCapability',
        'bank_accountant_staff_users' => '\OpenAPI\Client\Model\UserCapability'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'wallet_txns' => null,
        'deals' => null,
        'transfers' => null,
        'docs' => null,
        'doc_postings' => null,
        'receipts' => null,
        'receipt_stream_editor' => null,
        'expense_applications' => null,
        'spreadsheets' => null,
        'payment_requests' => null,
        'request_forms' => null,
        'approval_requests' => null,
        'reports' => null,
        'reports_income_expense' => null,
        'reports_receivables' => null,
        'reports_payables' => null,
        'reports_cash_balance' => null,
        'reports_crosstabs' => null,
        'reports_general_ledgers' => null,
        'reports_pl' => null,
        'reports_bs' => null,
        'reports_journals' => null,
        'reports_managements_planning' => null,
        'reports_managements_navigation' => null,
        'manual_journals' => null,
        'fixed_assets' => null,
        'inventory_refreshes' => null,
        'biz_allocations' => null,
        'payment_records' => null,
        'annual_reports' => null,
        'tax_reports' => null,
        'consumption_entries' => null,
        'tax_return' => null,
        'account_item_statements' => null,
        'month_end' => null,
        'year_end' => null,
        'walletables' => null,
        'companies' => null,
        'invitations' => null,
        'sign_in_logs' => null,
        'backups' => null,
        'opening_balances' => null,
        'system_conversion' => null,
        'resets' => null,
        'partners' => null,
        'items' => null,
        'sections' => null,
        'tags' => null,
        'account_items' => null,
        'taxes' => null,
        'user_matchers' => null,
        'deal_templates' => null,
        'manual_journal_templates' => null,
        'cost_allocations' => null,
        'approval_flow_routes' => null,
        'expense_application_templates' => null,
        'workflows' => null,
        'oauth_applications' => null,
        'oauth_authorizations' => null,
        'bank_accountant_staff_users' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'wallet_txns' => 'wallet_txns',
        'deals' => 'deals',
        'transfers' => 'transfers',
        'docs' => 'docs',
        'doc_postings' => 'doc_postings',
        'receipts' => 'receipts',
        'receipt_stream_editor' => 'receipt_stream_editor',
        'expense_applications' => 'expense_applications',
        'spreadsheets' => 'spreadsheets',
        'payment_requests' => 'payment_requests',
        'request_forms' => 'request_forms',
        'approval_requests' => 'approval_requests',
        'reports' => 'reports',
        'reports_income_expense' => 'reports_income_expense',
        'reports_receivables' => 'reports_receivables',
        'reports_payables' => 'reports_payables',
        'reports_cash_balance' => 'reports_cash_balance',
        'reports_crosstabs' => 'reports_crosstabs',
        'reports_general_ledgers' => 'reports_general_ledgers',
        'reports_pl' => 'reports_pl',
        'reports_bs' => 'reports_bs',
        'reports_journals' => 'reports_journals',
        'reports_managements_planning' => 'reports_managements_planning',
        'reports_managements_navigation' => 'reports_managements_navigation',
        'manual_journals' => 'manual_journals',
        'fixed_assets' => 'fixed_assets',
        'inventory_refreshes' => 'inventory_refreshes',
        'biz_allocations' => 'biz_allocations',
        'payment_records' => 'payment_records',
        'annual_reports' => 'annual_reports',
        'tax_reports' => 'tax_reports',
        'consumption_entries' => 'consumption_entries',
        'tax_return' => 'tax_return',
        'account_item_statements' => 'account_item_statements',
        'month_end' => 'month_end',
        'year_end' => 'year_end',
        'walletables' => 'walletables',
        'companies' => 'companies',
        'invitations' => 'invitations',
        'sign_in_logs' => 'sign_in_logs',
        'backups' => 'backups',
        'opening_balances' => 'opening_balances',
        'system_conversion' => 'system_conversion',
        'resets' => 'resets',
        'partners' => 'partners',
        'items' => 'items',
        'sections' => 'sections',
        'tags' => 'tags',
        'account_items' => 'account_items',
        'taxes' => 'taxes',
        'user_matchers' => 'user_matchers',
        'deal_templates' => 'deal_templates',
        'manual_journal_templates' => 'manual_journal_templates',
        'cost_allocations' => 'cost_allocations',
        'approval_flow_routes' => 'approval_flow_routes',
        'expense_application_templates' => 'expense_application_templates',
        'workflows' => 'workflows',
        'oauth_applications' => 'oauth_applications',
        'oauth_authorizations' => 'oauth_authorizations',
        'bank_accountant_staff_users' => 'bank_accountant_staff_users'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'wallet_txns' => 'setWalletTxns',
        'deals' => 'setDeals',
        'transfers' => 'setTransfers',
        'docs' => 'setDocs',
        'doc_postings' => 'setDocPostings',
        'receipts' => 'setReceipts',
        'receipt_stream_editor' => 'setReceiptStreamEditor',
        'expense_applications' => 'setExpenseApplications',
        'spreadsheets' => 'setSpreadsheets',
        'payment_requests' => 'setPaymentRequests',
        'request_forms' => 'setRequestForms',
        'approval_requests' => 'setApprovalRequests',
        'reports' => 'setReports',
        'reports_income_expense' => 'setReportsIncomeExpense',
        'reports_receivables' => 'setReportsReceivables',
        'reports_payables' => 'setReportsPayables',
        'reports_cash_balance' => 'setReportsCashBalance',
        'reports_crosstabs' => 'setReportsCrosstabs',
        'reports_general_ledgers' => 'setReportsGeneralLedgers',
        'reports_pl' => 'setReportsPl',
        'reports_bs' => 'setReportsBs',
        'reports_journals' => 'setReportsJournals',
        'reports_managements_planning' => 'setReportsManagementsPlanning',
        'reports_managements_navigation' => 'setReportsManagementsNavigation',
        'manual_journals' => 'setManualJournals',
        'fixed_assets' => 'setFixedAssets',
        'inventory_refreshes' => 'setInventoryRefreshes',
        'biz_allocations' => 'setBizAllocations',
        'payment_records' => 'setPaymentRecords',
        'annual_reports' => 'setAnnualReports',
        'tax_reports' => 'setTaxReports',
        'consumption_entries' => 'setConsumptionEntries',
        'tax_return' => 'setTaxReturn',
        'account_item_statements' => 'setAccountItemStatements',
        'month_end' => 'setMonthEnd',
        'year_end' => 'setYearEnd',
        'walletables' => 'setWalletables',
        'companies' => 'setCompanies',
        'invitations' => 'setInvitations',
        'sign_in_logs' => 'setSignInLogs',
        'backups' => 'setBackups',
        'opening_balances' => 'setOpeningBalances',
        'system_conversion' => 'setSystemConversion',
        'resets' => 'setResets',
        'partners' => 'setPartners',
        'items' => 'setItems',
        'sections' => 'setSections',
        'tags' => 'setTags',
        'account_items' => 'setAccountItems',
        'taxes' => 'setTaxes',
        'user_matchers' => 'setUserMatchers',
        'deal_templates' => 'setDealTemplates',
        'manual_journal_templates' => 'setManualJournalTemplates',
        'cost_allocations' => 'setCostAllocations',
        'approval_flow_routes' => 'setApprovalFlowRoutes',
        'expense_application_templates' => 'setExpenseApplicationTemplates',
        'workflows' => 'setWorkflows',
        'oauth_applications' => 'setOauthApplications',
        'oauth_authorizations' => 'setOauthAuthorizations',
        'bank_accountant_staff_users' => 'setBankAccountantStaffUsers'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'wallet_txns' => 'getWalletTxns',
        'deals' => 'getDeals',
        'transfers' => 'getTransfers',
        'docs' => 'getDocs',
        'doc_postings' => 'getDocPostings',
        'receipts' => 'getReceipts',
        'receipt_stream_editor' => 'getReceiptStreamEditor',
        'expense_applications' => 'getExpenseApplications',
        'spreadsheets' => 'getSpreadsheets',
        'payment_requests' => 'getPaymentRequests',
        'request_forms' => 'getRequestForms',
        'approval_requests' => 'getApprovalRequests',
        'reports' => 'getReports',
        'reports_income_expense' => 'getReportsIncomeExpense',
        'reports_receivables' => 'getReportsReceivables',
        'reports_payables' => 'getReportsPayables',
        'reports_cash_balance' => 'getReportsCashBalance',
        'reports_crosstabs' => 'getReportsCrosstabs',
        'reports_general_ledgers' => 'getReportsGeneralLedgers',
        'reports_pl' => 'getReportsPl',
        'reports_bs' => 'getReportsBs',
        'reports_journals' => 'getReportsJournals',
        'reports_managements_planning' => 'getReportsManagementsPlanning',
        'reports_managements_navigation' => 'getReportsManagementsNavigation',
        'manual_journals' => 'getManualJournals',
        'fixed_assets' => 'getFixedAssets',
        'inventory_refreshes' => 'getInventoryRefreshes',
        'biz_allocations' => 'getBizAllocations',
        'payment_records' => 'getPaymentRecords',
        'annual_reports' => 'getAnnualReports',
        'tax_reports' => 'getTaxReports',
        'consumption_entries' => 'getConsumptionEntries',
        'tax_return' => 'getTaxReturn',
        'account_item_statements' => 'getAccountItemStatements',
        'month_end' => 'getMonthEnd',
        'year_end' => 'getYearEnd',
        'walletables' => 'getWalletables',
        'companies' => 'getCompanies',
        'invitations' => 'getInvitations',
        'sign_in_logs' => 'getSignInLogs',
        'backups' => 'getBackups',
        'opening_balances' => 'getOpeningBalances',
        'system_conversion' => 'getSystemConversion',
        'resets' => 'getResets',
        'partners' => 'getPartners',
        'items' => 'getItems',
        'sections' => 'getSections',
        'tags' => 'getTags',
        'account_items' => 'getAccountItems',
        'taxes' => 'getTaxes',
        'user_matchers' => 'getUserMatchers',
        'deal_templates' => 'getDealTemplates',
        'manual_journal_templates' => 'getManualJournalTemplates',
        'cost_allocations' => 'getCostAllocations',
        'approval_flow_routes' => 'getApprovalFlowRoutes',
        'expense_application_templates' => 'getExpenseApplicationTemplates',
        'workflows' => 'getWorkflows',
        'oauth_applications' => 'getOauthApplications',
        'oauth_authorizations' => 'getOauthAuthorizations',
        'bank_accountant_staff_users' => 'getBankAccountantStaffUsers'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['wallet_txns'] = $data['wallet_txns'] ?? null;
        $this->container['deals'] = $data['deals'] ?? null;
        $this->container['transfers'] = $data['transfers'] ?? null;
        $this->container['docs'] = $data['docs'] ?? null;
        $this->container['doc_postings'] = $data['doc_postings'] ?? null;
        $this->container['receipts'] = $data['receipts'] ?? null;
        $this->container['receipt_stream_editor'] = $data['receipt_stream_editor'] ?? null;
        $this->container['expense_applications'] = $data['expense_applications'] ?? null;
        $this->container['spreadsheets'] = $data['spreadsheets'] ?? null;
        $this->container['payment_requests'] = $data['payment_requests'] ?? null;
        $this->container['request_forms'] = $data['request_forms'] ?? null;
        $this->container['approval_requests'] = $data['approval_requests'] ?? null;
        $this->container['reports'] = $data['reports'] ?? null;
        $this->container['reports_income_expense'] = $data['reports_income_expense'] ?? null;
        $this->container['reports_receivables'] = $data['reports_receivables'] ?? null;
        $this->container['reports_payables'] = $data['reports_payables'] ?? null;
        $this->container['reports_cash_balance'] = $data['reports_cash_balance'] ?? null;
        $this->container['reports_crosstabs'] = $data['reports_crosstabs'] ?? null;
        $this->container['reports_general_ledgers'] = $data['reports_general_ledgers'] ?? null;
        $this->container['reports_pl'] = $data['reports_pl'] ?? null;
        $this->container['reports_bs'] = $data['reports_bs'] ?? null;
        $this->container['reports_journals'] = $data['reports_journals'] ?? null;
        $this->container['reports_managements_planning'] = $data['reports_managements_planning'] ?? null;
        $this->container['reports_managements_navigation'] = $data['reports_managements_navigation'] ?? null;
        $this->container['manual_journals'] = $data['manual_journals'] ?? null;
        $this->container['fixed_assets'] = $data['fixed_assets'] ?? null;
        $this->container['inventory_refreshes'] = $data['inventory_refreshes'] ?? null;
        $this->container['biz_allocations'] = $data['biz_allocations'] ?? null;
        $this->container['payment_records'] = $data['payment_records'] ?? null;
        $this->container['annual_reports'] = $data['annual_reports'] ?? null;
        $this->container['tax_reports'] = $data['tax_reports'] ?? null;
        $this->container['consumption_entries'] = $data['consumption_entries'] ?? null;
        $this->container['tax_return'] = $data['tax_return'] ?? null;
        $this->container['account_item_statements'] = $data['account_item_statements'] ?? null;
        $this->container['month_end'] = $data['month_end'] ?? null;
        $this->container['year_end'] = $data['year_end'] ?? null;
        $this->container['walletables'] = $data['walletables'] ?? null;
        $this->container['companies'] = $data['companies'] ?? null;
        $this->container['invitations'] = $data['invitations'] ?? null;
        $this->container['sign_in_logs'] = $data['sign_in_logs'] ?? null;
        $this->container['backups'] = $data['backups'] ?? null;
        $this->container['opening_balances'] = $data['opening_balances'] ?? null;
        $this->container['system_conversion'] = $data['system_conversion'] ?? null;
        $this->container['resets'] = $data['resets'] ?? null;
        $this->container['partners'] = $data['partners'] ?? null;
        $this->container['items'] = $data['items'] ?? null;
        $this->container['sections'] = $data['sections'] ?? null;
        $this->container['tags'] = $data['tags'] ?? null;
        $this->container['account_items'] = $data['account_items'] ?? null;
        $this->container['taxes'] = $data['taxes'] ?? null;
        $this->container['user_matchers'] = $data['user_matchers'] ?? null;
        $this->container['deal_templates'] = $data['deal_templates'] ?? null;
        $this->container['manual_journal_templates'] = $data['manual_journal_templates'] ?? null;
        $this->container['cost_allocations'] = $data['cost_allocations'] ?? null;
        $this->container['approval_flow_routes'] = $data['approval_flow_routes'] ?? null;
        $this->container['expense_application_templates'] = $data['expense_application_templates'] ?? null;
        $this->container['workflows'] = $data['workflows'] ?? null;
        $this->container['oauth_applications'] = $data['oauth_applications'] ?? null;
        $this->container['oauth_authorizations'] = $data['oauth_authorizations'] ?? null;
        $this->container['bank_accountant_staff_users'] = $data['bank_accountant_staff_users'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['wallet_txns'] === null) {
            $invalidProperties[] = "'wallet_txns' can't be null";
        }
        if ($this->container['deals'] === null) {
            $invalidProperties[] = "'deals' can't be null";
        }
        if ($this->container['transfers'] === null) {
            $invalidProperties[] = "'transfers' can't be null";
        }
        if ($this->container['docs'] === null) {
            $invalidProperties[] = "'docs' can't be null";
        }
        if ($this->container['doc_postings'] === null) {
            $invalidProperties[] = "'doc_postings' can't be null";
        }
        if ($this->container['receipts'] === null) {
            $invalidProperties[] = "'receipts' can't be null";
        }
        if ($this->container['receipt_stream_editor'] === null) {
            $invalidProperties[] = "'receipt_stream_editor' can't be null";
        }
        if ($this->container['expense_applications'] === null) {
            $invalidProperties[] = "'expense_applications' can't be null";
        }
        if ($this->container['spreadsheets'] === null) {
            $invalidProperties[] = "'spreadsheets' can't be null";
        }
        if ($this->container['payment_requests'] === null) {
            $invalidProperties[] = "'payment_requests' can't be null";
        }
        if ($this->container['request_forms'] === null) {
            $invalidProperties[] = "'request_forms' can't be null";
        }
        if ($this->container['approval_requests'] === null) {
            $invalidProperties[] = "'approval_requests' can't be null";
        }
        if ($this->container['reports'] === null) {
            $invalidProperties[] = "'reports' can't be null";
        }
        if ($this->container['reports_income_expense'] === null) {
            $invalidProperties[] = "'reports_income_expense' can't be null";
        }
        if ($this->container['reports_receivables'] === null) {
            $invalidProperties[] = "'reports_receivables' can't be null";
        }
        if ($this->container['reports_payables'] === null) {
            $invalidProperties[] = "'reports_payables' can't be null";
        }
        if ($this->container['reports_cash_balance'] === null) {
            $invalidProperties[] = "'reports_cash_balance' can't be null";
        }
        if ($this->container['reports_crosstabs'] === null) {
            $invalidProperties[] = "'reports_crosstabs' can't be null";
        }
        if ($this->container['reports_general_ledgers'] === null) {
            $invalidProperties[] = "'reports_general_ledgers' can't be null";
        }
        if ($this->container['reports_pl'] === null) {
            $invalidProperties[] = "'reports_pl' can't be null";
        }
        if ($this->container['reports_bs'] === null) {
            $invalidProperties[] = "'reports_bs' can't be null";
        }
        if ($this->container['reports_journals'] === null) {
            $invalidProperties[] = "'reports_journals' can't be null";
        }
        if ($this->container['reports_managements_planning'] === null) {
            $invalidProperties[] = "'reports_managements_planning' can't be null";
        }
        if ($this->container['reports_managements_navigation'] === null) {
            $invalidProperties[] = "'reports_managements_navigation' can't be null";
        }
        if ($this->container['manual_journals'] === null) {
            $invalidProperties[] = "'manual_journals' can't be null";
        }
        if ($this->container['fixed_assets'] === null) {
            $invalidProperties[] = "'fixed_assets' can't be null";
        }
        if ($this->container['inventory_refreshes'] === null) {
            $invalidProperties[] = "'inventory_refreshes' can't be null";
        }
        if ($this->container['biz_allocations'] === null) {
            $invalidProperties[] = "'biz_allocations' can't be null";
        }
        if ($this->container['payment_records'] === null) {
            $invalidProperties[] = "'payment_records' can't be null";
        }
        if ($this->container['annual_reports'] === null) {
            $invalidProperties[] = "'annual_reports' can't be null";
        }
        if ($this->container['tax_reports'] === null) {
            $invalidProperties[] = "'tax_reports' can't be null";
        }
        if ($this->container['consumption_entries'] === null) {
            $invalidProperties[] = "'consumption_entries' can't be null";
        }
        if ($this->container['tax_return'] === null) {
            $invalidProperties[] = "'tax_return' can't be null";
        }
        if ($this->container['account_item_statements'] === null) {
            $invalidProperties[] = "'account_item_statements' can't be null";
        }
        if ($this->container['month_end'] === null) {
            $invalidProperties[] = "'month_end' can't be null";
        }
        if ($this->container['year_end'] === null) {
            $invalidProperties[] = "'year_end' can't be null";
        }
        if ($this->container['walletables'] === null) {
            $invalidProperties[] = "'walletables' can't be null";
        }
        if ($this->container['companies'] === null) {
            $invalidProperties[] = "'companies' can't be null";
        }
        if ($this->container['invitations'] === null) {
            $invalidProperties[] = "'invitations' can't be null";
        }
        if ($this->container['sign_in_logs'] === null) {
            $invalidProperties[] = "'sign_in_logs' can't be null";
        }
        if ($this->container['backups'] === null) {
            $invalidProperties[] = "'backups' can't be null";
        }
        if ($this->container['opening_balances'] === null) {
            $invalidProperties[] = "'opening_balances' can't be null";
        }
        if ($this->container['system_conversion'] === null) {
            $invalidProperties[] = "'system_conversion' can't be null";
        }
        if ($this->container['resets'] === null) {
            $invalidProperties[] = "'resets' can't be null";
        }
        if ($this->container['partners'] === null) {
            $invalidProperties[] = "'partners' can't be null";
        }
        if ($this->container['items'] === null) {
            $invalidProperties[] = "'items' can't be null";
        }
        if ($this->container['sections'] === null) {
            $invalidProperties[] = "'sections' can't be null";
        }
        if ($this->container['tags'] === null) {
            $invalidProperties[] = "'tags' can't be null";
        }
        if ($this->container['account_items'] === null) {
            $invalidProperties[] = "'account_items' can't be null";
        }
        if ($this->container['taxes'] === null) {
            $invalidProperties[] = "'taxes' can't be null";
        }
        if ($this->container['user_matchers'] === null) {
            $invalidProperties[] = "'user_matchers' can't be null";
        }
        if ($this->container['deal_templates'] === null) {
            $invalidProperties[] = "'deal_templates' can't be null";
        }
        if ($this->container['manual_journal_templates'] === null) {
            $invalidProperties[] = "'manual_journal_templates' can't be null";
        }
        if ($this->container['cost_allocations'] === null) {
            $invalidProperties[] = "'cost_allocations' can't be null";
        }
        if ($this->container['approval_flow_routes'] === null) {
            $invalidProperties[] = "'approval_flow_routes' can't be null";
        }
        if ($this->container['expense_application_templates'] === null) {
            $invalidProperties[] = "'expense_application_templates' can't be null";
        }
        if ($this->container['workflows'] === null) {
            $invalidProperties[] = "'workflows' can't be null";
        }
        if ($this->container['oauth_applications'] === null) {
            $invalidProperties[] = "'oauth_applications' can't be null";
        }
        if ($this->container['oauth_authorizations'] === null) {
            $invalidProperties[] = "'oauth_authorizations' can't be null";
        }
        if ($this->container['bank_accountant_staff_users'] === null) {
            $invalidProperties[] = "'bank_accountant_staff_users' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets wallet_txns
     *
     * @return \OpenAPI\Client\Model\UserCapabilityWithConfirm
     */
    public function getWalletTxns()
    {
        return $this->container['wallet_txns'];
    }

    /**
     * Sets wallet_txns
     *
     * @param \OpenAPI\Client\Model\UserCapabilityWithConfirm $wallet_txns wallet_txns
     *
     * @return self
     */
    public function setWalletTxns($wallet_txns)
    {
        $this->container['wallet_txns'] = $wallet_txns;

        return $this;
    }

    /**
     * Gets deals
     *
     * @return \OpenAPI\Client\Model\UserCapabilityWithSelfOnly
     */
    public function getDeals()
    {
        return $this->container['deals'];
    }

    /**
     * Sets deals
     *
     * @param \OpenAPI\Client\Model\UserCapabilityWithSelfOnly $deals deals
     *
     * @return self
     */
    public function setDeals($deals)
    {
        $this->container['deals'] = $deals;

        return $this;
    }

    /**
     * Gets transfers
     *
     * @return \OpenAPI\Client\Model\UserCapabilityWithSelfOnly
     */
    public function getTransfers()
    {
        return $this->container['transfers'];
    }

    /**
     * Sets transfers
     *
     * @param \OpenAPI\Client\Model\UserCapabilityWithSelfOnly $transfers transfers
     *
     * @return self
     */
    public function setTransfers($transfers)
    {
        $this->container['transfers'] = $transfers;

        return $this;
    }

    /**
     * Gets docs
     *
     * @return \OpenAPI\Client\Model\UserCapabilityWithSelfOnly
     */
    public function getDocs()
    {
        return $this->container['docs'];
    }

    /**
     * Sets docs
     *
     * @param \OpenAPI\Client\Model\UserCapabilityWithSelfOnly $docs docs
     *
     * @return self
     */
    public function setDocs($docs)
    {
        $this->container['docs'] = $docs;

        return $this;
    }

    /**
     * Gets doc_postings
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getDocPostings()
    {
        return $this->container['doc_postings'];
    }

    /**
     * Sets doc_postings
     *
     * @param \OpenAPI\Client\Model\UserCapability $doc_postings doc_postings
     *
     * @return self
     */
    public function setDocPostings($doc_postings)
    {
        $this->container['doc_postings'] = $doc_postings;

        return $this;
    }

    /**
     * Gets receipts
     *
     * @return \OpenAPI\Client\Model\UserCapabilityWithSelfOnly
     */
    public function getReceipts()
    {
        return $this->container['receipts'];
    }

    /**
     * Sets receipts
     *
     * @param \OpenAPI\Client\Model\UserCapabilityWithSelfOnly $receipts receipts
     *
     * @return self
     */
    public function setReceipts($receipts)
    {
        $this->container['receipts'] = $receipts;

        return $this;
    }

    /**
     * Gets receipt_stream_editor
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getReceiptStreamEditor()
    {
        return $this->container['receipt_stream_editor'];
    }

    /**
     * Sets receipt_stream_editor
     *
     * @param \OpenAPI\Client\Model\UserCapability $receipt_stream_editor receipt_stream_editor
     *
     * @return self
     */
    public function setReceiptStreamEditor($receipt_stream_editor)
    {
        $this->container['receipt_stream_editor'] = $receipt_stream_editor;

        return $this;
    }

    /**
     * Gets expense_applications
     *
     * @return \OpenAPI\Client\Model\UserCapabilityWithSelfOnly
     */
    public function getExpenseApplications()
    {
        return $this->container['expense_applications'];
    }

    /**
     * Sets expense_applications
     *
     * @param \OpenAPI\Client\Model\UserCapabilityWithSelfOnly $expense_applications expense_applications
     *
     * @return self
     */
    public function setExpenseApplications($expense_applications)
    {
        $this->container['expense_applications'] = $expense_applications;

        return $this;
    }

    /**
     * Gets spreadsheets
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getSpreadsheets()
    {
        return $this->container['spreadsheets'];
    }

    /**
     * Sets spreadsheets
     *
     * @param \OpenAPI\Client\Model\UserCapability $spreadsheets spreadsheets
     *
     * @return self
     */
    public function setSpreadsheets($spreadsheets)
    {
        $this->container['spreadsheets'] = $spreadsheets;

        return $this;
    }

    /**
     * Gets payment_requests
     *
     * @return \OpenAPI\Client\Model\UserCapabilityWithSelfOnly
     */
    public function getPaymentRequests()
    {
        return $this->container['payment_requests'];
    }

    /**
     * Sets payment_requests
     *
     * @param \OpenAPI\Client\Model\UserCapabilityWithSelfOnly $payment_requests payment_requests
     *
     * @return self
     */
    public function setPaymentRequests($payment_requests)
    {
        $this->container['payment_requests'] = $payment_requests;

        return $this;
    }

    /**
     * Gets request_forms
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getRequestForms()
    {
        return $this->container['request_forms'];
    }

    /**
     * Sets request_forms
     *
     * @param \OpenAPI\Client\Model\UserCapability $request_forms request_forms
     *
     * @return self
     */
    public function setRequestForms($request_forms)
    {
        $this->container['request_forms'] = $request_forms;

        return $this;
    }

    /**
     * Gets approval_requests
     *
     * @return \OpenAPI\Client\Model\UserCapabilityWithSelfOnly
     */
    public function getApprovalRequests()
    {
        return $this->container['approval_requests'];
    }

    /**
     * Sets approval_requests
     *
     * @param \OpenAPI\Client\Model\UserCapabilityWithSelfOnly $approval_requests approval_requests
     *
     * @return self
     */
    public function setApprovalRequests($approval_requests)
    {
        $this->container['approval_requests'] = $approval_requests;

        return $this;
    }

    /**
     * Gets reports
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getReports()
    {
        return $this->container['reports'];
    }

    /**
     * Sets reports
     *
     * @param \OpenAPI\Client\Model\UserCapability $reports reports
     *
     * @return self
     */
    public function setReports($reports)
    {
        $this->container['reports'] = $reports;

        return $this;
    }

    /**
     * Gets reports_income_expense
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getReportsIncomeExpense()
    {
        return $this->container['reports_income_expense'];
    }

    /**
     * Sets reports_income_expense
     *
     * @param \OpenAPI\Client\Model\UserCapability $reports_income_expense reports_income_expense
     *
     * @return self
     */
    public function setReportsIncomeExpense($reports_income_expense)
    {
        $this->container['reports_income_expense'] = $reports_income_expense;

        return $this;
    }

    /**
     * Gets reports_receivables
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getReportsReceivables()
    {
        return $this->container['reports_receivables'];
    }

    /**
     * Sets reports_receivables
     *
     * @param \OpenAPI\Client\Model\UserCapability $reports_receivables reports_receivables
     *
     * @return self
     */
    public function setReportsReceivables($reports_receivables)
    {
        $this->container['reports_receivables'] = $reports_receivables;

        return $this;
    }

    /**
     * Gets reports_payables
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getReportsPayables()
    {
        return $this->container['reports_payables'];
    }

    /**
     * Sets reports_payables
     *
     * @param \OpenAPI\Client\Model\UserCapability $reports_payables reports_payables
     *
     * @return self
     */
    public function setReportsPayables($reports_payables)
    {
        $this->container['reports_payables'] = $reports_payables;

        return $this;
    }

    /**
     * Gets reports_cash_balance
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getReportsCashBalance()
    {
        return $this->container['reports_cash_balance'];
    }

    /**
     * Sets reports_cash_balance
     *
     * @param \OpenAPI\Client\Model\UserCapability $reports_cash_balance reports_cash_balance
     *
     * @return self
     */
    public function setReportsCashBalance($reports_cash_balance)
    {
        $this->container['reports_cash_balance'] = $reports_cash_balance;

        return $this;
    }

    /**
     * Gets reports_crosstabs
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getReportsCrosstabs()
    {
        return $this->container['reports_crosstabs'];
    }

    /**
     * Sets reports_crosstabs
     *
     * @param \OpenAPI\Client\Model\UserCapability $reports_crosstabs reports_crosstabs
     *
     * @return self
     */
    public function setReportsCrosstabs($reports_crosstabs)
    {
        $this->container['reports_crosstabs'] = $reports_crosstabs;

        return $this;
    }

    /**
     * Gets reports_general_ledgers
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getReportsGeneralLedgers()
    {
        return $this->container['reports_general_ledgers'];
    }

    /**
     * Sets reports_general_ledgers
     *
     * @param \OpenAPI\Client\Model\UserCapability $reports_general_ledgers reports_general_ledgers
     *
     * @return self
     */
    public function setReportsGeneralLedgers($reports_general_ledgers)
    {
        $this->container['reports_general_ledgers'] = $reports_general_ledgers;

        return $this;
    }

    /**
     * Gets reports_pl
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getReportsPl()
    {
        return $this->container['reports_pl'];
    }

    /**
     * Sets reports_pl
     *
     * @param \OpenAPI\Client\Model\UserCapability $reports_pl reports_pl
     *
     * @return self
     */
    public function setReportsPl($reports_pl)
    {
        $this->container['reports_pl'] = $reports_pl;

        return $this;
    }

    /**
     * Gets reports_bs
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getReportsBs()
    {
        return $this->container['reports_bs'];
    }

    /**
     * Sets reports_bs
     *
     * @param \OpenAPI\Client\Model\UserCapability $reports_bs reports_bs
     *
     * @return self
     */
    public function setReportsBs($reports_bs)
    {
        $this->container['reports_bs'] = $reports_bs;

        return $this;
    }

    /**
     * Gets reports_journals
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getReportsJournals()
    {
        return $this->container['reports_journals'];
    }

    /**
     * Sets reports_journals
     *
     * @param \OpenAPI\Client\Model\UserCapability $reports_journals reports_journals
     *
     * @return self
     */
    public function setReportsJournals($reports_journals)
    {
        $this->container['reports_journals'] = $reports_journals;

        return $this;
    }

    /**
     * Gets reports_managements_planning
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getReportsManagementsPlanning()
    {
        return $this->container['reports_managements_planning'];
    }

    /**
     * Sets reports_managements_planning
     *
     * @param \OpenAPI\Client\Model\UserCapability $reports_managements_planning reports_managements_planning
     *
     * @return self
     */
    public function setReportsManagementsPlanning($reports_managements_planning)
    {
        $this->container['reports_managements_planning'] = $reports_managements_planning;

        return $this;
    }

    /**
     * Gets reports_managements_navigation
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getReportsManagementsNavigation()
    {
        return $this->container['reports_managements_navigation'];
    }

    /**
     * Sets reports_managements_navigation
     *
     * @param \OpenAPI\Client\Model\UserCapability $reports_managements_navigation reports_managements_navigation
     *
     * @return self
     */
    public function setReportsManagementsNavigation($reports_managements_navigation)
    {
        $this->container['reports_managements_navigation'] = $reports_managements_navigation;

        return $this;
    }

    /**
     * Gets manual_journals
     *
     * @return \OpenAPI\Client\Model\UserCapabilityWithSelfOnly
     */
    public function getManualJournals()
    {
        return $this->container['manual_journals'];
    }

    /**
     * Sets manual_journals
     *
     * @param \OpenAPI\Client\Model\UserCapabilityWithSelfOnly $manual_journals manual_journals
     *
     * @return self
     */
    public function setManualJournals($manual_journals)
    {
        $this->container['manual_journals'] = $manual_journals;

        return $this;
    }

    /**
     * Gets fixed_assets
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getFixedAssets()
    {
        return $this->container['fixed_assets'];
    }

    /**
     * Sets fixed_assets
     *
     * @param \OpenAPI\Client\Model\UserCapability $fixed_assets fixed_assets
     *
     * @return self
     */
    public function setFixedAssets($fixed_assets)
    {
        $this->container['fixed_assets'] = $fixed_assets;

        return $this;
    }

    /**
     * Gets inventory_refreshes
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getInventoryRefreshes()
    {
        return $this->container['inventory_refreshes'];
    }

    /**
     * Sets inventory_refreshes
     *
     * @param \OpenAPI\Client\Model\UserCapability $inventory_refreshes inventory_refreshes
     *
     * @return self
     */
    public function setInventoryRefreshes($inventory_refreshes)
    {
        $this->container['inventory_refreshes'] = $inventory_refreshes;

        return $this;
    }

    /**
     * Gets biz_allocations
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getBizAllocations()
    {
        return $this->container['biz_allocations'];
    }

    /**
     * Sets biz_allocations
     *
     * @param \OpenAPI\Client\Model\UserCapability $biz_allocations biz_allocations
     *
     * @return self
     */
    public function setBizAllocations($biz_allocations)
    {
        $this->container['biz_allocations'] = $biz_allocations;

        return $this;
    }

    /**
     * Gets payment_records
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getPaymentRecords()
    {
        return $this->container['payment_records'];
    }

    /**
     * Sets payment_records
     *
     * @param \OpenAPI\Client\Model\UserCapability $payment_records payment_records
     *
     * @return self
     */
    public function setPaymentRecords($payment_records)
    {
        $this->container['payment_records'] = $payment_records;

        return $this;
    }

    /**
     * Gets annual_reports
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getAnnualReports()
    {
        return $this->container['annual_reports'];
    }

    /**
     * Sets annual_reports
     *
     * @param \OpenAPI\Client\Model\UserCapability $annual_reports annual_reports
     *
     * @return self
     */
    public function setAnnualReports($annual_reports)
    {
        $this->container['annual_reports'] = $annual_reports;

        return $this;
    }

    /**
     * Gets tax_reports
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getTaxReports()
    {
        return $this->container['tax_reports'];
    }

    /**
     * Sets tax_reports
     *
     * @param \OpenAPI\Client\Model\UserCapability $tax_reports tax_reports
     *
     * @return self
     */
    public function setTaxReports($tax_reports)
    {
        $this->container['tax_reports'] = $tax_reports;

        return $this;
    }

    /**
     * Gets consumption_entries
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getConsumptionEntries()
    {
        return $this->container['consumption_entries'];
    }

    /**
     * Sets consumption_entries
     *
     * @param \OpenAPI\Client\Model\UserCapability $consumption_entries consumption_entries
     *
     * @return self
     */
    public function setConsumptionEntries($consumption_entries)
    {
        $this->container['consumption_entries'] = $consumption_entries;

        return $this;
    }

    /**
     * Gets tax_return
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getTaxReturn()
    {
        return $this->container['tax_return'];
    }

    /**
     * Sets tax_return
     *
     * @param \OpenAPI\Client\Model\UserCapability $tax_return tax_return
     *
     * @return self
     */
    public function setTaxReturn($tax_return)
    {
        $this->container['tax_return'] = $tax_return;

        return $this;
    }

    /**
     * Gets account_item_statements
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getAccountItemStatements()
    {
        return $this->container['account_item_statements'];
    }

    /**
     * Sets account_item_statements
     *
     * @param \OpenAPI\Client\Model\UserCapability $account_item_statements account_item_statements
     *
     * @return self
     */
    public function setAccountItemStatements($account_item_statements)
    {
        $this->container['account_item_statements'] = $account_item_statements;

        return $this;
    }

    /**
     * Gets month_end
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getMonthEnd()
    {
        return $this->container['month_end'];
    }

    /**
     * Sets month_end
     *
     * @param \OpenAPI\Client\Model\UserCapability $month_end month_end
     *
     * @return self
     */
    public function setMonthEnd($month_end)
    {
        $this->container['month_end'] = $month_end;

        return $this;
    }

    /**
     * Gets year_end
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getYearEnd()
    {
        return $this->container['year_end'];
    }

    /**
     * Sets year_end
     *
     * @param \OpenAPI\Client\Model\UserCapability $year_end year_end
     *
     * @return self
     */
    public function setYearEnd($year_end)
    {
        $this->container['year_end'] = $year_end;

        return $this;
    }

    /**
     * Gets walletables
     *
     * @return \OpenAPI\Client\Model\UserCapabilityWithSync
     */
    public function getWalletables()
    {
        return $this->container['walletables'];
    }

    /**
     * Sets walletables
     *
     * @param \OpenAPI\Client\Model\UserCapabilityWithSync $walletables walletables
     *
     * @return self
     */
    public function setWalletables($walletables)
    {
        $this->container['walletables'] = $walletables;

        return $this;
    }

    /**
     * Gets companies
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getCompanies()
    {
        return $this->container['companies'];
    }

    /**
     * Sets companies
     *
     * @param \OpenAPI\Client\Model\UserCapability $companies companies
     *
     * @return self
     */
    public function setCompanies($companies)
    {
        $this->container['companies'] = $companies;

        return $this;
    }

    /**
     * Gets invitations
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getInvitations()
    {
        return $this->container['invitations'];
    }

    /**
     * Sets invitations
     *
     * @param \OpenAPI\Client\Model\UserCapability $invitations invitations
     *
     * @return self
     */
    public function setInvitations($invitations)
    {
        $this->container['invitations'] = $invitations;

        return $this;
    }

    /**
     * Gets sign_in_logs
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getSignInLogs()
    {
        return $this->container['sign_in_logs'];
    }

    /**
     * Sets sign_in_logs
     *
     * @param \OpenAPI\Client\Model\UserCapability $sign_in_logs sign_in_logs
     *
     * @return self
     */
    public function setSignInLogs($sign_in_logs)
    {
        $this->container['sign_in_logs'] = $sign_in_logs;

        return $this;
    }

    /**
     * Gets backups
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getBackups()
    {
        return $this->container['backups'];
    }

    /**
     * Sets backups
     *
     * @param \OpenAPI\Client\Model\UserCapability $backups backups
     *
     * @return self
     */
    public function setBackups($backups)
    {
        $this->container['backups'] = $backups;

        return $this;
    }

    /**
     * Gets opening_balances
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getOpeningBalances()
    {
        return $this->container['opening_balances'];
    }

    /**
     * Sets opening_balances
     *
     * @param \OpenAPI\Client\Model\UserCapability $opening_balances opening_balances
     *
     * @return self
     */
    public function setOpeningBalances($opening_balances)
    {
        $this->container['opening_balances'] = $opening_balances;

        return $this;
    }

    /**
     * Gets system_conversion
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getSystemConversion()
    {
        return $this->container['system_conversion'];
    }

    /**
     * Sets system_conversion
     *
     * @param \OpenAPI\Client\Model\UserCapability $system_conversion system_conversion
     *
     * @return self
     */
    public function setSystemConversion($system_conversion)
    {
        $this->container['system_conversion'] = $system_conversion;

        return $this;
    }

    /**
     * Gets resets
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getResets()
    {
        return $this->container['resets'];
    }

    /**
     * Sets resets
     *
     * @param \OpenAPI\Client\Model\UserCapability $resets resets
     *
     * @return self
     */
    public function setResets($resets)
    {
        $this->container['resets'] = $resets;

        return $this;
    }

    /**
     * Gets partners
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getPartners()
    {
        return $this->container['partners'];
    }

    /**
     * Sets partners
     *
     * @param \OpenAPI\Client\Model\UserCapability $partners partners
     *
     * @return self
     */
    public function setPartners($partners)
    {
        $this->container['partners'] = $partners;

        return $this;
    }

    /**
     * Gets items
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getItems()
    {
        return $this->container['items'];
    }

    /**
     * Sets items
     *
     * @param \OpenAPI\Client\Model\UserCapability $items items
     *
     * @return self
     */
    public function setItems($items)
    {
        $this->container['items'] = $items;

        return $this;
    }

    /**
     * Gets sections
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getSections()
    {
        return $this->container['sections'];
    }

    /**
     * Sets sections
     *
     * @param \OpenAPI\Client\Model\UserCapability $sections sections
     *
     * @return self
     */
    public function setSections($sections)
    {
        $this->container['sections'] = $sections;

        return $this;
    }

    /**
     * Gets tags
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getTags()
    {
        return $this->container['tags'];
    }

    /**
     * Sets tags
     *
     * @param \OpenAPI\Client\Model\UserCapability $tags tags
     *
     * @return self
     */
    public function setTags($tags)
    {
        $this->container['tags'] = $tags;

        return $this;
    }

    /**
     * Gets account_items
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getAccountItems()
    {
        return $this->container['account_items'];
    }

    /**
     * Sets account_items
     *
     * @param \OpenAPI\Client\Model\UserCapability $account_items account_items
     *
     * @return self
     */
    public function setAccountItems($account_items)
    {
        $this->container['account_items'] = $account_items;

        return $this;
    }

    /**
     * Gets taxes
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getTaxes()
    {
        return $this->container['taxes'];
    }

    /**
     * Sets taxes
     *
     * @param \OpenAPI\Client\Model\UserCapability $taxes taxes
     *
     * @return self
     */
    public function setTaxes($taxes)
    {
        $this->container['taxes'] = $taxes;

        return $this;
    }

    /**
     * Gets user_matchers
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getUserMatchers()
    {
        return $this->container['user_matchers'];
    }

    /**
     * Sets user_matchers
     *
     * @param \OpenAPI\Client\Model\UserCapability $user_matchers user_matchers
     *
     * @return self
     */
    public function setUserMatchers($user_matchers)
    {
        $this->container['user_matchers'] = $user_matchers;

        return $this;
    }

    /**
     * Gets deal_templates
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getDealTemplates()
    {
        return $this->container['deal_templates'];
    }

    /**
     * Sets deal_templates
     *
     * @param \OpenAPI\Client\Model\UserCapability $deal_templates deal_templates
     *
     * @return self
     */
    public function setDealTemplates($deal_templates)
    {
        $this->container['deal_templates'] = $deal_templates;

        return $this;
    }

    /**
     * Gets manual_journal_templates
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getManualJournalTemplates()
    {
        return $this->container['manual_journal_templates'];
    }

    /**
     * Sets manual_journal_templates
     *
     * @param \OpenAPI\Client\Model\UserCapability $manual_journal_templates manual_journal_templates
     *
     * @return self
     */
    public function setManualJournalTemplates($manual_journal_templates)
    {
        $this->container['manual_journal_templates'] = $manual_journal_templates;

        return $this;
    }

    /**
     * Gets cost_allocations
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getCostAllocations()
    {
        return $this->container['cost_allocations'];
    }

    /**
     * Sets cost_allocations
     *
     * @param \OpenAPI\Client\Model\UserCapability $cost_allocations cost_allocations
     *
     * @return self
     */
    public function setCostAllocations($cost_allocations)
    {
        $this->container['cost_allocations'] = $cost_allocations;

        return $this;
    }

    /**
     * Gets approval_flow_routes
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getApprovalFlowRoutes()
    {
        return $this->container['approval_flow_routes'];
    }

    /**
     * Sets approval_flow_routes
     *
     * @param \OpenAPI\Client\Model\UserCapability $approval_flow_routes approval_flow_routes
     *
     * @return self
     */
    public function setApprovalFlowRoutes($approval_flow_routes)
    {
        $this->container['approval_flow_routes'] = $approval_flow_routes;

        return $this;
    }

    /**
     * Gets expense_application_templates
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getExpenseApplicationTemplates()
    {
        return $this->container['expense_application_templates'];
    }

    /**
     * Sets expense_application_templates
     *
     * @param \OpenAPI\Client\Model\UserCapability $expense_application_templates expense_application_templates
     *
     * @return self
     */
    public function setExpenseApplicationTemplates($expense_application_templates)
    {
        $this->container['expense_application_templates'] = $expense_application_templates;

        return $this;
    }

    /**
     * Gets workflows
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getWorkflows()
    {
        return $this->container['workflows'];
    }

    /**
     * Sets workflows
     *
     * @param \OpenAPI\Client\Model\UserCapability $workflows workflows
     *
     * @return self
     */
    public function setWorkflows($workflows)
    {
        $this->container['workflows'] = $workflows;

        return $this;
    }

    /**
     * Gets oauth_applications
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getOauthApplications()
    {
        return $this->container['oauth_applications'];
    }

    /**
     * Sets oauth_applications
     *
     * @param \OpenAPI\Client\Model\UserCapability $oauth_applications oauth_applications
     *
     * @return self
     */
    public function setOauthApplications($oauth_applications)
    {
        $this->container['oauth_applications'] = $oauth_applications;

        return $this;
    }

    /**
     * Gets oauth_authorizations
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getOauthAuthorizations()
    {
        return $this->container['oauth_authorizations'];
    }

    /**
     * Sets oauth_authorizations
     *
     * @param \OpenAPI\Client\Model\UserCapability $oauth_authorizations oauth_authorizations
     *
     * @return self
     */
    public function setOauthAuthorizations($oauth_authorizations)
    {
        $this->container['oauth_authorizations'] = $oauth_authorizations;

        return $this;
    }

    /**
     * Gets bank_accountant_staff_users
     *
     * @return \OpenAPI\Client\Model\UserCapability
     */
    public function getBankAccountantStaffUsers()
    {
        return $this->container['bank_accountant_staff_users'];
    }

    /**
     * Sets bank_accountant_staff_users
     *
     * @param \OpenAPI\Client\Model\UserCapability $bank_accountant_staff_users bank_accountant_staff_users
     *
     * @return self
     */
    public function setBankAccountantStaffUsers($bank_accountant_staff_users)
    {
        $this->container['bank_accountant_staff_users'] = $bank_accountant_staff_users;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


